{"version":3,"sources":["assets/images/ground.jpeg","assets/images/warrior.png","assets/images/tree.png","assets/images/goblin_regular.png","assets/images/index.js","theme.js","App/PageWrapper/PageWrapperStyle.js","components/Header/styledHeader.js","components/StyledContainer/index.js","App/routes.js","components/Button/styledButton.js","components/Button/index.js","components/Header/index.js","App/PageWrapper/PageWrapper.js","pages/home/StyledHome.js","pages/home/index.js","pages/help/index.js","components/Grid/styledGrid.js","actions/GridActions.js","action-types/GridActionTypes.js","actions/TurnActions.js","action-types/TurnActionsTypes.js","logic-functions/helper-functions.js","logic-functions/grid.js","logic-functions/animations.js","logic-functions/turn.js","logic-functions/ai.js","components/Cell/styledCell.js","components/CellContent/styledCellContent.js","components/CellContent/index.js","components/Cell/index.js","components/Sidebar/Console/styledConsole.js","components/Sidebar/Console/index.js","components/Sidebar/SidebarInfo/styledSidebarInfo.js","components/CharacterInfo/styledCharacterInfo.js","components/CharacterInfo/index.js","components/Sidebar/SidebarInfo/index.js","components/Sidebar/styledSidebar.js","components/Sidebar/index.js","components/GridHeader/styledGridHeader.js","components/TurnBar/styledTurnBar.js","components/TurnBar/index.js","components/ControlBar/styledControlBar.js","components/Spinner/styledSpinner.js","components/Spinner/index.js","components/ControlBar/index.js","components/GridHeader/index.js","components/Grid/index.js","pages/battle/index.js","App/GlobalStyle.js","App/App.js","reducers/GridReducer.js","reducers/ConfigReducer.js","action-types/ConfigActionTypes.js","reducers/TurnReducer.js","reducers/index.js","store/index.js","App/index.js"],"names":["module","exports","backgroundImg","ground","characterImg","warrior","tree","goblin","colors","black","white","whiteTransparent","blue","navy","gray","greenTransparent","glassTransparent","glass","redTransparent","boxShadow","standard","large","standardInset","largeInset","standarInsetWithColor","color","borderRadius","breakpoints","sm","media","small","fonts","Wrapper","styled","div","FooterWrapper","HeaderWrapper","HeaderList","ul","StyledContainer","home","battle","about","StyledButton","props","disabled","types","primary","secondary","Button","text","func","type","ButtonType","onClick","propTypes","PropTypes","string","bool","defaultProps","Header","location","useLocation","pathname","to","routes","PageWrapper","interacted","setInteracted","useState","children","object","childrenchildren","connect","state","dispatch","StyledHome","Home","Help","StyledGrid","empty","StyledGridWrapper","updateGrid","grid","gameId","createGrid","settings","destroyGrid","startTurn","nextMove","resetTurn","random","min","max","Math","floor","waitFor","time","Promise","resolve","setTimeout","fillGrid","fill","rows","newGrid","JSON","parse","stringify","forbiddenTiles","randomisedFill","i","obstacles","randomFill","includes","push","console","log","randomiseFill","forEach","obstacle","image","terrain","characters","character","index","stats","performAttack","attacker","defender","attackResult","attackRoll","attack","isHit","ac","attackBonus","defenderAC","calculateAttack","damageResult","damage","hp","isDead","calculateDamage","clearPath","map","cell","path","direction","GridHelper","makeGrid","columns","j","adjecent","visited","animation","sound","up","down","length","left","right","makeAdjacentMatrix","List","startSearch","start","target","newGridJS","toJS","actingCharacter","isAttack","player","get","result","finalPath","paths","searchStep","newPaths","adjecentCell","newPath","counter","searchForPath","tilesToMove","speed","withMutations","setIn","fillPath","splice","moveCharacter","clearTile","tile","updateCharacter","oppositeDirections","Animations","moveAnimationBuilder","timeUnit","isAttacked","animationString","timePercentage","percentage","top","attackDirection","find","oppositeDirecetion","topStarting","leftStarting","keyframes","selected","first","last","setNextCharacter","allCharacters","newAllCharacters","lastCharacter","shift","TurnFunctions","sortCharacters","value","sort","a","b","findCharacters","filter","humanCharacters","aiCharacters","updateCharacters","updatedAllCharacters","turnInfo","activeCharacterIds","id","toUpdate","updateChar","activeCharacter","weightValues","AC","targetHP","damageMax","targetAttack","targetDamageMax","checkPossibleMoves","possibleMoves","canAttack","searchResult","move","moves","calculatedWeight","weightBreakdown","weight","toHitChance","remainingHP","canKill","threatLevel","assignWeight","AiFunctions","maxWeight","randomPick","choseMove","StyledCell","basis","StyledCellContent","playerBorders","human","ai","getAnimation","StyledCellContentWrapper","StyledIndicator","CellContent","isRequired","oneOfType","number","GridReducer","GridActions","Cell","onMouseEnter","ConfigReducer","StyledConsole","playerColors","Console","action","gameInProgress","actions","setActions","useEffect","story","playerColor","skipped","name","key","dangerouslySetInnerHTML","__html","StyledSidebarInfo","StyledCharacterInfo","StyledCharacterInfoStat","StyledCharacterInfoTitle","StyledCharacterInfoImage","CharacterInfo","SidebarInfo","hoverCharacter","StyledSidebar","Sidebar","StyledGridHeader","moved","StyledTitle","StyledTurnBar","StyledTBCellContent","StyledTBIndicator","StyledTBContentWrapper","TurnBar","setCharacters","async","animatedCharacters","changeTurnOrder","cellSelected","mapCharactersToView","array","TurnReducer","StyledControlBarWrapper","StyledControlBar","StyledSpinner","Spinner","className","ControlBar","endGame","startGame","skipTurn","isAiTurn","waitForCleanUp","setWaitForCleanUp","GridHeader","setIsAiTurn","selectedCharacter","getIn","Grid","setSelected","isSelected","setIsSelected","setSelectedCharacter","animationProgress","setAnimationProgress","setAction","setHoverCharacter","setGameId","useRef","alert","updateSelectedCharacter","size","tileToMove","animateAndMove","defenderIndex","nextMoveCheck","updateGridCheck","gameIdd","current","clearSelectedCharacter","attackTime","moveAllowed","Date","now","TurnActions","Battle","GlobalStyle","createGlobalStyle","App","basename","process","theme","component","exact","DEFAULT_STATE","muted","round","this","maxHp","initiative","Map","currentPlayer","turnOrder","combineReducers","store","createStore","rootReducer","applyMiddleware","logger","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0b1f5d93.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ground.a82d3ec6.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/warrior.d8b023eb.png\";","module.exports = __webpack_public_path__ + \"static/media/tree.f7e58740.png\";","module.exports = __webpack_public_path__ + \"static/media/goblin_regular.a22efcb7.png\";","import ground from './ground.jpeg';\nimport warrior from './warrior.png';\nimport tree from './tree.png';\nimport goblin from './goblin_regular.png';\n\nexport const backgroundImg = ground;\nexport const characterImg = { warrior, tree, goblin };\n","export const colors = {\n  black: '#252525',\n  white: '#fff',\n  whiteTransparent: 'rgba(255, 255, 255, 0.8)',\n  blue: '#007ce0',\n  navy: '#004175',\n  gray: '#5c5c5c50',\n  greenTransparent: '#5ea56a',\n  glassTransparent: 'rgba(190,255,247, 0.6)',\n  glass: 'rgba(190,255,247, 0.8)',\n  redTransparent: '#df4646',\n};\n\nexport const boxShadow = {\n  standard: '2px 1px 5px 2px rgba(0, 0, 0, 0.4)',\n  large: '5px 0px 10px 5px rgba(0, 0, 0, 0.8)',\n  standardInset: 'inset 1px 1px 5px -2px rgba(0, 0, 0, 0.8)',\n  largeInset: 'inset 1px 1px 20px -4px rgba(0, 0, 0, 0.8)',\n  standarInsetWithColor: color => `inset 1px 1px 20px -4px ${color}`,\n};\n\nexport const borderRadius = {\n  standard: '6px',\n  large: '20px',\n};\n\nconst breakpoints = ['425px'];\n\nbreakpoints.sm = breakpoints[0];\n\nexport const media = {\n  small: `(min-width: ${breakpoints[0]})`,\n};\n\nexport const fonts = {\n  regular: 'Lora',\n  bold: 'Lora-Bold',\n};\n\nexport default {\n  colors,\n  breakpoints,\n  boxShadow,\n};\n","import styled from \"styled-components\";\nimport { backgroundImg } from \"../../assets/images\";\nimport { colors, boxShadow, borderRadius, fonts } from '../../theme';\n\nexport const Wrapper = styled.div`\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  background: url(${backgroundImg}) center center/cover no-repeat;\n  overflow: hidden;\n  font-family: ${fonts.regular};\n`;\n\nexport const FooterWrapper = styled.div`\n  margin-top: auto;\n  background-color: ${colors.whiteTransparent};\n  box-shadow: ${boxShadow.standard};\n  border-radius: ${borderRadius.large};\n  height: 50px;\n  padding: 5px 20px;\n  display: flex;\n  position: relative;\n  top: 27px;\n  font-size: 14px;\n  justify-content: center;\n`;\n","import styled from 'styled-components';\nimport { colors, boxShadow, media, borderRadius } from '../../theme';\n\nexport const HeaderWrapper = styled.div`\n  box-shadow: ${boxShadow.large};\n  border-radius: ${borderRadius.large};\n  position: relative;\n  top: -20px;\n  padding: 30px 10px 10px 10px;\n  background-color: ${colors.whiteTransparent};\n  max-height: 142px;\n  padding-bottom: 0;\n\n  @media ${media.small} {\n    max-height: 96px;\n    padding-bottom: 10px;\n  }\n`;\n\nexport const HeaderList = styled.ul`\n  display: flex;\n  justify-content: space-around;\n  flex-wrap: wrap;\n\n  @media ${media.small} {\n    flex-wrap: nowrap;\n  }\n`;\n","import styled from \"styled-components\";\n\nexport const StyledContainer = styled.div`\n  max-width: 1000px;\n  margin: auto;\n  padding: 10px;\n  width: 100%;\n`;\n","export default {\n    home: '/',\n    battle: '/battle',\n    about: '/about',\n}","import styled from 'styled-components';\nimport { colors, boxShadow, borderRadius, media } from '../../theme';\n\nexport const StyledButton = styled.div`\n  padding: 5px 10px;\n  background-color: ${colors.white};\n  min-width: 100px;\n  border-radius: ${borderRadius.standard};\n  box-shadow: ${boxShadow.standardInset}, 0 0 0 rgba(255, 255, 255, 0);\n  transition: all 300ms ease-in-out;\n  cursor: ${props => (props.disabled ? 'default' : 'pointer')};\n  background-color: ${props => (props.disabled ? colors.gray : '')};\n\n  ${props =>\n    props.disabled\n      ? ''\n      : `  &:hover {\n    box-shadow: inset 0 0 0 rgba(255, 255, 255, 0), ${boxShadow.standard};\n  }`}\n\n  @media ${media.small} {\n    margin-bottom: 0;\n  }\n`;\n\nexport const StyledButtonPrimary = styled(StyledButton)`\n  padding: 10px 40px;\n  margin-bottom: 10px;\n`;\n\nexport const StyledButtonSecondary = styled(StyledButton)`\n  padding: 7px 14px;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { StyledButton, StyledButtonPrimary, StyledButtonSecondary } from './styledButton';\n\nconst types = {\n    primary: StyledButtonPrimary,\n    secondary: StyledButtonSecondary,\n}\n\nconst Button = props => {\n  const { text, func, disabled, type } = props;\n\n  const ButtonType = types[type] || StyledButton;\n\n  return (\n    <ButtonType onClick={func} disabled={disabled}>\n      {text}\n    </ButtonType>\n  );\n};\n\nButton.propTypes = {\n  text: PropTypes.string,\n  func: PropTypes.func,\n  disabled: PropTypes.bool,\n  type: PropTypes.string,\n};\n\nButton.defaultProps = {\n  text: '',\n  func: () => {},\n  disabled: false,\n  type: '',\n};\n\nexport default Button;\n","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { HeaderWrapper, HeaderList } from './styledHeader';\nimport { StyledContainer } from '../StyledContainer';\nimport routes from '../../App/routes';\nimport Button from '../Button';\n\nconst Header = props => {\n  let location = useLocation().pathname;\n\n  return (\n    <HeaderWrapper>\n      <StyledContainer>\n        <nav>\n          <HeaderList>\n            <Link to={routes.home}>\n              <Button\n                type={'primary'}\n                disabled={location === routes.home}\n                text={'Home'}\n              />\n            </Link>\n            <Link to={routes.battle}>\n              <Button\n                type={'primary'}\n                disabled={location === routes.battle}\n                text={'Battle'}\n              />\n            </Link>\n            <Link to={routes.about}>\n              <Button\n                type={'primary'}\n                disabled={location === routes.about}\n                text={'About'}\n              />\n            </Link>\n          </HeaderList>\n        </nav>\n      </StyledContainer>\n    </HeaderWrapper>\n  );\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Wrapper, FooterWrapper } from './PageWrapperStyle';\nimport Header from '../../components/Header';\n\nconst PageWrapper = props => {\n  const [interacted, setInteracted] = useState(false);\n\n  return (\n    <Wrapper\n      onClick={() => {\n        !interacted && setInteracted(true);\n      }}\n    >\n      <Header />\n\n      {props.children}\n\n      <FooterWrapper>Created by - Stefan Deak</FooterWrapper>\n    </Wrapper>\n  );\n};\n\nPageWrapper.propTypes = {\n  children: PropTypes.object,\n};\n\nPageWrapper.defaultProps = {\n  childrenchildren: {},\n};\n\nconst mapStateToProps = state => ({});\n\nconst mapDispatchToProps = dispatch => ({});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PageWrapper);\n","import styled from 'styled-components';\nimport { colors, boxShadow, borderRadius, fonts } from '../../theme';\n\nexport const StyledHome = styled.div`\n  min-height: calc(100vh - 200px);\n  background-color: ${colors.whiteTransparent};\n  border-radius: ${borderRadius.large};\n  box-shadow: ${boxShadow.standard};\n  display: flex;\n  flex-direction: column;\n  padding-bottom: 40px;\n  margin-bottom: -12px;\n\n  h1 {\n      margin-top: 80px;\n      font-size: 42px;\n      text-align: center;\n      width: 100%;\n      font-family: ${fonts.bold};\n      margin-bottom: 40px;\n  }\n\n  p {\n      margin-top: 20px;\n      font-size: 22px;\n      font-family: ${fonts.bold};\n  }\n`;\n","import React from 'react';\nimport { StyledHome } from './StyledHome';\nimport { StyledContainer } from '../../components/StyledContainer';\n\nconst Home = props => {\n  return (\n    <StyledContainer>\n      <StyledHome>\n        <h1>React.js Grid Battle</h1>\n        <p>Welcome!</p>\n        <p>Battle AI in procedurally generated maps.</p>\n      </StyledHome>\n    </StyledContainer>\n  );\n};\n\nexport default Home;\n","import React from 'react';\n\nconst Help = props => {\n    return (\n        <div>\n            <h1>Help page</h1>\n        </div>\n    );\n};\n\nexport default Help;\n","import styled from 'styled-components';\nimport { colors, boxShadow, borderRadius } from '../../theme';\n\nexport const StyledGrid = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  width: 66.66%;\n  box-shadow: ${boxShadow.standard};\n  border-radius: ${borderRadius.standard};\n  background-color: ${props => props.empty ? colors.glassTransparent : 'transparent'};\n  padding-top: ${props => props.empty ? '66.66%' : '0'};\n  overflow: hidden;\n`;\n\nexport const StyledGridWrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n`;\n","import * as ACTION_TYPES from '../action-types';\n\nexport const updateGrid = (grid, gameId) => ({\n  type: ACTION_TYPES.UPDATE_GRID,\n  grid,\n  gameId,\n});\n\nexport const createGrid = (settings, gameId) => ({\n  type: ACTION_TYPES.CREATE_GRID,\n  settings,\n  gameId,\n});\n\nexport const destroyGrid = () => ({\n  type: ACTION_TYPES.DESTROY_GRID,\n});\n","export const UPDATE_GRID = 'UPDATE_GRID';\nexport const CREATE_GRID = 'CREATE_GRID';\nexport const DESTROY_GRID = 'DESTROY_GRID';\n\n","import * as ACTION_TYPES from '../action-types';\n\nexport const startTurn = (grid, gameId) => ({\n  type: ACTION_TYPES.START_TURN,\n  grid,\n  gameId,\n});\n\nexport const nextMove = (grid, gameId) => ({\n  type: ACTION_TYPES.NEXT_MOVE,\n  grid,\n  gameId,\n});\n\nexport const resetTurn = gameId => ({\n  type: ACTION_TYPES.RESET_TURN,\n  gameId,\n});\n\n","export const START_TURN = 'START_TURN';\nexport const NEXT_MOVE = 'NEXT_MOVE';\nexport const RESET_TURN = 'RESET_TURN';\n","// **** Helper Functions ***** //\n// **                       ** //\n\nexport const random = (min, max) => {\n  return Math.floor(Math.random() * (max - min) + min);\n};\n\nexport const waitFor = time => {\n  return new Promise(resolve => {\n    setTimeout(() => {\n      resolve();\n    }, time);\n  });\n};\n","import { List } from 'immutable';\nimport { random } from './helper-functions';\n\n// **** Map Generation Functions ***** //\n// **                               ** //\n\nconst randomiseFill = (grid, fill, rows) => {\n  const forbiddenTiles = [\n    2,\n    3,\n    4,\n    5,\n    6,\n    7,\n    92,\n    93,\n    94,\n    95,\n    95,\n    96,\n    97,\n    15,\n    25,\n    35,\n    45,\n    55,\n    65,\n    75,\n    85,\n  ];\n  let randomisedFill = [];\n\n  for (let i = 0; i < fill.obstacles(); ++i) {\n    let randomFill = random(0, rows * rows - 1);\n\n    if (forbiddenTiles.includes(randomFill)) {\n      --i;\n    } else {\n      randomisedFill.push(randomFill);\n    }\n  }\n\n  console.log(randomisedFill);\n\n  return randomisedFill;\n};\n\n// **** Grid Creator functions ***** //\n// **                             ** //\n\nconst makeAdjacentMatrix = (grid, rows, columns) => {\n  let newGrid = JSON.parse(JSON.stringify(grid));\n\n  newGrid.forEach((cell, index) => {\n    let adjecent = [];\n\n    let up = index - columns;\n    up > -1 && adjecent.push({ index: up, direction: 'up' });\n\n    let down = index + columns;\n    down < newGrid.length && adjecent.push({ index: down, direction: 'down' });\n\n    let left = index - 1;\n    left >= 0 &&\n      index % columns !== 0 &&\n      adjecent.push({ index: left, direction: 'left' });\n\n    let right = index + 1;\n    right < newGrid.length &&\n      right % columns !== 0 &&\n      adjecent.push({ index: right, direction: 'right' });\n\n    cell.adjecent = adjecent;\n  });\n\n  return newGrid;\n};\n\nconst fillGrid = (grid, fill, rows) => {\n  let newGrid = JSON.parse(JSON.stringify(grid));\n\n  const randomisedFill = randomiseFill(grid, fill, rows);\n\n  randomisedFill.forEach(obstacle => {\n    newGrid[obstacle].fill = 'X';\n    newGrid[obstacle].image = 'tree';\n    newGrid[obstacle].terrain = 'grass';\n  });\n\n  fill.characters.forEach(character => {\n    newGrid[character.index].fill = character.fill;\n    newGrid[character.index].image = character.image;\n    newGrid[character.index].stats = character;\n  });\n\n  return newGrid;\n};\n\nconst makeGrid = ({ rows, columns, fill }) => {\n  let grid = [];\n  for (let i = 0; i < rows; ++i) {\n    for (let j = 0; j < columns; ++j) {\n      grid.push({\n        index: i * columns + j,\n        fill: '',\n        adjecent: [],\n        visited: 0,\n        path: 0,\n        image: '',\n        terrain: 'grass',\n        animation: null,\n        direction: null,\n        sound: 'click',\n      });\n    }\n  }\n\n  grid = makeAdjacentMatrix(grid, rows, columns);\n\n  grid = fillGrid(grid, fill, rows);\n\n  return List(grid);\n};\n\n// **** Attack Function ***** //\n// **                      ** //\n\nconst calculateAttack = (attacker, defender) => {\n  const attackRoll = random(1, 20);\n  const attack = attacker.attack + attackRoll;\n  const isHit = attack >= defender.ac;\n\n  return {\n    isHit,\n    attack,\n    attackRoll,\n    attackBonus: attacker.attack,\n    defenderAC: defender.ac,\n  };\n};\n\nconst calculateDamage = (attacker, defender) => {\n  const damage = random(attacker.damage[0], attacker.damage[1]);\n  const hp = defender.hp - damage;\n  const isDead = hp <= 0;\n\n  return { isDead, damage, hp };\n};\n\nconst performAttack = (attacker, defender) => {\n  const attackResult = calculateAttack(attacker, defender);\n  const damageResult = attackResult.isHit\n    ? calculateDamage(attacker, defender)\n    : false;\n\n  return { attackResult, damageResult };\n};\n\n// **** Grid Cleanup and Paint functions ***** //\n// **                                       ** //\n\nconst clearPath = grid => {\n  return grid.map(cell => {\n    cell.path = 0;\n    cell.direction = null;\n    return cell;\n  });\n};\n\nconst fillPath = (grid, path) => {\n  let newGrid = clearPath(grid);\n\n  return newGrid.withMutations(newGrid => {\n    path.forEach(cell => {\n      newGrid.setIn([cell.index, 'path'], 1);\n    });\n  });\n};\n\n// **** Grid Search functions ***** //\n// **\n\n/* asd sasd asd asd */\n\nconst searchForPath = (grid, start, target) => {\n  let newGrid = grid.toJS();\n\n  let paths = [[newGrid[start]]];\n  let finalPath;\n\n  const searchStep = () => {\n    const newPaths = [];\n    paths.forEach(path => {\n      path[path.length - 1].adjecent.forEach(adjecentCell => {\n        if (newGrid[adjecentCell.index].index === target) {\n          finalPath = path;\n          newGrid[adjecentCell.index].direction = adjecentCell.direction;\n          finalPath.push(newGrid[adjecentCell.index]);\n        } else if (\n          newGrid[adjecentCell.index].visited === 0 &&\n          !newGrid[adjecentCell.index].fill\n        ) {\n          newGrid[adjecentCell.index].visited = 1;\n          const newPath = JSON.parse(JSON.stringify(path));\n          newPath.push(newGrid[adjecentCell.index]);\n          newPath[newPath.length - 1].direction = adjecentCell.direction;\n          newPaths.push(newPath);\n        }\n      });\n    });\n    return newPaths;\n  };\n\n  let counter = 0;\n  do {\n    ++counter;\n    if (counter > 299) {\n      console.log('time out!');\n    }\n    paths = searchStep();\n    if (finalPath) {\n      return finalPath;\n    } else if (paths.length === 0) {\n      console.log('path impossible!');\n      return false;\n    }\n  } while (!finalPath && counter < 300);\n};\n\nconst startSearch = (grid, start, target, character) => {\n  let newGrid = grid;\n  let newGridJS = newGrid.toJS();\n\n  const actingCharacter = newGridJS[start].stats;\n  const isAttack =\n    newGridJS[target].stats &&\n    newGridJS[target].stats.player !== actingCharacter.player;\n\n  if ((newGrid.get(target).fill && !isAttack) || (!start && start !== 0)) {\n    return null;\n  }\n\n  let result = searchForPath(grid, start, target);\n\n  let tilesToMove = character.speed;\n  let attackResult;\n  const isAttackPossible =\n    isAttack && result && result.length <= character.speed + 1;\n\n  if (isAttackPossible) {\n    if (result.length > character.speed) {\n      tilesToMove = character.speed;\n    } else {\n      tilesToMove = result.length - 1;\n    }\n    attackResult = performAttack(actingCharacter, newGridJS[target].stats);\n  }\n\n  if (result) {\n    result = result.splice(0, tilesToMove);\n    newGrid = fillPath(grid, result);\n    return { grid: List(newGrid), result, attackResult };\n  } else {\n    return null;\n  }\n};\n\n// **** Grid Move functions ***** //\n// **                          ** //\n\nconst moveCharacter = (grid, character, target) =>\n  grid\n    .setIn([character.index, 'fill'], '')\n    .setIn([character.index, 'image'], '')\n    .setIn([character.index, 'stats'], '')\n    .setIn([target.index, 'image'], character.image)\n    .setIn([target.index, 'fill'], character.fill)\n    .setIn([target.index, 'stats'], character)\n    .setIn([target.index, 'stats', 'index'], target.index);\n\nconst clearTile = (grid, tile) =>\n  grid\n    .setIn([tile, 'image'], '')\n    .setIn([tile, 'stats'], '')\n    .setIn([tile, 'fill'], '')\n    .setIn([tile, 'sound'], 'click');\n\nconst updateCharacter = (grid, character) =>\n  grid.setIn([character.index, 'stats'], character.stats);\n\nexport const GridHelper = {\n  makeGrid,\n  startSearch,\n  clearPath,\n  moveCharacter,\n  clearTile,\n  updateCharacter,\n};\n","import { keyframes } from 'styled-components';\n\nconst oppositeDirections = {\n  up: 'down',\n  down: 'up',\n  left: 'right',\n  right: 'left',\n};\n\nconst moveAnimationBuilder = (path, timeUnit, target) => {\n  const isAttacked = target.attackResult;\n  const attackTime = 3;\n\n  let animationString = ` 0% {\n      top: 0%;\n      left: 0%;\n    }\n  `;\n\n  const timePercentage = isAttacked\n    ? 100 / (path.length + attackTime)\n    : 100 / path.length;\n\n  let top = 0,\n    left = 0;\n  let percentage;\n\n  path.forEach((cell, index) => {\n    percentage =\n      path.length - 1 === index && !isAttacked ? 100 : timePercentage * index;\n\n    if (cell.direction === 'up') {\n      top -= 100;\n    } else if (cell.direction === 'down') {\n      top += 100;\n    } else if (cell.direction === 'left') {\n      left -= 100;\n    } else if (cell.direction === 'right') {\n      left += 100;\n    }\n\n    if (index !== 0) {\n      animationString += `\n        ${percentage}% {\n          top: ${top}%;\n          left: ${left}%;\n      }`;\n    }\n  });\n\n  if (isAttacked) {\n    const attackDirection = path[path.length - 1].adjecent.find(\n      cell => cell.index === target.defender.index\n    ).direction;\n    const oppositeDirecetion = oppositeDirections[attackDirection];\n    const topStarting = top;\n    const leftStarting = left;\n\n    percentage = percentage + timePercentage * 2;\n\n    if (oppositeDirecetion === 'up') {\n      top -= 50;\n    } else if (oppositeDirecetion === 'down') {\n      top += 50;\n    } else if (oppositeDirecetion === 'left') {\n      left -= 50;\n    } else if (oppositeDirecetion === 'right') {\n      left += 50;\n    }\n\n    animationString += `\n      ${percentage}% {\n        top: ${top}%;\n        left: ${left}%;\n      }`;\n\n    percentage = percentage + timePercentage / 4;\n\n    animationString += `\n      ${percentage}% {\n        top: ${top}%;\n        left: ${left}%;\n      }`;\n\n    percentage = percentage + timePercentage / 3;\n\n    if (attackDirection === 'up') {\n      top -= 90;\n    } else if (attackDirection === 'down') {\n      top += 90;\n    } else if (attackDirection === 'left') {\n      left -= 90;\n    } else if (attackDirection === 'right') {\n      left += 90;\n    }\n\n    animationString += `\n    ${percentage}% {\n      top: ${top}%;\n      left: ${left}%;\n    }`;\n\n    animationString += `\n      100% {\n        top: ${topStarting}%;\n        left: ${leftStarting}%;\n      }\n    `;\n  }\n\n  const animation = keyframes`\n  ${animationString}\n`;\n  const time = isAttacked\n    ? timeUnit * (path.length + attackTime)\n    : timeUnit * (path.length - 1);\n\n  return { animation, time };\n};\n\nconst selected = keyframes`\n  0% {\n    transform: rotate(0deg);\n  }\n\n  33.2% {\n    transform: rotate(-16deg);\n  }\n\n  83.18% {\n    transform: rotate(8deg);\n  }\n\n  100% {\n    transform: rotate(0deg);\n  }\n  \n`;\n\nconst first = keyframes`\n  0% {\n    opacity: 1;\n  }\n\n  50% {\n    opacity: 0;\n    width: 50px;\n    min-width: 50px;\n  }\n\n  100% {\n    width: 0px;\n    min-width: 0px;\n    opacity: 0;\n  }\n`;\n\nconst last = keyframes`\n  0% {\n    opacity: 0;\n  }\n\n  100% {\n    opacity: 1;\n  }\n`;\n\nexport const Animations = {\n  moveAnimationBuilder,\n  selected,\n  first,\n  last,\n};\n","const sortCharacters = (characters, value = 'initiative') => {\n  const sortedCharacters = JSON.parse(JSON.stringify(characters));\n  return sortedCharacters.sort((a, b) => b[value] - a[value]);\n};\n\nconst findCharacters = grid => {\n  const allCharacters = grid\n    .filter((value, index) => value.fill === 'C')\n    .map(character => character.stats);\n  const humanCharacters = allCharacters.filter(\n    value => value.player === 'human',\n  );\n\n  const aiCharacters = allCharacters.filter(value => value.player === 'ai');\n\n  return {\n    allCharacters: allCharacters.toJS(),\n    humanCharacters: humanCharacters.toJS(),\n    aiCharacters: aiCharacters.toJS(),\n  };\n};\n\nconst setNextCharacter = allCharacters => {\n  let newAllCharacters = JSON.parse(JSON.stringify(allCharacters));\n  const lastCharacter = newAllCharacters.shift();\n  return [...newAllCharacters, lastCharacter];\n};\n\nconst updateCharacters = (state, grid) => {\n  let updatedAllCharacters = setNextCharacter(state.turnInfo.get('allCharacters'));\n  const {\n    allCharacters,\n    humanCharacters,\n    aiCharacters,\n  } = TurnFunctions.findCharacters(grid);\n\n  const activeCharacterIds = allCharacters.map(character => character.id);\n\n  updatedAllCharacters = updatedAllCharacters.filter(character => activeCharacterIds.includes(character.id));\n\n  updatedAllCharacters = updatedAllCharacters.map(character => {\n    const toUpdate = allCharacters.find(updateChar => updateChar.id === character.id);\n    character = toUpdate;\n    return character;\n  });\n\n  const activeCharacter = updatedAllCharacters[0];\n\n  return { allCharacters: updatedAllCharacters, aiCharacters, humanCharacters, activeCharacter };\n};\n\nexport const TurnFunctions = {\n  sortCharacters,\n  setNextCharacter,\n  findCharacters,\n  updateCharacters,\n};\n","import { GridHelper } from './grid';\nimport { random } from './helper-functions';\n\nconst weightValues = {\n  toHitChance: (attack, AC) => {\n    return attack - AC > 0 ? 100 : -50;\n  },\n  canKill: (targetHP, damageMax) => {\n    return targetHP - damageMax <= 0 ? 200 : 0;\n  },\n  remainingHP: targetHP => (10 - targetHP > 0 ? (10 - targetHP) * 20 : 0),\n  threatLevel: (targetAttack, targetDamageMax) => {\n    return (targetAttack + targetDamageMax) * 10;\n  },\n};\n\nconst assignWeight = moves => {\n  const weightedMoves = moves.map(move => {\n    const activeCharacter = move.stats;\n    const target = move.target;\n    let calculatedWeight = 0;\n    let weightBreakdown = {};\n\n    let weight = 0;\n\n    const toHitChance = weightValues.toHitChance(\n      activeCharacter.attack,\n      target.ac\n    );\n    weight += toHitChance;\n    weightBreakdown.toHitChance = toHitChance;\n\n    const remainingHP = weightValues.remainingHP(target.hp);\n    weight += remainingHP;\n    weightBreakdown.remainingHP = remainingHP;\n\n    const canKill = weightValues.canKill(target.hp, activeCharacter.damage[1]);\n    weight += canKill;\n    weightBreakdown.canKill = canKill;\n\n    const threatLevel = weightValues.threatLevel(\n      target.attack,\n      target.damage[1]\n    );\n    weight += threatLevel;\n    weightBreakdown.threatLevel = threatLevel;\n\n    calculatedWeight = calculatedWeight + weight;\n\n    return { ...move, weight, calculatedWeight, weightBreakdown };\n  });\n\n  return weightedMoves;\n};\n\nconst checkPossibleMoves = (grid, activeCharacter, humanCharacters) => {\n  let possibleMoves = [];\n  let canAttack = false;\n\n  humanCharacters.forEach(character => {\n    const searchResult = GridHelper.startSearch(\n      grid,\n      activeCharacter.index,\n      character.index,\n      activeCharacter\n    );\n\n    if (searchResult) {\n      possibleMoves.push({\n        result: searchResult,\n        index: character.index,\n        target: character,\n        stats: activeCharacter,\n      });\n\n      if (!canAttack && searchResult.attackResult) {\n        canAttack = true;\n      }\n    }\n  });\n\n  if (canAttack) {\n    possibleMoves = possibleMoves.filter(move => move.result.attackResult);\n  }\n\n  return assignWeight(possibleMoves);\n};\n\nconst choseMove = moves => {\n  const maxWeight = moves[moves.length - 1].calculatedWeight;\n  const randomPick = random(0, maxWeight);\n\n  for (let i = 0; i < moves.length; i++) {\n    if (randomPick - moves[i].calculatedWeight <= 0) {\n      return moves[i].index;\n    }\n  }\n};\n\nconst calculateAiMove = (grid, activeCharacter, humanCharacters) => {\n  const possibleMoves = checkPossibleMoves(\n    grid,\n    activeCharacter,\n    humanCharacters\n  );\n\n  if (possibleMoves.length > 0) {\n    return choseMove(possibleMoves);\n  } else {\n    return null;\n  }\n};\n\nexport const AiFunctions = {\n  calculateAiMove,\n};\n","import styled from 'styled-components';\nimport { colors, boxShadow } from '../../theme';\n\nexport const StyledCell = styled.div`\n  display: flex;\n  position: relative;\n  background: ${colors.glassTransparent};\n  flex-basis: ${props => props.basis};\n  padding-top: ${props => props.basis};\n  cursor: ${props => props.fill === 'brown' ? 'not-allowed' : 'pointer'};\n  box-shadow: ${boxShadow.standardInset};\n`;\nexport const StyledCellContent = styled.div`\n  justify-content: center;\n  align-items: center;\n  display: flex;\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  top: 0;\n  left: 0;\n  transition: all 400ms ease; \n  background: ${props => props.path ? 'rgba(255, 192, 203, 0.3)' : 'transparent'};\n  &:hover {\n    box-shadow: ${boxShadow.largeInset};\n  }\n`;\n","import styled from 'styled-components';\nimport { characterImg } from '../../assets/images';\nimport { colors, boxShadow } from '../../theme';\nimport { Animations } from '../../logic-functions';\n\nconst playerBorders = {\n  human: colors.greenTransparent,\n  ai: colors.redTransparent,\n};\n\nconst getAnimation = (selected, animation) => {\n  if (animation && animation.animation) {\n    return [animation.animation, `${animation.time}ms linear forwards`];\n  } else if (selected) {\n    return [Animations.selected, '2s linear infinite'];\n  } else {\n    return '';\n  }\n};\n\nexport const StyledCellContentWrapper = styled.div`\n  position: relative;\n  z-index: ${props => (props.animation ? '200' : '100')};\n  width: 100%;\n  height: 100%;\n  animation: ${props => getAnimation(props.selected, props.animation)[0]}\n    // eslint-disable-next-line\n    ${props => getAnimation(props.selected, props.animation)[1]};\n`;\n\nexport const StyledCellContent = styled.div`\n  position: relative;\n  z-index: 100;\n  width: 100%;\n  height: 100%;\n  border-radius: 50%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: url(${props => characterImg[props.image]}) center center/cover\n    no-repeat;\n  box-shadow: ${props => (props.player ? boxShadow.standard : '')};\n  transform: ${props => (props.player ? 'scale(0.9)' : '')};\n`;\n\nexport const StyledIndicator = styled.div`\n  width: 90%;\n  height: 90%;\n  left: 5%;\n  top: 5%;\n  position: absolute;\n  border-radius: 50%;\n  background-color: ${props =>\n    props.player ? playerBorders[props.player] : ''};\n`;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { GridActions } from '../../actions';\nimport {\n  StyledCellContent,\n  StyledIndicator,\n  StyledCellContentWrapper,\n} from './styledCellContent';\n\nconst CellContent = props => {\n  const { cell, selected, grid, updateGrid, gameId } = props;\n  const { index, stats } = cell;\n  // const hp = stats && stats.hp ? stats.hp : null;\n  const player = stats && stats.player;\n\n  if (cell.attack) {\n    let newGrid = grid;\n    setTimeout(() => {\n      newGrid = newGrid.setIn([index, 'attack'], false);\n      updateGrid(newGrid, gameId);\n    }, 500);\n  }\n\n  return (\n    <StyledCellContentWrapper selected={selected} animation={cell.animation}>\n      <StyledCellContent\n        selected={selected}\n        image={cell.image}\n        attack={cell.attack}\n        player={player}\n      ></StyledCellContent>\n      <StyledIndicator player={player} />\n    </StyledCellContentWrapper>\n  );\n};\n\nCellContent.propTypes = {\n  cell: PropTypes.object.isRequired,\n  selected: PropTypes.oneOfType([PropTypes.bool, PropTypes.number]),\n  grid: PropTypes.object.isRequired,\n  updateGrid: PropTypes.func.isRequired,\n  gameId: PropTypes.number,\n};\n\nCellContent.defaultProps = {\n  selected: false,\n  gameId: null,\n};\n\nconst mapStateToProps = state => ({\n  grid: state.GridReducer.grid,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  updateGrid: grid => dispatch(GridActions.updateGrid(grid)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CellContent);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { StyledCell, StyledCellContent } from './styledCell';\nimport CellContent from '../CellContent';\n\nconst Cell = props => {\n  const { columns, cell, selected, onClick, onMouseEnter } = props;\n\n  const basis = 100 / columns + '%';\n  let fill = '';\n  if (cell.fill === 'S') {\n    fill = 'lightgreen';\n  } else if (cell.fill === 'X') {\n    fill = 'brown';\n  }\n\n  return (\n    <StyledCell basis={basis} fill={fill} image={cell.terrain}>\n      <StyledCellContent\n        onClick={() => {\n          onClick();\n        }}\n        selected={selected}\n        onMouseEnter={onMouseEnter}\n        path={cell.path}\n      >\n        <CellContent cell={cell} selected={selected} />\n      </StyledCellContent>\n    </StyledCell>\n  );\n};\n\nCell.propTypes = {\n  cell: PropTypes.object,\n  columns: PropTypes.number.isRequired,\n  selected: PropTypes.oneOfType([PropTypes.bool, PropTypes.number]),\n  onClick: PropTypes.func.isRequired,\n  onMouseEnter: PropTypes.func.isRequired,\n};\n\nCell.defaultProps = {\n  cell: {},\n  selected: false,\n};\n\nconst mapStateToProps = state => ({\n  columns: state.ConfigReducer.settings.columns,\n});\n\nconst mapDispatchToProps = dispatch => ({});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Cell);\n","import styled from 'styled-components';\nimport { colors, boxShadow, borderRadius } from '../../../theme';\n\nconst StyledConsole = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-wrap: nowrap;\n  width: 100%;\n  height: calc(50% - 10px);\n  max-height: 315px;\n  padding: 4px 8px;\n  margin-top: auto;\n  text-align: left;\n  font-size: 14px;\n  overflow-y: scroll;\n  box-shadow: ${boxShadow.standard};\n  border-radius: ${borderRadius.standard};\n  background-color: ${colors.glassTransparent};\n\n  &::-webkit-scrollbar {\n    -webkit-appearance: none;\n    width: 7px !important;\n  }\n\n  &::-webkit-scrollbar-thumb {\n    border-radius: 4px;\n    background-color: ${colors.gray};\n    box-shadow: ${boxShadow.standard};\n  }\n`;\n\nexport default StyledConsole;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport StyledConsole from './styledConsole';\n\nconst playerColors = {\n  human: 'green',\n  ai: 'red',\n};\n\nconst Console = props => {\n  const { action, gameInProgress } = props;\n\n  const [actions, setActions] = useState([]);\n\n  useEffect(() => {\n    if (action && gameInProgress) {\n      let story = '';\n      const playerColor = playerColors[action.selected.stats.player];\n      const skipped = action.skipped;\n      const character = action.selected.stats;\n      const path = action.path;\n      const defender = action.defender ? action.defender.stats : null;\n      const attackResult = action.attackResult\n        ? action.attackResult.attackResult\n        : null;\n      const damageResult = action.attackResult\n        ? action.attackResult.damageResult\n        : null;\n\n      if (skipped) {\n        story += `<span style='color: ${playerColor};'>${character.name}</span> SKIPPED turn `;\n      } else {\n        if (path.length - 1 > 0) {\n          story += `<span style='color: ${playerColor};'>${\n            character.name\n          }</span> moved ${path.length - 1} tile${\n            path.length - 1 > 1 ? 's' : ''\n          }${action.defender ? '<br>' : ''}`;\n        }\n\n        if (action.defender) {\n          story += `<span style='color: ${playerColor};'>${character.name}</span> attacked <span style='color: ${playerColors[defender.player]};'>${defender.name}</span><br>`;\n          story += `${character.name} rolled ${attackResult.attack} 1d20(${\n            attackResult.attackRoll\n          }) + ${attackResult.attackBonus} vs. AC:${\n            attackResult.defenderAC\n          } and ${\n            attackResult.isHit\n              ? `<span style='color: purple;'>${\n                  damageResult.isDead ? 'KILLED!' : 'HIT!'\n                } for ${damageResult.damage} damage.</span>`\n              : `<span style='color: purple;'>MISSED!</span>`\n          }`;\n        }\n      }\n\n      story += '<br><br>';\n\n      setActions([story, ...actions]);\n    } else {\n      setActions([]);\n    }\n    // eslint-disable-next-line\n  }, [action]);\n\n  return (\n    <StyledConsole>\n      {actions.map((action, index) => (\n        <p key={index} dangerouslySetInnerHTML={{ __html: action }} />\n      ))}\n    </StyledConsole>\n  );\n};\n\nConsole.propTypes = {\n  action: PropTypes.object,\n  selected: PropTypes.oneOfType([PropTypes.bool, PropTypes.number]),\n  gameInProgress: PropTypes.bool.isRequired,\n};\n\nConsole.defaultProps = {\n  selected: false,\n  action: {},\n};\n\nexport default Console;\n","import styled from 'styled-components';\nimport { colors, boxShadow, borderRadius } from '../../../theme';\n\nconst StyledSidebarInfo = styled.div`\n  display: flex;\n  width: 100%;\n  height: 50%;\n  box-shadow: ${boxShadow.standard};\n  border-radius: ${borderRadius.standard};\n  background-color: ${colors.glass};\n  padding: 4px 8px;\n`;\n\nexport default StyledSidebarInfo;\n","import styled from 'styled-components';\nimport { characterImg } from '../../assets/images';\nimport { colors, boxShadow, borderRadius, fonts } from '../../theme';\n\nexport const StyledCharacterInfo = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  font-family: ${fonts.regular};\n  padding: 0 10px;\n\n  h2 {\n    font-size: 24px;\n    font-weight: bolder;\n    text-shadow: 2px 2px 2px\n      ${props =>\n        props.player === 'ai'\n          ? colors.redTransparent\n          : colors.greenTransparent};\n    margin: 10px auto;\n  }\n`;\n\nexport const StyledCharacterInfoStat = styled.div`\n  width: auto;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  font-weight: bold;\n  margin-top: 5px;\n  padding: 0;\n  font-weight: bolder;\n  font-size: 16px;\n\n  span {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border-radius: 50%;\n    width: 26px;\n    height: 26px;\n    box-shadow: ${props =>\n      props.player === 'ai'\n        ? boxShadow.standarInsetWithColor(colors.redTransparent)\n        : boxShadow.standarInsetWithColor(colors.greenTransparent)};\n    margin-left: 10px;\n    font-size: 16px;\n  }\n`;\n\nexport const StyledCharacterInfoTitle = styled.div``;\n\nexport const StyledCharacterInfoImage = styled.div`\n  width: 70px;\n  padding-top: 70px;\n  border-radius: 50%;\n  background: url(${props => characterImg[props.image]}) center center/cover\n    no-repeat;\n  margin: 5px auto;\n  box-shadow: ${boxShadow.standardInset};\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  StyledCharacterInfo,\n  StyledCharacterInfoTitle,\n  StyledCharacterInfoImage,\n  StyledCharacterInfoStat,\n} from './styledCharacterInfo';\n\nconst CharacterInfo = props => {\n  const { name, speed, image, hp, attack, ac, player } = props;\n\n  return (\n    <StyledCharacterInfo player={player}>\n      <StyledCharacterInfoTitle>\n        <StyledCharacterInfoImage image={image} />\n        <h2>{name}</h2>\n      </StyledCharacterInfoTitle>\n      <StyledCharacterInfoStat player={player}>\n        HP:<span>{hp}</span>\n      </StyledCharacterInfoStat>\n      <StyledCharacterInfoStat player={player}>\n        Attack:<span>{attack}</span>\n      </StyledCharacterInfoStat>\n      <StyledCharacterInfoStat player={player}>\n        AC:<span>{ac}</span>\n      </StyledCharacterInfoStat>\n      <StyledCharacterInfoStat player={player}>\n        Speed:<span>{speed}</span>\n      </StyledCharacterInfoStat>\n    </StyledCharacterInfo>\n  );\n};\n\nCharacterInfo.propTypes = {\n  name: PropTypes.string.isRequired,\n  speed: PropTypes.number.isRequired,\n  image: PropTypes.string.isRequired,\n  hp: PropTypes.number.isRequired,\n  attack: PropTypes.number.isRequired,\n  ac: PropTypes.number.isRequired,\n  player: PropTypes.string.isRequired,\n};\n\nCharacterInfo.defaultProps = {};\n\nexport default CharacterInfo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport StyledSidebarInfo from './styledSidebarInfo';\nimport CharacterInfo from '../../CharacterInfo';\n\nconst SidebarInfo = props => {\n  const { gameInProgress, activeCharacter, hoverCharacter } = props;\n\n  return (\n    <>\n      <StyledSidebarInfo>\n        {activeCharacter.name && (\n          <CharacterInfo\n            name={activeCharacter.name}\n            attack={activeCharacter.attack}\n            hp={activeCharacter.hp}\n            ac={activeCharacter.ac}\n            speed={activeCharacter.speed}\n            image={activeCharacter.image}\n            player={activeCharacter.player}\n          />\n        )}\n        {hoverCharacter.name && (\n          <CharacterInfo\n            name={hoverCharacter.name}\n            attack={hoverCharacter.attack}\n            hp={hoverCharacter.hp}\n            ac={hoverCharacter.ac}\n            speed={hoverCharacter.speed}\n            image={hoverCharacter.image}\n            player={hoverCharacter.player}\n          />\n        )}\n      </StyledSidebarInfo>\n      ;\n    </>\n  );\n};\n\nSidebarInfo.propTypes = {\n  gameInProgress: PropTypes.bool,\n  activeCharacter: PropTypes.object.isRequired,\n  hoverCharacter: PropTypes.object.isRequired,\n};\n\nSidebarInfo.defaultProps = {\n  gameInProgress: false,\n};\n\nexport default SidebarInfo;\n","import styled from 'styled-components';\n\nconst StyledSidebar = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-wrap: nowrap;\n  width: 33.3%;\n  padding-left: 10px;\n`;\n\nexport default StyledSidebar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Console from './Console';\nimport SidebarInfo from './SidebarInfo';\nimport StyledSidebar from './styledSidebar';\n\nconst Sidebar = props => {\n  const { action, gameInProgress, activeCharacter, hoverCharacter } = props;\n\n  return (\n    <StyledSidebar>\n      <SidebarInfo gameInProgress={gameInProgress} activeCharacter={activeCharacter} hoverCharacter={hoverCharacter} />\n      <Console action={action} gameInProgress={gameInProgress} />\n    </StyledSidebar>\n  );\n};\n\nSidebar.propTypes = {\n  action: PropTypes.object,\n  gameInProgress: PropTypes.bool.isRequired,\n  activeCharacter: PropTypes.object.isRequired,\n  hoverCharacter: PropTypes.object.isRequired,\n};\n\nSidebar.defaultProps = {\n  action: null,\n};\n\nexport default Sidebar;\n","import styled from 'styled-components';\n\nexport const StyledGridHeader = styled.div`\n  display: flex;\n  width: 100%;\n  align-items: center;\n  margin-bottom: 10px;\n`;\n","import styled from 'styled-components';\nimport { colors, boxShadow, borderRadius, fonts } from '../../theme';\nimport {\n  StyledCellContent,\n  StyledIndicator,\n  StyledCellContentWrapper,\n} from '../CellContent/styledCellContent';\nimport { Animations } from '../../logic-functions';\n\nconst getAnimation = moved => {\n  if (moved === 'first') {\n    return [Animations.first, '800ms ease-in forwards'];\n  } else if (moved === 'last') {\n    return [Animations.last, '300ms ease-in forwards'];\n  } else {\n    return '';\n  }\n};\n\nexport const StyledTitle = styled.div`\n  padding: 0 5px 0 10px;\n  line-height: 1.3;\n  font-weight: bold;\n  font-size: 14px;\n  width: 60px;\n  min-width: 60px;\n  font-family: ${fonts.bold};\n`;\n\nexport const StyledTurnBar = styled.div`\n  display: flex;\n  border: 1px solid darkgray;\n  width: 66.6%;\n  align-items: center;\n  height: 60px;\n  overflow-x: auto;\n  overflow-y: hidden;\n  box-shadow: ${boxShadow.standard};\n  border-radius: ${borderRadius.standard};\n  background-color: ${colors.glassTransparent};\n\n  &::-webkit-scrollbar {\n    -webkit-appearance: none;\n    width: 7px !important;\n  }\n\n  &::-webkit-scrollbar-thumb {\n    border-radius: 4px;\n    background-color: ${colors.gray};\n    box-shadow: ${boxShadow.standard};\n  }\n`;\n\nexport const StyledTBCellContent = styled(StyledCellContent)``;\n\nexport const StyledTBIndicator = styled(StyledIndicator)``;\n\nexport const StyledTBContentWrapper = styled(StyledCellContentWrapper)`\n  width: 50px;\n  min-width: 50px;\n  height: 50px;\n  animation: '';\n  animation: ${props => getAnimation(props.moved)[0]} ${props =>\n  getAnimation(props.moved)[1]};\n`;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport {\n  StyledTurnBar,\n  StyledTBCellContent,\n  StyledTBIndicator,\n  StyledTBContentWrapper,\n  StyledTitle,\n} from './styledTurnBar';\nimport { waitFor } from '../../logic-functions/helper-functions';\n\nconst TurnBar = props => {\n  const { allCharacters, selected, gameInProgress } = props;\n  const [characters, setCharacters] = useState(null);\n\n  /* **  Handle character order change  ** */\n  useEffect(() => {\n    if (allCharacters.length > 0) {\n      if (!characters) {\n        setCharacters(allCharacters);\n      } else {\n        changeTurnOrder();\n      }\n    } else {\n      setCharacters(null);\n    }\n    // eslint-disable-next-line\n  }, [allCharacters]);\n\n  async function changeTurnOrder() {\n    let animatedCharacters = JSON.parse(JSON.stringify(characters));\n    animatedCharacters[0].moved = 'first';\n    setCharacters(animatedCharacters);\n\n    await waitFor(1000);\n\n    animatedCharacters = JSON.parse(JSON.stringify(allCharacters));\n    animatedCharacters[animatedCharacters.length - 1].moved = 'last';\n    setCharacters(animatedCharacters);\n\n    await waitFor(500);\n\n    setCharacters(allCharacters);\n  }\n\n  const mapCharactersToView = characters => {\n    if (!characters) {\n      return;\n    }\n    return characters.map((character, index) => {\n      const cellSelected = character.index === selected;\n\n      return (\n        <StyledTBContentWrapper\n          selected={cellSelected}\n          animation={character.animation}\n          key={index}\n          moved={character.moved}\n        >\n          <StyledTBCellContent\n            selected={cellSelected}\n            image={character.image}\n            player={character.player}\n          />\n          <StyledTBIndicator player={character.player} />\n        </StyledTBContentWrapper>\n      );\n    });\n  };\n\n  return (\n    <>\n      <StyledTurnBar>\n        <StyledTitle>\n          Turn\n          <br />\n          Order:\n        </StyledTitle>\n        {gameInProgress && mapCharactersToView(characters)}\n      </StyledTurnBar>\n    </>\n  );\n};\n\nTurnBar.propTypes = {\n  selected: PropTypes.oneOfType([PropTypes.bool, PropTypes.number]),\n  allCharacters: PropTypes.array,\n  gameInProgress: PropTypes.bool.isRequired,\n};\n\nTurnBar.defaultProps = {\n  allCharacters: [],\n  selected: false,\n};\n\nconst mapStateToProps = state => ({\n  allCharacters: state.TurnReducer.turnInfo.get('allCharacters'),\n});\n\nconst mapDispatchToProps = dispatch => ({});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TurnBar);\n","import styled from 'styled-components';\nimport { colors, boxShadow, borderRadius } from '../../theme';\n\nexport const StyledControlBarWrapper = styled.div`\n  width: 33.3%;\n  padding-left: 10px;\n`;\n\nexport const StyledControlBar = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-around;\n  height: 60px;\n  box-shadow: ${boxShadow.standard};\n  border-radius: ${borderRadius.standard};\n  background-color: ${colors.glass};\n`;\n","import styled from 'styled-components';\nimport { colors, boxShadow } from '../../theme';\n\nexport const StyledSpinner = styled.div`\n  transform: scale(0.4);\n  position: absolute;\n  \n  .lds-roller {\n    display: inline-block;\n    position: relative;\n    width: 80px;\n    height: 80px;\n  }\n  .lds-roller div {\n    animation: lds-roller 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite;\n    transform-origin: 40px 40px;\n  }\n  .lds-roller div:after {\n    content: ' ';\n    display: block;\n    position: absolute;\n    width: 9px;\n    height: 9px;\n    border-radius: 50%;\n    background: ${colors.white};\n    box-shadow: ${boxShadow.standard};\n    margin: -4px 0 0 -4px;\n  }\n  .lds-roller div:nth-child(1) {\n    animation-delay: -0.036s;\n  }\n  .lds-roller div:nth-child(1):after {\n    top: 63px;\n    left: 63px;\n  }\n  .lds-roller div:nth-child(2) {\n    animation-delay: -0.072s;\n  }\n  .lds-roller div:nth-child(2):after {\n    top: 68px;\n    left: 56px;\n  }\n  .lds-roller div:nth-child(3) {\n    animation-delay: -0.108s;\n  }\n  .lds-roller div:nth-child(3):after {\n    top: 71px;\n    left: 48px;\n  }\n  .lds-roller div:nth-child(4) {\n    animation-delay: -0.144s;\n  }\n  .lds-roller div:nth-child(4):after {\n    top: 72px;\n    left: 40px;\n  }\n  .lds-roller div:nth-child(5) {\n    animation-delay: -0.18s;\n  }\n  .lds-roller div:nth-child(5):after {\n    top: 71px;\n    left: 32px;\n  }\n  .lds-roller div:nth-child(6) {\n    animation-delay: -0.216s;\n  }\n  .lds-roller div:nth-child(6):after {\n    top: 68px;\n    left: 24px;\n  }\n  .lds-roller div:nth-child(7) {\n    animation-delay: -0.252s;\n  }\n  .lds-roller div:nth-child(7):after {\n    top: 63px;\n    left: 17px;\n  }\n  .lds-roller div:nth-child(8) {\n    animation-delay: -0.288s;\n  }\n  .lds-roller div:nth-child(8):after {\n    top: 56px;\n    left: 12px;\n  }\n  @keyframes lds-roller {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`;\n","import React from 'react';\n// import PropTypes from 'prop-types';\nimport { StyledSpinner } from './styledSpinner';\n\nconst Spinner = props => {\n  return (\n    <StyledSpinner>\n      <div className=\"lds-roller\">\n        <div />\n        <div />\n        <div />\n        <div />\n        <div />\n        <div />\n        <div />\n        <div />\n      </div>\n    </StyledSpinner>\n  );\n};\n\nSpinner.propTypes = {};\n\nSpinner.defaultProps = {};\n\nexport default Spinner;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { StyledControlBarWrapper, StyledControlBar } from './styledControlBar';\nimport Button from '../Button';\nimport Spinner from '../Spinner';\n\nconst ControlBar = props => {\n  const { endGame, startGame, skipTurn, gameInProgress, isAiTurn } = props;\n\n  const [waitForCleanUp, setWaitForCleanUp] = useState(false);\n\n  const onSurrenderClick = () => {\n    endGame();\n    if (isAiTurn) {\n      setWaitForCleanUp(true);\n      setTimeout(() => {\n        setWaitForCleanUp(false);\n      }, 3500);\n    }\n  };\n\n  return (\n    <StyledControlBarWrapper>\n      <StyledControlBar>\n        {gameInProgress && (\n          <Button\n            type={'secondary'}\n            func={onSurrenderClick}\n            text={'Surrender'}\n          />\n        )}\n        {!gameInProgress && (\n          <Button\n            disabled={waitForCleanUp}\n            type={'secondary'}\n            func={startGame}\n            text={'Start'}\n          />\n        )}\n        {(waitForCleanUp || (isAiTurn && gameInProgress)) && <Spinner />}\n        <Button\n          type={'secondary'}\n          disabled={!gameInProgress || isAiTurn}\n          func={skipTurn}\n          text={'Skip Turn'}\n        />\n      </StyledControlBar>\n    </StyledControlBarWrapper>\n  );\n};\n\nControlBar.propTypes = {\n  endGame: PropTypes.func.isRequired,\n  startGame: PropTypes.func.isRequired,\n  skipTurn: PropTypes.func.isRequired,\n  gameInProgress: PropTypes.bool.isRequired,\n  isAiTurn: PropTypes.bool,\n};\n\nControlBar.defaultProps = {\n  isAiTurn: false,\n};\n\nexport default ControlBar;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { StyledGridHeader } from './styledGridHeader';\nimport TurnBar from '../TurnBar';\nimport ControlBar from '../ControlBar';\n\nconst GridHeader = props => {\n  const {\n    grid,\n    selected,\n    startGame,\n    endGame,\n    skipTurn,\n    gameInProgress,\n  } = props;\n\n  const [isAiTurn, setIsAiTurn] = useState(false);\n\n  useEffect(() => {\n    const selectedCharacter = grid.getIn([selected]);\n\n    if (selected && selectedCharacter) {\n      setIsAiTurn(grid.getIn([selected]).stats.player === 'ai');\n    } else {\n      setIsAiTurn(true);\n    }\n    // eslint-disable-next-line\n  }, [selected]);\n\n  return (\n    <StyledGridHeader>\n      <TurnBar\n        grid={grid}\n        selected={selected}\n        gameInProgress={gameInProgress}\n      />\n      <ControlBar\n        isAiTurn={isAiTurn}\n        startGame={startGame}\n        endGame={endGame}\n        skipTurn={skipTurn}\n        gameInProgress={gameInProgress}\n      />\n    </StyledGridHeader>\n  );\n};\n\nGridHeader.propTypes = {\n  grid: PropTypes.object.isRequired,\n  selected: PropTypes.oneOfType([PropTypes.bool, PropTypes.number]),\n  endGame: PropTypes.func.isRequired,\n  startGame: PropTypes.func.isRequired,\n  skipTurn: PropTypes.func.isRequired,\n  gameInProgress: PropTypes.bool.isRequired,\n};\n\nGridHeader.defaultProps = {\n  selected: false,\n};\n\nexport default GridHeader;\n","import React, { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { StyledGrid, StyledGridWrapper } from './styledGrid';\nimport { GridActions, TurnActions } from '../../actions';\nimport { GridHelper, Animations, AiFunctions } from '../../logic-functions';\nimport Cell from '../Cell';\nimport Sidebar from '../Sidebar';\nimport { waitFor } from '../../logic-functions/helper-functions';\nimport GridHeader from '../GridHeader';\n\nconst Grid = props => {\n  const {\n    grid,\n    updateGrid,\n    settings,\n    createGrid,\n    destroyGrid,\n    activeCharacter,\n    allCharacters,\n    startTurn,\n    nextMove,\n    resetTurn,\n    humanCharacters,\n    aiCharacters,\n  } = props;\n\n  const [selected, setSelected] = useState();\n  const [isSelected, setIsSelected] = useState(false);\n  const [selectedCharacter, setSelectedCharacter] = useState({});\n  const [animationProgress, setAnimationProgress] = useState(false);\n  const [action, setAction] = useState();\n  const [hoverCharacter, setHoverCharacter] = useState({});\n  const [gameId, setGameId] = useState(null);\n\n  const gameInProgress = useRef(false);\n\n  // end game calculator\n  useEffect(() => {\n    if (allCharacters.length > 0) {\n      if (aiCharacters.length < 1) {\n        alert('You win!');\n        endGame();\n      }\n\n      if (humanCharacters.length < 1) {\n        alert('You lose!');\n        endGame();\n      }\n    }\n    // eslint-disable-next-line\n  }, [allCharacters]);\n\n  // update selected character\n  useEffect(() => {\n    if (activeCharacter && activeCharacter.name) {\n      updateSelectedCharacter(grid.get(activeCharacter.index));\n    }\n    // eslint-disable-next-line\n  }, [activeCharacter]);\n\n  // start turn\n  useEffect(() => {\n    if (allCharacters.length === 0 && grid.size > 0) {\n      startTurn(grid, gameId);\n    }\n    // eslint-disable-next-line\n  }, [grid]);\n\n  // ai turn calculator\n  useEffect(() => {\n    if (activeCharacter.player === 'ai' && selectedCharacter && selected) {\n      const tileToMove = AiFunctions.calculateAiMove(\n        grid,\n        activeCharacter,\n        humanCharacters\n      );\n\n      if (tileToMove || tileToMove === 0) {\n        const searchResult = startSearch(grid.get(tileToMove));\n\n        if (searchResult.path.length > 0) {\n          setTimeout(() => {\n            animateAndMove(\n              searchResult.path,\n              searchResult.attackResult,\n              searchResult.defenderIndex\n            );\n          }, 1300);\n        }\n      } else {\n        setTimeout(() => {\n          setAction({\n            selected: grid.getIn([selected]),\n            skipped: true,\n          });\n          nextMoveCheck(grid, gameId);\n        }, 500);\n      }\n    }\n\n    // eslint-disable-next-line\n  }, [selectedCharacter]);\n\n  const updateGridCheck = (grid, gameIdd) => {\n    if (gameInProgress.current) {\n      updateGrid(grid, gameIdd);\n    }\n  };\n\n  const nextMoveCheck = (grid, gameIdd) => {\n    if (gameInProgress.current) {\n      nextMove(grid, gameIdd);\n    }\n  };\n\n  const startGame = () => {\n    const gameId = Date.now();\n    setGameId(gameId);\n    gameInProgress.current = true;\n    createGrid(settings, gameId);\n    resetTurn(gameId);\n  };\n\n  const endGame = () => {\n    gameInProgress.current = false;\n    setAction();\n    destroyGrid();\n    resetTurn();\n  };\n\n  const skipTurn = () => {\n    if (activeCharacter.player !== 'ai') {\n      setAction({\n        selected: grid.getIn([selected]),\n        skipped: true,\n      });\n      nextMoveCheck(grid, gameId);\n    }\n  };\n\n  const clearSelectedCharacter = () => {\n    setIsSelected(false);\n    setSelected(null);\n    setSelectedCharacter({});\n    updateGridCheck(GridHelper.clearPath(grid, gameId));\n  };\n\n  const updateSelectedCharacter = cell => {\n    setIsSelected(true);\n    setSelected(cell.index);\n    setSelectedCharacter(cell.stats);\n    updateGridCheck(GridHelper.clearPath(grid, gameId));\n  };\n\n  async function animateAndMove(path, attackResult, defenderIndex) {\n    const isHit = attackResult && attackResult.attackResult.isHit;\n    setAnimationProgress(true);\n\n    updateGridCheck(\n      grid.setIn(\n        [selected, 'animation'],\n        Animations.moveAnimationBuilder(path, 300, {\n          attackResult,\n          defender: grid.getIn([defenderIndex]),\n        })\n      ),\n      gameId\n    );\n\n    const attackTime = attackResult ? 900 : 0;\n\n    await waitFor(path.length * 300 + attackTime);\n    clearSelectedCharacter();\n\n    let newGrid = grid;\n\n    newGrid = GridHelper.moveCharacter(\n      newGrid,\n      selectedCharacter,\n      newGrid.get(path[path.length - 1].index)\n    );\n\n    let defender = attackResult ? newGrid.getIn([defenderIndex]) : null;\n\n    if (defender) {\n      newGrid = newGrid.setIn([defender.index, 'attack'], true);\n    }\n\n    if (isHit) {\n      defender.stats.hp = attackResult.damageResult.hp;\n      if (defender.stats.hp > 0) {\n        newGrid = GridHelper.updateCharacter(newGrid, defender);\n      } else {\n        newGrid = GridHelper.clearTile(newGrid, defenderIndex);\n      }\n    }\n\n    setAction({\n      selected: grid.getIn([selected]),\n      path,\n      attackResult,\n      defender,\n    });\n\n    updateGridCheck(newGrid, gameId);\n    await waitFor(attackResult ? 500 : 0);\n    setAnimationProgress(false);\n    nextMoveCheck(newGrid, gameId);\n  }\n\n  const onClick = cell => {\n    console.log('cell', cell);\n\n    if (!isSelected || animationProgress || activeCharacter.player === 'ai') {\n      if (cell.fill !== 'C') {\n        return;\n      }\n    } else {\n      const searchResult = startSearch(cell);\n      if (\n        cell.fill !== 'X' &&\n        searchResult.path.length > 0 &&\n        searchResult.moveAllowed\n      ) {\n        animateAndMove(\n          searchResult.path,\n          searchResult.attackResult,\n          searchResult.defenderIndex\n        );\n      }\n    }\n  };\n\n  const startSearch = cell => {\n    const result = GridHelper.startSearch(\n      grid,\n      selected,\n      cell.index,\n      selectedCharacter\n    );\n\n    let moveAllowed = false;\n    let path = [];\n    let attackResult = false;\n\n    if (result && result.grid) {\n      updateGridCheck(result.grid, gameId);\n      path = result.result;\n      attackResult = result.attackResult;\n      moveAllowed = true;\n    }\n\n    return { moveAllowed, path, attackResult, defenderIndex: cell.index };\n  };\n\n  return (\n    <StyledGridWrapper>\n      <GridHeader\n        grid={grid}\n        selected={selected}\n        startGame={startGame}\n        endGame={endGame}\n        skipTurn={skipTurn}\n        gameInProgress={gameInProgress.current}\n      />\n      <StyledGrid empty={allCharacters.length === 0}>\n        {allCharacters.length > 0\n          ? grid.map(cell => {\n              const cellSelected = cell.index === selected;\n              return (\n                <Cell\n                  key={cell.index}\n                  cell={cell}\n                  selected={cellSelected}\n                  onClick={() => {\n                    onClick(cell);\n                  }}\n                  onMouseEnter={() => {\n                    if (\n                      cell &&\n                      cell.stats &&\n                      cell.stats.name &&\n                      cell.stats.player\n                    ) {\n                      setHoverCharacter(cell.stats);\n                    } else {\n                      setHoverCharacter({});\n                    }\n                    isSelected &&\n                      !animationProgress &&\n                      activeCharacter.player !== 'ai' &&\n                      startSearch(cell);\n                  }}\n                />\n              );\n            })\n          : null}\n      </StyledGrid>\n\n      <Sidebar\n        action={action}\n        gameInProgress={gameInProgress.current}\n        activeCharacter={activeCharacter}\n        hoverCharacter={hoverCharacter}\n      />\n    </StyledGridWrapper>\n  );\n};\n\nGrid.propTypes = {\n  updateGrid: PropTypes.func.isRequired,\n  grid: PropTypes.object.isRequired,\n  settings: PropTypes.object.isRequired,\n  createGrid: PropTypes.func.isRequired,\n  destroyGrid: PropTypes.func.isRequired,\n  activeCharacter: PropTypes.object,\n  allCharacters: PropTypes.array.isRequired,\n  startTurn: PropTypes.func.isRequired,\n  nextMove: PropTypes.func.isRequired,\n  resetTurn: PropTypes.func.isRequired,\n  humanCharacters: PropTypes.array,\n  aiCharacters: PropTypes.array,\n};\n\nGrid.defaultProps = {\n  activeCharacter: null,\n  humanCharacters: [],\n  aiCharacters: [],\n};\n\nconst mapStateToProps = state => ({\n  grid: state.GridReducer.grid,\n  settings: state.ConfigReducer.settings,\n  turnInfo: state.TurnReducer.turnInfo,\n  activeCharacter: state.TurnReducer.turnInfo.get('activeCharacter'),\n  allCharacters: state.TurnReducer.turnInfo.get('allCharacters'),\n  humanCharacters: state.TurnReducer.turnInfo.get('humanCharacters'),\n  aiCharacters: state.TurnReducer.turnInfo.get('aiCharacters'),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  updateGrid: (grid, gameId) => dispatch(GridActions.updateGrid(grid, gameId)),\n  createGrid: (settings, gameId) =>\n    dispatch(GridActions.createGrid(settings, gameId)),\n  destroyGrid: () => dispatch(GridActions.destroyGrid()),\n  startTurn: (grid, gameId) => dispatch(TurnActions.startTurn(grid, gameId)),\n  nextMove: (grid, gameId) => dispatch(TurnActions.nextMove(grid, gameId)),\n  resetTurn: () => dispatch(TurnActions.resetTurn()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Grid);\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Grid from '../../components/Grid';\nimport { GridActions, TurnActions } from '../../actions';\nimport { StyledContainer } from '../../components/StyledContainer';\n\nconst Battle = props => {\n  const { destroyGrid, resetTurn } = props;\n\n  useEffect(() => {\n    destroyGrid();\n    resetTurn();\n\n    return function cleanUp() {\n      destroyGrid();\n      resetTurn();\n    };\n  });\n\n  return (\n    <StyledContainer>\n      <Grid />\n    </StyledContainer>\n  );\n};\n\nBattle.propTypes = {\n  destroyGrid: PropTypes.func.isRequired,\n  resetTurn: PropTypes.func.isRequired,\n};\n\nBattle.defaultProps = {};\n\nconst mapStateToProps = state => ({});\n\nconst mapDispatchToProps = dispatch => ({\n  destroyGrid: () => dispatch(GridActions.destroyGrid()),\n  resetTurn: () => dispatch(TurnActions.resetTurn()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Battle);\n","import { createGlobalStyle } from \"styled-components\";\nimport { colors, fonts } from \"../theme\";\n\nexport const GlobalStyle = createGlobalStyle`\n    body {\n        text-align: center;\n        color: ${colors.black};\n        font-family: ${fonts.regular};\n    }\n\n    * {\n        box-sizing: border-box;\n        margin: 0;\n        padding: 0;\n    }\n\n    ul {\n        list-style: none;\n    }\n\n    html, body, div, span, applet, object, iframe,\n    h1, h2, h3, h4, h5, h6, p, blockquote, pre,\n    a, abbr, acronym, address, big, cite, code,\n    del, dfn, em, img, ins, kbd, q, s, samp,\n    small, strike, strong, sub, sup, tt, var,\n    b, u, i, center,\n    dl, dt, dd, ol, ul, li,\n    fieldset, form, label, legend,\n    table, caption, tbody, tfoot, thead, tr, th, td,\n    article, aside, canvas, details, embed, \n    figure, figcaption, footer, header, hgroup, \n    menu, nav, output, ruby, section, summary,\n    time, mark, audio, video {\n        margin: 0;\n        padding: 0;\n        border: 0;\n        font-size: 100%;\n        font: inherit;\n        vertical-align: baseline;\n    }\n\n    /* HTML5 display-role reset for older browsers */\n    article, aside, details, figcaption, figure, \n    footer, header, hgroup, menu, nav, section {\n        display: block;\n    }\n\n    body {\n        line-height: 1;\n    }\n\n    ol, ul {\n        list-style: none;\n    }\n\n    blockquote, q {\n        quotes: none;\n    }\n\n    blockquote:before, blockquote:after,\n    q:before, q:after {\n        content: '';\n        content: none;\n    }\n\n    table {\n        border-collapse: collapse;\n        border-spacing: 0;\n    }\n\n    a,\n    a:visited,\n    a:focus,\n    a:hover {\n        text-decoration: none;\n        color: inherit;\n    }\n`;\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route, BrowserRouter } from 'react-router-dom';\nimport PageWrapper from './PageWrapper';\nimport Home from '../pages/home';\nimport Help from '../pages/help';\nimport Battle from '../pages/battle';\nimport { GlobalStyle } from './GlobalStyle';\nimport { ThemeProvider } from 'styled-components';\nimport theme from '../theme';\nimport routes from './routes';\n\nfunction App() {\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Router>\n        <ThemeProvider theme={theme}>\n          <GlobalStyle />\n          <PageWrapper>\n            <Switch>\n              <Route path={routes.about} component={Help} />\n              <Route path={routes.battle} component={Battle} />\n              <Route exact path={routes.home} component={Home} />\n              <Route>\n                <h1>Page not found</h1>\n              </Route>\n            </Switch>\n          </PageWrapper>\n        </ThemeProvider>\n      </Router>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import * as ActionTypes from '../action-types';\nimport { GridHelper } from '../logic-functions';\nimport { List } from 'immutable';\n\n//////////////////\n\nconst DEFAULT_STATE = {\n  gameId: null,\n  grid: new List([]),\n};\n\nconst GridReducer = (state = DEFAULT_STATE, action) => {\n  switch (action.type) {\n    case ActionTypes.UPDATE_GRID: {\n      if (state.grid.size === 0) {\n        return { ...state };\n      }\n\n      if (state.gameId !== action.gameId) {\n        return { ...state };\n      }\n\n      return {\n        ...state,\n        grid: action.grid,\n      };\n    }\n    case ActionTypes.CREATE_GRID: {\n      return {\n        ...state,\n        grid: GridHelper.makeGrid(action.settings),\n        gameId: action.gameId,\n      };\n    }\n    case ActionTypes.DESTROY_GRID: {\n      return {\n        ...state,\n        grid: new List([]),\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default GridReducer;\n","import * as ActionTypes from '../action-types';\n\nconst DEFAULT_STATE = {\n  muted: true,\n  settings: {\n    rows: 10,\n    columns: 10,\n    fill: {\n      rows: 10,\n      obstacles() {\n        return Math.round((this.rows * (this.rows / 2.5)) - (this.rows * 1.5))\n      },\n      characters: [\n        {\n          id: 1,\n          name: 'Victor',\n          type: 'hero',\n          speed: 6,\n          image: 'warrior',\n          index: 4,\n          fill: 'C',\n          sound: 'warrior',\n          maxHp: 4,\n          hp: 4,\n          attack: +2,\n          ac: 0,\n          damage: [2, 6],\n          player: 'human',\n          initiative: 24,\n        },\n        {\n          id: 2,\n          name: 'Victor S',\n          type: 'hero',\n          speed: 6,\n          image: 'warrior',\n          index: 5,\n          fill: 'C',\n          sound: 'warrior',\n          maxHp: 4,\n          hp: 4,\n          attack: +2,\n          ac: 15,\n          damage: [2, 6],\n          player: 'human',\n          initiative: 10,\n        },\n        {\n          id: 3,\n          name: 'Goblin',\n          type: 'enemy',\n          speed: 5,\n          image: 'goblin',\n          index: 96,\n          fill: 'C',\n          sound: 'goblin',\n          maxHp: 6,\n          hp: 6,\n          attack: 0,\n          ac: 8,\n          damage: [1, 4],\n          player: 'ai',\n          initiative: 18,\n        },\n        {\n          id: 4,\n          name: 'Goblin F',\n          type: 'enemy',\n          speed: 6,\n          image: 'goblin',\n          index: 93,\n          fill: 'C',\n          sound: 'goblin',\n          maxHp: 6,\n          hp: 6,\n          attack: 0,\n          ac: 8,\n          damage: [1, 4],\n          player: 'ai',\n          initiative: 13,\n        },\n        {\n          id: 5,\n          name: 'Goblin',\n          type: 'enemy',\n          speed: 7,\n          image: 'goblin',\n          index: 94,\n          fill: 'C',\n          sound: 'goblin',\n          maxHp: 6,\n          hp: 6,\n          attack: 0,\n          ac: 8,\n          damage: [1, 4],\n          player: 'ai',\n          initiative: 18,\n        },\n        {\n          id: 6,\n          name: 'Goblin',\n          type: 'enemy',\n          speed: 5,\n          image: 'goblin',\n          index: 95,\n          fill: 'C',\n          sound: 'goblin',\n          maxHp: 6,\n          hp: 6,\n          attack: 0,\n          ac: 8,\n          damage: [1, 4],\n          player: 'ai',\n          initiative: 18,\n        },\n      ],\n    },\n  },\n};\n\nconst ConfigReducer = (state = DEFAULT_STATE, action) => {\n  switch (action.type) {\n    case ActionTypes.TOGGLE_SOUND: {\n      return {\n        ...state,\n        muted: action.muted,\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default ConfigReducer;\n","export const TOGGLE_SOUND = 'TOGGLE_SOUND';\n\n","import * as ActionTypes from '../action-types';\nimport { Map } from 'immutable';\nimport { TurnFunctions } from '../logic-functions';\n\n//////////////////\n\nconst DEFAULT_STATE = {\n  gameId: null,\n  turnInfo: new Map({\n    currentPlayer: null,\n    activeCharacter: {},\n    turnOrder: [],\n    allCharacters: [],\n    humanCharacters: [],\n    aiCharacters: [],\n  }),\n};\n\nconst TurnReducer = (state = DEFAULT_STATE, action) => {\n  switch (action.type) {\n    case ActionTypes.START_TURN: {\n      let {\n        allCharacters,\n        humanCharacters,\n        aiCharacters,\n      } = TurnFunctions.findCharacters(action.grid);\n\n      allCharacters = TurnFunctions.sortCharacters(allCharacters);\n\n      let turnInfo = state.turnInfo;\n      turnInfo = turnInfo\n        .setIn(['allCharacters'], allCharacters)\n        .setIn(['humanCharacters'], humanCharacters)\n        .setIn(['aiCharacters'], aiCharacters)\n        .setIn(['activeCharacter'], allCharacters[0]);\n\n      return {\n        ...state,\n        turnInfo,\n        gameId: action.gameId,\n      };\n    }\n    case ActionTypes.NEXT_MOVE: {\n      if (state.turnInfo.get('allCharacters').length === 0) {\n        return { ...state };\n      }\n\n      if (state.gameId !== action.gameId) {\n        return { ...state };\n      }\n\n      let {\n        allCharacters,\n        humanCharacters,\n        aiCharacters,\n        activeCharacter,\n      } = TurnFunctions.updateCharacters(state, action.grid);\n\n      let turnInfo = state.turnInfo;\n      turnInfo = turnInfo\n        .setIn(['allCharacters'], allCharacters)\n        .setIn(['humanCharacters'], humanCharacters)\n        .setIn(['aiCharacters'], aiCharacters)\n        .setIn(['activeCharacter'], activeCharacter);\n\n      return {\n        ...state,\n        turnInfo,\n      };\n    }\n    case ActionTypes.RESET_TURN: {\n      const turnInfo = new Map({\n        currentPlayer: null,\n        activeCharacter: {},\n        turnOrder: [],\n        allCharacters: [],\n        humanCharacters: [],\n        aiCharacters: [],\n      });\n\n      return {\n        ...state,\n        turnInfo,\n        gameId: action.gameId,\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default TurnReducer;\n","import {combineReducers} from 'redux';\nimport GridReducer from './GridReducer';\nimport ConfigReducer from './ConfigReducer';\nimport TurnReducer from './TurnReducer';\n\nexport default combineReducers({\n    GridReducer,\n    ConfigReducer,\n    TurnReducer,\n});\n","import { applyMiddleware, createStore } from 'redux';\nimport logger from 'redux-logger';\nimport rootReducer from '../reducers';\n\nconst store = createStore(rootReducer, applyMiddleware(logger));\n\nexport { store as default };\n","import React from 'react';\nimport {Provider} from 'react-redux';\nimport ReactDOM from 'react-dom';\nimport '../fonts/fonts.scss';\nimport App from './App';\nimport store from '../store';\n\nReactDOM.render((\n    <Provider store={store}>\n        <App />\n    </Provider>\n), document.getElementById('root'));\n"],"sourceRoot":""}