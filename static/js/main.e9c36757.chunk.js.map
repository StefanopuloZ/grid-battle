{"version":3,"sources":["assets/images/ground.jpg","assets/images/warrior.png","assets/images/tree.png","assets/images/goblin_regular.png","assets/images/golem.png","assets/images/fortuna.png","assets/images/index.js","theme.js","App/PageWrapper/PageWrapperStyle.js","components/Header/styledHeader.js","components/StyledContainer/index.js","App/routes.js","components/Button/styledButton.js","components/Button/index.js","components/Header/index.js","components/Icon/styledIcoMoon.js","components/Icon/index.js","App/PageWrapper/PageWrapper.js","pages/home/StyledHome.js","pages/home/index.js","pages/help/styledAbout.js","pages/help/index.js","components/Grid/styledGrid.js","actions/GridActions.js","action-types/GridActionTypes.js","actions/TurnActions.js","action-types/TurnActionsTypes.js","logic-functions/helper-functions.js","logic-functions/grid.js","logic-functions/animations.js","logic-functions/turn.js","logic-functions/ai.js","components/Cell/styledCell.js","components/CellContent/styledCellContent.js","components/HpOverlay/styledHpOverlay.js","components/HpOverlay/index.js","components/CellContent/index.js","components/Cell/index.js","components/Sidebar/Console/styledConsole.js","components/Sidebar/Console/index.js","components/Sidebar/SidebarInfo/styledSidebarInfo.js","components/CharacterInfo/styledCharacterInfo.js","components/CharacterInfo/index.js","components/Sidebar/SidebarInfo/index.js","components/Sidebar/styledSidebar.js","components/Sidebar/index.js","components/GridHeader/styledGridHeader.js","components/TurnBar/styledTurnBar.js","components/TurnBar/index.js","components/ControlBar/styledControlBar.js","components/Spinner/styledSpinner.js","components/Spinner/index.js","components/ControlBar/index.js","components/GridHeader/index.js","components/Grid/index.js","pages/battle/index.js","App/GlobalStyle.js","App/App.js","reducers/GridReducer.js","reducers/ConfigReducer.js","action-types/ConfigActionTypes.js","reducers/TurnReducer.js","reducers/index.js","store/index.js","App/index.js"],"names":["module","exports","backgroundImg","ground","characterImg","warrior","tree","goblin","golem","fortuna","colors","black","white","whiteTransparent","blue","navy","gray","greenTransparent","glassTransparent","glass","redMain","redTransparent","boxShadow","standard","large","standardInset","largeInset","standarInsetWithColor","color","borderRadius","breakpoints","sm","media","small","medium","fonts","Wrapper","styled","div","FooterWrapper","IconWrapper","span","HeaderWrapper","HeaderList","ul","StyledContainer","home","battle","about","StyledButton","props","disabled","types","primary","secondary","Button","text","func","type","ButtonType","onClick","propTypes","PropTypes","string","bool","defaultProps","Header","allCharacters","showConfirm","setShowConfirm","useState","confirmationRoute","setConfirmationRoute","location","useLocation","pathname","gameInProgress","length","confirmPageChange","to","routes","e","preventDefault","array","connect","state","TurnReducer","turnInfo","get","dispatch","StyledIcoMoon","iconSet","require","Icon","PageWrapper","interacted","setInteracted","children","href","target","rel","icon","object","childrenchildren","StyledHome","Home","StyledAbout","Help","StyledGrid","empty","StyledGridWrapper","updateGrid","grid","gameId","createGrid","settings","destroyGrid","startTurn","nextMove","resetTurn","random","min","max","Math","floor","copy","JSON","parse","stringify","waitFor","time","Promise","resolve","setTimeout","fillGrid","fill","rows","newGrid","forbiddenTiles","randomisedFill","i","obstacles","randomFill","includes","push","randomiseFill","forEach","obstacle","image","terrain","characters","character","index","stats","performAttack","attacker","defender","attackResult","attackRoll","attack","isHit","ac","attackBonus","defenderAC","calculateAttack","damageResult","damage","hp","isDead","calculateDamage","clearPath","map","cell","path","direction","GridHelper","makeGrid","columns","j","adjecent","visited","animation","sound","up","down","left","right","makeAdjacentMatrix","List","startSearch","start","newGridJS","toJS","actingCharacter","isAttack","player","result","finalPath","paths","searchStep","newPaths","adjecentCell","newPath","counter","console","log","searchForPath","tilesToMove","speed","withMutations","setIn","fillPath","splice","moveCharacter","clearTile","tile","updateCharacter","oppositeDirections","Animations","moveAnimationBuilder","timeUnit","isAttacked","animationString","timePercentage","percentage","top","attackDirection","find","oppositeDirecetion","topStarting","leftStarting","keyframes","selected","first","last","setNextCharacter","newAllCharacters","lastCharacter","shift","TurnFunctions","sortCharacters","value","sort","a","b","findCharacters","filter","humanCharacters","aiCharacters","updateCharacters","updatedAllCharacters","activeCharacterIds","id","toUpdate","updateChar","activeCharacter","weightValues","AC","targetHP","damageMax","targetAttack","targetDamageMax","checkPossibleMoves","possibleMoves","canAttack","searchResult","move","moves","calculatedWeight","weightBreakdown","weight","toHitChance","remainingHP","canKill","threatLevel","assignWeight","AiFunctions","maxWeight","randomPick","choseMove","StyledCell","basis","StyledCellContent","playerBorders","human","ai","getAnimation","StyledCellContentWrapper","StyledIndicator","StyledHpOverlay","StyledHpOverlayFill","HpOverlay","maxHp","difference","unshift","key","number","isRequired","CellContent","oneOfType","GridReducer","GridActions","Cell","onMouseEnter","ConfigReducer","StyledConsole","playerColors","Console","action","actions","setActions","useEffect","story","playerColor","skipped","name","dangerouslySetInnerHTML","__html","StyledSidebarInfo","StyledCharacterInfo","StyledCharacterInfoStat","StyledCharacterInfoTitle","StyledCharacterInfoImage","CharacterInfo","SidebarInfo","hoverCharacter","StyledSidebar","Sidebar","StyledGridHeader","moved","StyledTitle","StyledTurnBar","StyledTBCellContent","StyledTBIndicator","StyledTBContentWrapper","TurnBar","setCharacters","async","animatedCharacters","changeTurnOrder","cellSelected","mapCharactersToView","StyledControlBarWrapper","StyledControlBar","StyledSpinner","Spinner","className","ControlBar","endGame","startGame","skipTurn","isAiTurn","waitForCleanUp","setWaitForCleanUp","GridHeader","setIsAiTurn","selectedCharacter","getIn","Grid","setSelected","isSelected","setIsSelected","setSelectedCharacter","animationProgress","setAnimationProgress","setAction","setHoverCharacter","setGameId","useRef","alert","updateSelectedCharacter","size","tileToMove","animateAndMove","defenderIndex","nextMoveCheck","updateGridCheck","gameIdd","current","clearSelectedCharacter","attackTime","moveAllowed","Date","now","TurnActions","Battle","GlobalStyle","createGlobalStyle","App","basename","process","theme","component","exact","DEFAULT_STATE","muted","initiative","assignIndexes","indexArray","tiles","this","round","Map","currentPlayer","turnOrder","combineReducers","store","createStore","rootReducer","applyMiddleware","logger","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e9c36757.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ground.a122af34.jpg\";","module.exports = __webpack_public_path__ + \"static/media/warrior.d8b023eb.png\";","module.exports = __webpack_public_path__ + \"static/media/tree.f7e58740.png\";","module.exports = __webpack_public_path__ + \"static/media/goblin_regular.c800bdd9.png\";","module.exports = __webpack_public_path__ + \"static/media/golem.a0b06764.png\";","module.exports = __webpack_public_path__ + \"static/media/fortuna.2fdac4a2.png\";","import ground from './ground.jpg';\nimport warrior from './warrior.png';\nimport tree from './tree.png';\nimport goblin from './goblin_regular.png';\nimport golem from './golem.png';\nimport fortuna from './fortuna.png';\n\nexport const backgroundImg = ground;\nexport const characterImg = { warrior, tree, goblin, golem, fortuna };\n","export const colors = {\n  black: '#252525',\n  white: '#fff',\n  whiteTransparent: 'rgba(255, 255, 255, 0.8)',\n  blue: '#007ce0',\n  navy: '#004175',\n  gray: '#5c5c5c50',\n  greenTransparent: '#5ea56a',\n  glassTransparent: 'rgba(190,255,247, 0.6)',\n  glass: 'rgba(190,255,247, 0.8)',\n  redMain: '#df4646',\n  redTransparent: 'rgba(255, 0, 0, 0.418)',\n};\n\nexport const boxShadow = {\n  standard: '2px 1px 5px 2px rgba(0, 0, 0, 0.4)',\n  large: '5px 0px 10px 5px rgba(0, 0, 0, 0.8)',\n  standardInset: 'inset 1px 1px 5px -2px rgba(0, 0, 0, 0.8)',\n  largeInset: 'inset 1px 1px 20px -4px rgba(0, 0, 0, 0.8)',\n  standarInsetWithColor: color => `inset 1px 1px 20px -4px ${color}`,\n};\n\nexport const borderRadius = {\n  standard: '6px',\n  large: '20px',\n};\n\nconst breakpoints = ['425px', '900px'];\n\nbreakpoints.sm = breakpoints[0];\n\nexport const media = {\n  small: `(min-width: ${breakpoints[0]})`,\n  medium: `(min-width: ${breakpoints[1]})`,\n};\n\nexport const fonts = {\n  regular: 'Lora',\n  bold: 'Lora-Bold',\n};\n\nexport default {\n  colors,\n  breakpoints,\n  boxShadow,\n};\n","import styled from \"styled-components\";\nimport { backgroundImg } from \"../../assets/images\";\nimport { colors, boxShadow, borderRadius, fonts } from '../../theme';\n\nexport const Wrapper = styled.div`\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  background: url(${backgroundImg}) center center/cover no-repeat;\n  overflow: hidden;\n  font-family: ${fonts.regular};\n`;\n\nexport const FooterWrapper = styled.div`\n  margin-top: auto;\n  background-color: ${colors.whiteTransparent};\n  box-shadow: ${boxShadow.standard};\n  border-radius: ${borderRadius.large};\n  height: 50px;\n  padding: 5px 20px;\n  display: flex;\n  position: relative;\n  top: 27px;\n  font-size: 14px;\n  justify-content: center;\n`;\n\nexport const IconWrapper = styled.span`\n  display: block;\n  width: 15px;\n  margin-left: 10px;\n`;\n","import styled from 'styled-components';\nimport { colors, boxShadow, media, borderRadius } from '../../theme';\n\nexport const HeaderWrapper = styled.div`\n  box-shadow: ${boxShadow.large};\n  border-radius: ${borderRadius.large};\n  position: relative;\n  top: -20px;\n  padding: 30px 10px 10px 10px;\n  background-color: ${colors.whiteTransparent};\n  max-height: 142px;\n  padding-bottom: 0;\n\n  @media ${media.small} {\n    max-height: 96px;\n    padding-bottom: 10px;\n  }\n`;\n\nexport const HeaderList = styled.ul`\n  display: flex;\n  justify-content: space-around;\n  flex-wrap: wrap;\n\n  @media ${media.small} {\n    flex-wrap: nowrap;\n  }\n`;\n","import styled from \"styled-components\";\n\nexport const StyledContainer = styled.div`\n  max-width: 1000px;\n  margin: auto;\n  padding: 10px;\n  width: 100%;\n`;\n","export default {\n    home: '/grid-battle',\n    battle: '/grid-battle/battle',\n    about: '/grid-battle/about',\n}","import styled from 'styled-components';\nimport { colors, boxShadow, borderRadius, media } from '../../theme';\n\nexport const StyledButton = styled.div`\n  padding: 5px 10px;\n  background-color: ${colors.white};\n  min-width: 100px;\n  border-radius: ${borderRadius.standard};\n  box-shadow: ${boxShadow.standardInset}, 0 0 0 rgba(255, 255, 255, 0);\n  transition: all 300ms ease-in-out;\n  cursor: ${props => (props.disabled ? 'default' : 'pointer')};\n  background-color: ${props => (props.disabled ? colors.gray : '')};\n\n  ${props =>\n    props.disabled\n      ? ''\n      : `  &:hover {\n    box-shadow: inset 0 0 0 rgba(255, 255, 255, 0), ${boxShadow.standard};\n  }`}\n\n  @media ${media.small} {\n    margin-bottom: 0;\n  }\n`;\n\nexport const StyledButtonPrimary = styled(StyledButton)`\n  padding: 10px 40px;\n  margin-bottom: 10px;\n`;\n\nexport const StyledButtonSecondary = styled(StyledButton)`\n  padding: 7px 14px;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { StyledButton, StyledButtonPrimary, StyledButtonSecondary } from './styledButton';\n\nconst types = {\n    primary: StyledButtonPrimary,\n    secondary: StyledButtonSecondary,\n}\n\nconst Button = props => {\n  const { text, func, disabled, type } = props;\n\n  const ButtonType = types[type] || StyledButton;\n\n  return (\n    <ButtonType onClick={func} disabled={disabled}>\n      {text}\n    </ButtonType>\n  );\n};\n\nButton.propTypes = {\n  text: PropTypes.string,\n  func: PropTypes.func,\n  disabled: PropTypes.bool,\n  type: PropTypes.string,\n};\n\nButton.defaultProps = {\n  text: '',\n  func: () => {},\n  disabled: false,\n  type: '',\n};\n\nexport default Button;\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { HeaderWrapper, HeaderList } from './styledHeader';\nimport { StyledContainer } from '../StyledContainer';\nimport routes from '../../App/routes';\nimport Button from '../Button';\n\nconst Header = props => {\n  const { allCharacters } = props;\n\n  const [showConfirm, setShowConfirm] = useState(false);\n  const [confirmationRoute, setConfirmationRoute] = useState('');\n\n  const location = useLocation().pathname;\n  const gameInProgress = allCharacters.length > 0;\n\n  const confirmPageChange = () => {\n    setShowConfirm(!showConfirm);\n  };\n\n  return (\n    <HeaderWrapper>\n      <StyledContainer>\n        <nav>\n          <HeaderList>\n            {!showConfirm ? (\n              <>\n                <Link\n                  to={routes.home}\n                  onClick={e => {\n                    if (gameInProgress) {\n                      e.preventDefault();\n                      setConfirmationRoute(routes.home);\n                      confirmPageChange();\n                    }\n                  }}\n                >\n                  <Button\n                    type={'primary'}\n                    disabled={location === routes.home}\n                    text={'Home'}\n                  />\n                </Link>\n                <Link to={routes.battle}>\n                  <Button\n                    type={'primary'}\n                    disabled={location === routes.battle}\n                    text={'Battle'}\n                  />\n                </Link>\n                <Link\n                  to={routes.about}\n                  onClick={e => {\n                    if (gameInProgress) {\n                      e.preventDefault();\n                      setConfirmationRoute(routes.about);\n                      confirmPageChange();\n                    }\n                  }}\n                >\n                  <Button\n                    type={'primary'}\n                    disabled={location === routes.about}\n                    text={'About'}\n                  />\n                </Link>\n              </>\n            ) : (\n              <>\n                <Link\n                  to={confirmationRoute}\n                  onClick={() => {\n                    confirmPageChange();\n                  }}\n                >\n                  <Button type={'primary'} text={'Confirm'} />\n                </Link>\n                <div>This will end current game. Proceed?</div>\n                <Button\n                  type={'primary'}\n                  text={'Cancel'}\n                  func={() => {\n                    confirmPageChange();\n                  }}\n                />\n              </>\n            )}\n          </HeaderList>\n        </nav>\n      </StyledContainer>\n    </HeaderWrapper>\n  );\n};\n\nHeader.propTypes = {\n  allCharacters: PropTypes.array,\n};\n\nHeader.defaultProps = {\n  allCharacters: [],\n};\n\nconst mapStateToProps = state => ({\n  allCharacters: state.TurnReducer.turnInfo.get('allCharacters'),\n});\n\nconst mapDispatchToProps = dispatch => ({});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\n","import styled from 'styled-components';\n\nexport const StyledIcoMoon = styled.div`\n  width: 100%;\n  cursor: pointer;\n  transition: all ease .3s;\n\n  &:hover {\n      opacity: 0.7;\n  }\n`;\n","import React from 'react';\nimport IcoMoon from 'react-icomoon';\nimport { StyledIcoMoon } from './styledIcoMoon';\n\nconst iconSet = require('./selection.json');\n\nconst Icon = ({ ...props }) => {\n  return (\n    <StyledIcoMoon>\n      <IcoMoon iconSet={iconSet} {...props} />\n    </StyledIcoMoon>\n  );\n};\n\nexport default Icon;\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Wrapper, FooterWrapper, IconWrapper } from './PageWrapperStyle';\nimport Header from '../../components/Header';\nimport Icon from '../../components/Icon';\n\nconst PageWrapper = props => {\n  const [interacted, setInteracted] = useState(false);\n\n  return (\n    <Wrapper\n      onClick={() => {\n        !interacted && setInteracted(true);\n      }}\n    >\n      <Header />\n\n      {props.children}\n\n      <FooterWrapper>\n        Created by - Stefan Deak\n        <a href=\"https://www.linkedin.com/in/stefan-deak-ab7b99182/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <IconWrapper>\n            <Icon icon=\"linkedin\" />\n          </IconWrapper>\n        </a>\n        <a href=\"https://github.com/StefanopuloZ\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <IconWrapper>\n            <Icon icon=\"github\" />\n          </IconWrapper>\n        </a>\n      </FooterWrapper>\n    </Wrapper>\n  );\n};\n\nPageWrapper.propTypes = {\n  children: PropTypes.object,\n};\n\nPageWrapper.defaultProps = {\n  childrenchildren: {},\n};\n\nconst mapStateToProps = state => ({});\n\nconst mapDispatchToProps = dispatch => ({});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PageWrapper);\n","import styled from 'styled-components';\nimport { colors, boxShadow, borderRadius, fonts } from '../../theme';\n\nexport const StyledHome = styled.div`\n  min-height: calc(100vh - 200px);\n  background-color: ${colors.whiteTransparent};\n  border-radius: ${borderRadius.large};\n  box-shadow: ${boxShadow.standard};\n  display: flex;\n  flex-direction: column;\n  padding: 10px 20px;\n  padding-bottom: 40px;\n  margin-bottom: -12px;\n\n  h1 {\n    margin-top: 80px;\n    font-size: 42px;\n    text-align: center;\n    width: 100%;\n    font-family: ${fonts.bold};\n    margin-bottom: 40px;\n  }\n\n  h2 {\n    margin-top: 20px;\n    font-size: 36px;\n    text-align: center;\n    width: 100%;\n    font-family: ${fonts.bold};\n    margin-bottom: 40px;\n  }\n\n  h3 {\n    margin-top: 30px;\n    font-size: 24px;\n    text-align: center;\n    width: 100%;\n    font-family: ${fonts.bold};\n    margin-bottom: 10px;\n  }\n\n  p {\n    margin-top: 20px;\n    font-size: 22px;\n    font-family: ${fonts.bold};\n  }\n\n  ul {\n    margin-top: 20px;\n    font-size: 16px;\n    line-height: 1.4;\n    list-style: circle;\n    margin-left: 40px;\n  }\n\n  a {\n    color: ${colors.blue};\n    border-radius: ${borderRadius.standard};\n    cursor: pointer;\n    box-shadow: ${boxShadow.standardInset}, 0 0 0 rgba(255, 255, 255, 0);\n    display: inline-block;\n    padding: 0 4px;\n    transition: all 0.3s ease;\n\n    &:hover {\n      box-shadow: inset 0 0 0 rgba(255, 255, 255, 0), ${boxShadow.standard};\n      color: ${colors.blue};\n    }\n\n    &:visited,\n    &:focus {\n      color: ${colors.blue};\n    }\n  }\n`;\n","import React from 'react';\nimport { StyledHome } from './StyledHome';\nimport { StyledContainer } from '../../components/StyledContainer';\n\nconst Home = props => {\n  return (\n    <StyledContainer>\n      <StyledHome>\n        <h1>React.js Grid Battle</h1>\n        <p>Welcome!</p>\n        <p>Battle against AI in a procedurally generated maps.</p>\n      </StyledHome>\n    </StyledContainer>\n  );\n};\n\nexport default Home;\n","import styled from 'styled-components';\nimport { StyledHome } from '../home/StyledHome';\nimport { fonts } from '../../theme';\n\nexport const StyledAbout = styled(StyledHome)`\n  text-align: left;\n  font-size: 16px;\n\n  p {\n    margin-top: 10px;\n    line-height: 1.4;\n    font-size: 16px;\n    font-family: ${fonts.regular};\n    text-align: left;\n  }\n`;\n","import React from 'react';\nimport { StyledAbout } from './styledAbout';\nimport { StyledContainer } from '../../components/StyledContainer';\n\nconst Help = props => {\n  return (\n    <StyledContainer>\n      <StyledAbout>\n        <h3>About:</h3>\n        <p>\n          Hello, there! Grid Battle is a snapshot of fantasy setting turn-based\n          battle in a square grid. It is not meant to be a full game (not yet at\n          least), but more of a showcase what can be done in React with a lot of\n          work and a little bit of imagination. This project was done in free\n          time aside from my regular job as a Fronted developer. Currently, most\n          of the features I have set out to do in the begining are complete so I\n          decided to put it here for everyone to see and, hopefully, have a bit\n          of fun. Code base is free to be inspected and used in my{' '}\n          <a\n            href=\"https://github.com/StefanopuloZ/grid-battle\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            github repo\n          </a>{' '}\n          where you can find adittional technical info as well. Here, I will\n          state that I have used\n          <a\n            href=\"https://reactjs.org/\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            {' '}\n            React.js 16.10.2\n          </a>{' '}\n          with{' '}\n          <a\n            href=\"https://styled-components.com/\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Styled Components\n          </a>\n          library for css. No other graphical library has been used.\n        </p>\n        <h3>Rules:</h3>\n        <p>\n          Rules are just loosely based on Dungeons and Dragons d20 system. d20\n          means that each attack generates a number in 1-20 range which is\n          equivalent to the tweanty sided die roll. I have chosen this system as\n          my times being DM (Dungeon Master) are something that brings good\n          memories of long daily sessions with a lot of fun. So how does it\n          work?\n        </p>\n        <ul>\n          <li>\n            HP: Characters hit points. Once this goes to 0 or less character is\n            dead.\n          </li>\n          <li>\n            AC: Armor Class. Number that represents characters defense. If\n            attack roll with bonuses equals to or is greater then this number\n            there is a HIT and damage will be rolled.\n          </li>\n          <li>\n            Damage: Once character is hit, attacking characters rolls damage in\n            said damage range. (1-6) for example and deducts that from hp.\n          </li>\n          <li>\n            Attack: Bonus that is added to 1d20 roll and compared against\n            targets AC to calculate if a HIT is being made.\n          </li>\n          <li>Speed: How far character can move</li>\n          <li>\n            Initiative: Characters with greater initiative will act before\n          </li>\n        </ul>\n        <h3>Features:</h3>\n        <ul>\n          <li>Working AI with assigned weight system for each move</li>\n          <li>Random map generation and character placement</li>\n          <li>Custom attack and movement animations</li>\n          <li>Complete basic battle system with rules</li>\n        </ul>\n      </StyledAbout>\n    </StyledContainer>\n  );\n};\n\nexport default Help;\n","import styled from 'styled-components';\nimport { colors, boxShadow, borderRadius, media } from '../../theme';\n\nexport const StyledGrid = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  width: 100%;\n  max-width: 600px;\n  margin: auto;\n  box-shadow: ${boxShadow.standard};\n  border-radius: ${borderRadius.standard};\n  background-color: ${props =>\n    props.empty ? colors.glassTransparent : 'transparent'};\n  padding-top: ${props => (props.empty ? '66.66%' : '0')};\n  overflow: hidden;\n\n  @media ${media.medium} {\n    max-width: 100%;\n    width: 66.66%;\n  }\n`;\n\nexport const StyledGridWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n\n  @media ${media.medium} {\n    flex-direction: row;\n  }\n`;\n","import * as ACTION_TYPES from '../action-types';\n\nexport const updateGrid = (grid, gameId) => ({\n  type: ACTION_TYPES.UPDATE_GRID,\n  grid,\n  gameId,\n});\n\nexport const createGrid = (settings, gameId) => ({\n  type: ACTION_TYPES.CREATE_GRID,\n  settings,\n  gameId,\n});\n\nexport const destroyGrid = () => ({\n  type: ACTION_TYPES.DESTROY_GRID,\n});\n","export const UPDATE_GRID = 'UPDATE_GRID';\nexport const CREATE_GRID = 'CREATE_GRID';\nexport const DESTROY_GRID = 'DESTROY_GRID';\n\n","import * as ACTION_TYPES from '../action-types';\n\nexport const startTurn = (grid, gameId) => ({\n  type: ACTION_TYPES.START_TURN,\n  grid,\n  gameId,\n});\n\nexport const nextMove = (grid, gameId) => ({\n  type: ACTION_TYPES.NEXT_MOVE,\n  grid,\n  gameId,\n});\n\nexport const resetTurn = gameId => ({\n  type: ACTION_TYPES.RESET_TURN,\n  gameId,\n});\n\n","export const START_TURN = 'START_TURN';\nexport const NEXT_MOVE = 'NEXT_MOVE';\nexport const RESET_TURN = 'RESET_TURN';\n","// **** Helper Functions ***** //\n// **                       ** //\n\nexport const random = (min, max) => {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n};\n\nexport const copy = object => JSON.parse(JSON.stringify(object));\n\nexport const waitFor = time => {\n  return new Promise(resolve => {\n    setTimeout(() => {\n      resolve();\n    }, time);\n  });\n};\n","import { List } from 'immutable';\nimport { random, copy } from './helper-functions';\n\n// **** Map Generation Functions ***** //\n// **                               ** //\n\nconst randomiseFill = (grid, fill, rows) => {\n  const forbiddenTiles = [\n    3,\n    4,\n    5,\n    6,\n    7,\n    93,\n    94,\n    95,\n    96,\n    97,\n    84,\n    85,\n    86,\n    13,\n    12,\n    22,\n    32,\n    31,\n    41,\n    51,\n    50,\n    60,\n    61,\n    62,\n    72,\n    82,\n    83,\n    17,\n    18,\n    28,\n    29,\n    39,\n    49,\n    48,\n    58,\n    57,\n    67,\n    66,\n    76,\n    75,\n    85,\n  ];\n  let randomisedFill = [];\n\n  for (let i = 0; i < fill.obstacles(); ++i) {\n    let randomFill = random(0, rows * rows - 1);\n\n    if (forbiddenTiles.includes(randomFill)) {\n      --i;\n    } else {\n      randomisedFill.push(randomFill);\n    }\n  }\n\n  return randomisedFill;\n};\n\n// **** Grid Creator functions ***** //\n// **                             ** //\n\nconst makeAdjacentMatrix = (grid, rows, columns) => {\n  let newGrid = copy(grid);\n\n  newGrid.forEach((cell, index) => {\n    let adjecent = [];\n\n    let up = index - columns;\n    up > -1 && adjecent.push({ index: up, direction: 'up' });\n\n    let down = index + columns;\n    down < newGrid.length && adjecent.push({ index: down, direction: 'down' });\n\n    let left = index - 1;\n    left >= 0 &&\n      index % columns !== 0 &&\n      adjecent.push({ index: left, direction: 'left' });\n\n    let right = index + 1;\n    right < newGrid.length &&\n      right % columns !== 0 &&\n      adjecent.push({ index: right, direction: 'right' });\n\n    cell.adjecent = adjecent;\n  });\n\n  return newGrid;\n};\n\nconst fillGrid = (grid, fill, rows) => {\n  let newGrid = copy(grid);\n\n  const randomisedFill = randomiseFill(grid, fill, rows);\n\n  randomisedFill.forEach(obstacle => {\n    newGrid[obstacle].fill = 'X';\n    newGrid[obstacle].image = 'tree';\n    newGrid[obstacle].terrain = 'grass';\n  });\n\n  fill.characters().forEach(character => {\n    newGrid[character.index].fill = character.fill;\n    newGrid[character.index].image = character.image;\n    newGrid[character.index].stats = character;\n  });\n\n  return newGrid;\n};\n\nconst makeGrid = ({ rows, columns, fill }) => {\n  let grid = [];\n  for (let i = 0; i < rows; ++i) {\n    for (let j = 0; j < columns; ++j) {\n      grid.push({\n        index: i * columns + j,\n        fill: '',\n        adjecent: [],\n        visited: 0,\n        path: 0,\n        image: '',\n        terrain: 'grass',\n        animation: null,\n        direction: null,\n        sound: 'click',\n      });\n    }\n  }\n\n  grid = makeAdjacentMatrix(grid, rows, columns);\n\n  grid = fillGrid(grid, fill, rows);\n\n  return List(grid);\n};\n\n// **** Attack Function ***** //\n// **                      ** //\n\nconst calculateAttack = (attacker, defender) => {\n  const attackRoll = random(1, 20);\n  const attack = attacker.attack + attackRoll;\n  const isHit = attack >= defender.ac;\n\n  return {\n    isHit,\n    attack,\n    attackRoll,\n    attackBonus: attacker.attack,\n    defenderAC: defender.ac,\n  };\n};\n\nconst calculateDamage = (attacker, defender) => {\n  const damage = random(attacker.damage[0], attacker.damage[1]);\n  const hp = defender.hp - damage;\n  const isDead = hp <= 0;\n\n  return { isDead, damage, hp };\n};\n\nconst performAttack = (attacker, defender) => {\n  const attackResult = calculateAttack(attacker, defender);\n  const damageResult = attackResult.isHit\n    ? calculateDamage(attacker, defender)\n    : false;\n\n  return { attackResult, damageResult };\n};\n\n// **** Grid Cleanup and Paint functions ***** //\n// **                                       ** //\n\nconst clearPath = grid => {\n  return grid.map(cell => {\n    cell.path = 0;\n    cell.direction = null;\n    return cell;\n  });\n};\n\nconst fillPath = (grid, path) => {\n  let newGrid = clearPath(grid);\n\n  return newGrid.withMutations(newGrid => {\n    path.forEach(cell => {\n      newGrid.setIn([cell.index, 'path'], 1);\n    });\n  });\n};\n\n// **** Grid Search functions ***** //\n// **\n\n/* asd sasd asd asd */\n\nconst searchForPath = (grid, start, target) => {\n  let newGrid = grid.toJS();\n\n  let paths = [[newGrid[start]]];\n  let finalPath;\n\n  const searchStep = () => {\n    const newPaths = [];\n    paths.forEach(path => {\n      path[path.length - 1].adjecent.forEach(adjecentCell => {\n        if (newGrid[adjecentCell.index].index === target) {\n          finalPath = path;\n          newGrid[adjecentCell.index].direction = adjecentCell.direction;\n          finalPath.push(newGrid[adjecentCell.index]);\n        } else if (\n          newGrid[adjecentCell.index].visited === 0 &&\n          !newGrid[adjecentCell.index].fill\n        ) {\n          newGrid[adjecentCell.index].visited = 1;\n          const newPath = copy(path);\n          newPath.push(newGrid[adjecentCell.index]);\n          newPath[newPath.length - 1].direction = adjecentCell.direction;\n          newPaths.push(newPath);\n        }\n      });\n    });\n    return newPaths;\n  };\n\n  let counter = 0;\n  do {\n    ++counter;\n    if (counter > 299) {\n      console.log('time out!');\n    }\n    paths = searchStep();\n    if (finalPath) {\n      return finalPath;\n    } else if (paths.length === 0) {\n      console.log('path impossible!');\n      return false;\n    }\n  } while (!finalPath && counter < 300);\n};\n\nconst startSearch = (grid, start, target, character) => {\n  let newGrid = grid;\n  let newGridJS = newGrid.toJS();\n\n  const actingCharacter = newGridJS[start].stats;\n  const isAttack =\n    newGridJS[target].stats &&\n    newGridJS[target].stats.player !== actingCharacter.player;\n\n  if ((newGrid.get(target).fill && !isAttack) || (!start && start !== 0)) {\n    return null;\n  }\n\n  let result = searchForPath(grid, start, target);\n\n  let tilesToMove = character.speed;\n  let attackResult;\n  const isAttackPossible =\n    isAttack && result && result.length <= character.speed + 1;\n\n  if (isAttackPossible) {\n    if (result.length > character.speed) {\n      tilesToMove = character.speed;\n    } else {\n      tilesToMove = result.length - 1;\n    }\n    attackResult = performAttack(actingCharacter, newGridJS[target].stats);\n  }\n\n  if (result) {\n    result = result.splice(0, tilesToMove);\n    newGrid = fillPath(grid, result);\n    return { grid: List(newGrid), result, attackResult };\n  } else {\n    return null;\n  }\n};\n\n// **** Grid Move functions ***** //\n// **                          ** //\n\nconst moveCharacter = (grid, character, target) =>\n  grid\n    .setIn([character.index, 'fill'], '')\n    .setIn([character.index, 'image'], '')\n    .setIn([character.index, 'stats'], '')\n    .setIn([target.index, 'image'], character.image)\n    .setIn([target.index, 'fill'], character.fill)\n    .setIn([target.index, 'stats'], character)\n    .setIn([target.index, 'stats', 'index'], target.index);\n\nconst clearTile = (grid, tile) =>\n  grid\n    .setIn([tile, 'image'], '')\n    .setIn([tile, 'stats'], '')\n    .setIn([tile, 'fill'], '')\n    .setIn([tile, 'sound'], 'click');\n\nconst updateCharacter = (grid, character) =>\n  grid.setIn([character.index, 'stats'], character.stats);\n\nexport const GridHelper = {\n  makeGrid,\n  startSearch,\n  clearPath,\n  moveCharacter,\n  clearTile,\n  updateCharacter,\n};\n","import { keyframes } from 'styled-components';\n\nconst oppositeDirections = {\n  up: 'down',\n  down: 'up',\n  left: 'right',\n  right: 'left',\n};\n\nconst moveAnimationBuilder = (path, timeUnit, target) => {\n  const isAttacked = target.attackResult;\n  const attackTime = 3;\n\n  let animationString = ` 0% {\n      top: 0%;\n      left: 0%;\n    }\n  `;\n\n  const timePercentage = isAttacked\n    ? 100 / (path.length + attackTime)\n    : 100 / path.length;\n\n  let top = 0,\n    left = 0;\n  let percentage;\n\n  path.forEach((cell, index) => {\n    percentage =\n      path.length - 1 === index && !isAttacked ? 100 : timePercentage * index;\n\n    if (cell.direction === 'up') {\n      top -= 100;\n    } else if (cell.direction === 'down') {\n      top += 100;\n    } else if (cell.direction === 'left') {\n      left -= 100;\n    } else if (cell.direction === 'right') {\n      left += 100;\n    }\n\n    if (index !== 0) {\n      animationString += `\n        ${percentage}% {\n          top: ${top}%;\n          left: ${left}%;\n      }`;\n    }\n  });\n\n  if (isAttacked) {\n    const attackDirection = path[path.length - 1].adjecent.find(\n      cell => cell.index === target.defender.index\n    ).direction;\n    const oppositeDirecetion = oppositeDirections[attackDirection];\n    const topStarting = top;\n    const leftStarting = left;\n\n    percentage = percentage + timePercentage * 2;\n\n    if (oppositeDirecetion === 'up') {\n      top -= 50;\n    } else if (oppositeDirecetion === 'down') {\n      top += 50;\n    } else if (oppositeDirecetion === 'left') {\n      left -= 50;\n    } else if (oppositeDirecetion === 'right') {\n      left += 50;\n    }\n\n    animationString += `\n      ${percentage}% {\n        top: ${top}%;\n        left: ${left}%;\n      }`;\n\n    percentage = percentage + timePercentage / 4;\n\n    animationString += `\n      ${percentage}% {\n        top: ${top}%;\n        left: ${left}%;\n      }`;\n\n    percentage = percentage + timePercentage / 3;\n\n    if (attackDirection === 'up') {\n      top -= 90;\n    } else if (attackDirection === 'down') {\n      top += 90;\n    } else if (attackDirection === 'left') {\n      left -= 90;\n    } else if (attackDirection === 'right') {\n      left += 90;\n    }\n\n    animationString += `\n    ${percentage}% {\n      top: ${top}%;\n      left: ${left}%;\n    }`;\n\n    animationString += `\n      100% {\n        top: ${topStarting}%;\n        left: ${leftStarting}%;\n      }\n    `;\n  }\n\n  const animation = keyframes`\n  ${animationString}\n`;\n  const time = isAttacked\n    ? timeUnit * (path.length + attackTime)\n    : timeUnit * (path.length - 1);\n\n  return { animation, time };\n};\n\nconst selected = keyframes`\n  0% {\n    transform: rotate(0deg);\n  }\n\n  33.2% {\n    transform: rotate(-16deg);\n  }\n\n  83.18% {\n    transform: rotate(8deg);\n  }\n\n  100% {\n    transform: rotate(0deg);\n  }\n  \n`;\n\nconst first = keyframes`\n  0% {\n    opacity: 1;\n  }\n\n  50% {\n    opacity: 0;\n    width: 50px;\n    min-width: 50px;\n  }\n\n  100% {\n    width: 0px;\n    min-width: 0px;\n    opacity: 0;\n  }\n`;\n\nconst last = keyframes`\n  0% {\n    opacity: 0;\n  }\n\n  100% {\n    opacity: 1;\n  }\n`;\n\nexport const Animations = {\n  moveAnimationBuilder,\n  selected,\n  first,\n  last,\n};\n","import { copy } from './helper-functions';\n\nconst sortCharacters = (characters, value = 'initiative') => {\n  const sortedCharacters = copy(characters);\n  return sortedCharacters.sort((a, b) => b[value] - a[value]);\n};\n\nconst findCharacters = grid => {\n  const allCharacters = grid\n    .filter((value, index) => value.fill === 'C')\n    .map(character => character.stats);\n  const humanCharacters = allCharacters.filter(\n    value => value.player === 'human'\n  );\n\n  const aiCharacters = allCharacters.filter(value => value.player === 'ai');\n\n  return {\n    allCharacters: allCharacters.toJS(),\n    humanCharacters: humanCharacters.toJS(),\n    aiCharacters: aiCharacters.toJS(),\n  };\n};\n\nconst setNextCharacter = allCharacters => {\n  let newAllCharacters = copy(allCharacters);\n  const lastCharacter = newAllCharacters.shift();\n  return [...newAllCharacters, lastCharacter];\n};\n\nconst updateCharacters = (state, grid) => {\n  let updatedAllCharacters = setNextCharacter(\n    state.turnInfo.get('allCharacters')\n  );\n  const {\n    allCharacters,\n    humanCharacters,\n    aiCharacters,\n  } = TurnFunctions.findCharacters(grid);\n\n  const activeCharacterIds = allCharacters.map(character => character.id);\n\n  updatedAllCharacters = updatedAllCharacters.filter(character =>\n    activeCharacterIds.includes(character.id)\n  );\n\n  updatedAllCharacters = updatedAllCharacters.map(character => {\n    const toUpdate = allCharacters.find(\n      updateChar => updateChar.id === character.id\n    );\n    character = toUpdate;\n    return character;\n  });\n\n  const activeCharacter = updatedAllCharacters[0];\n\n  return {\n    allCharacters: updatedAllCharacters,\n    aiCharacters,\n    humanCharacters,\n    activeCharacter,\n  };\n};\n\nexport const TurnFunctions = {\n  sortCharacters,\n  setNextCharacter,\n  findCharacters,\n  updateCharacters,\n};\n","import { GridHelper } from './grid';\nimport { random } from './helper-functions';\n\nconst weightValues = {\n  toHitChance: (attack, AC) => {\n    return attack - AC > 0 ? 100 : -50;\n  },\n  canKill: (targetHP, damageMax) => {\n    return targetHP - damageMax <= 0 ? 200 : 0;\n  },\n  remainingHP: targetHP => (10 - targetHP > 0 ? (10 - targetHP) * 20 : 0),\n  threatLevel: (targetAttack, targetDamageMax) => {\n    return (targetAttack + targetDamageMax) * 10;\n  },\n};\n\nconst assignWeight = moves => {\n  const weightedMoves = moves.map(move => {\n    const activeCharacter = move.stats;\n    const target = move.target;\n    let calculatedWeight = 0;\n    let weightBreakdown = {};\n\n    let weight = 0;\n\n    const toHitChance = weightValues.toHitChance(\n      activeCharacter.attack,\n      target.ac\n    );\n    weight += toHitChance;\n    weightBreakdown.toHitChance = toHitChance;\n\n    const remainingHP = weightValues.remainingHP(target.hp);\n    weight += remainingHP;\n    weightBreakdown.remainingHP = remainingHP;\n\n    const canKill = weightValues.canKill(target.hp, activeCharacter.damage[1]);\n    weight += canKill;\n    weightBreakdown.canKill = canKill;\n\n    const threatLevel = weightValues.threatLevel(\n      target.attack,\n      target.damage[1]\n    );\n    weight += threatLevel;\n    weightBreakdown.threatLevel = threatLevel;\n\n    calculatedWeight = calculatedWeight + weight;\n\n    return { ...move, weight, calculatedWeight, weightBreakdown };\n  });\n\n  return weightedMoves;\n};\n\nconst checkPossibleMoves = (grid, activeCharacter, humanCharacters) => {\n  let possibleMoves = [];\n  let canAttack = false;\n\n  humanCharacters.forEach(character => {\n    const searchResult = GridHelper.startSearch(\n      grid,\n      activeCharacter.index,\n      character.index,\n      activeCharacter\n    );\n\n    if (searchResult) {\n      possibleMoves.push({\n        result: searchResult,\n        index: character.index,\n        target: character,\n        stats: activeCharacter,\n      });\n\n      if (!canAttack && searchResult.attackResult) {\n        canAttack = true;\n      }\n    }\n  });\n\n  if (canAttack) {\n    possibleMoves = possibleMoves.filter(move => move.result.attackResult);\n  }\n\n  return assignWeight(possibleMoves);\n};\n\nconst choseMove = moves => {\n  const maxWeight = moves[moves.length - 1].calculatedWeight;\n  const randomPick = random(0, maxWeight);\n\n  for (let i = 0; i < moves.length; i++) {\n    if (randomPick - moves[i].calculatedWeight <= 0) {\n      return moves[i].index;\n    }\n  }\n};\n\nconst calculateAiMove = (grid, activeCharacter, humanCharacters) => {\n  const possibleMoves = checkPossibleMoves(\n    grid,\n    activeCharacter,\n    humanCharacters\n  );\n\n  if (possibleMoves.length > 0) {\n    return choseMove(possibleMoves);\n  } else {\n    return null;\n  }\n};\n\nexport const AiFunctions = {\n  calculateAiMove,\n};\n","import styled from 'styled-components';\nimport { colors, boxShadow } from '../../theme';\n\nexport const StyledCell = styled.div`\n  display: flex;\n  position: relative;\n  background: ${colors.glassTransparent};\n  flex-basis: ${props => props.basis};\n  padding-top: ${props => props.basis};\n  cursor: ${props => props.fill === 'brown' ? 'not-allowed' : 'pointer'};\n  box-shadow: ${boxShadow.standardInset};\n`;\nexport const StyledCellContent = styled.div`\n  justify-content: center;\n  align-items: center;\n  display: flex;\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  top: 0;\n  left: 0;\n  transition: all 400ms ease; \n  background: ${props => props.path ? 'rgba(255, 192, 203, 0.3)' : 'transparent'};\n  &:hover {\n    box-shadow: ${boxShadow.largeInset};\n  }\n`;\n","import styled from 'styled-components';\nimport { characterImg } from '../../assets/images';\nimport { colors, boxShadow } from '../../theme';\nimport { Animations } from '../../logic-functions';\n\nconst playerBorders = {\n  human: colors.greenTransparent,\n  ai: colors.redMain,\n};\n\nconst getAnimation = (selected, animation) => {\n  if (animation && animation.animation) {\n    return [animation.animation, `${animation.time}ms linear forwards`];\n  } else if (selected) {\n    return [Animations.selected, '2s linear infinite'];\n  } else {\n    return '';\n  }\n};\n\nexport const StyledCellContentWrapper = styled.div`\n  position: relative;\n  z-index: ${props => (props.animation ? '200' : '100')};\n  width: 100%;\n  height: 100%;\n  animation: ${props => getAnimation(props.selected, props.animation)[0]}\n    // eslint-disable-next-line\n    ${props => getAnimation(props.selected, props.animation)[1]};\n`;\n\nexport const StyledCellContent = styled.div`\n  position: relative;\n  z-index: 100;\n  width: 100%;\n  height: 100%;\n  border-radius: 50%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: url(${props => characterImg[props.image]}) center center/cover\n    no-repeat;\n  box-shadow: ${props => (props.player ? boxShadow.standard : '')};\n  transform: ${props => (props.player ? 'scale(0.9)' : '')};\n`;\n\nexport const StyledIndicator = styled.div`\n  width: 90%;\n  height: 90%;\n  left: 5%;\n  top: 5%;\n  position: absolute;\n  border-radius: 50%;\n  background-color: ${props =>\n    props.player ? playerBorders[props.player] : ''};\n`;\n\nexport const StyledCellHp = styled.div`\n  position: absolute;\n  display: flex;\n  flex-direction: column;\n  border-radius: 50%;\n  height: 100%;\n  width: 100%;\n  z-index: 99999;\n  overflow: hidden;\n\n  & > div {\n    flex: 1;\n    background-color: ${colors.redTransparent};\n  }\n`;\n","import styled from 'styled-components';\nimport { colors } from '../../theme';\n\nexport const StyledHpOverlay = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  display: flex;\n  flex-direction: column;\n  border-radius: 50%;\n  height: 100%;\n  width: 100%;\n  z-index: 99999;\n  overflow: hidden;\n`;\n\nexport const StyledHpOverlayFill = styled.div`\n  flex: 1;\n  background-color: ${props =>\n    props.fill ? colors.redTransparent : 'transparent'};\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { StyledHpOverlay, StyledHpOverlayFill } from './styledHpOverlay';\n\nconst HpOverlay = props => {\n  const { hp, maxHp } = props;\n  const array = [];\n  const difference = maxHp - hp;\n\n  for (let i = 0; i < maxHp; i++) {\n    const fill = difference > i ? 'true' : '';\n    array.unshift(<StyledHpOverlayFill key={i} fill={fill} />);\n  }\n\n  return <StyledHpOverlay>{array}</StyledHpOverlay>;\n};\n\nHpOverlay.propTypes = {\n  hp: PropTypes.number.isRequired,\n  maxHp: PropTypes.number.isRequired,\n};\n\nHpOverlay.defaultProps = {};\n\nexport default HpOverlay;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { GridActions } from '../../actions';\nimport {\n  StyledCellContent,\n  StyledIndicator,\n  StyledCellContentWrapper,\n} from './styledCellContent';\nimport HpOverlay from '../HpOverlay';\n\nconst CellContent = props => {\n  const { cell, selected, grid, updateGrid, gameId } = props;\n  const { index, stats } = cell;\n  const hp = stats && stats.hp ? stats.hp : null;\n  const maxHp = stats && stats.maxHp ? stats.maxHp : null;\n  const player = stats && stats.player;\n\n  if (cell.attack) {\n    let newGrid = grid;\n    setTimeout(() => {\n      newGrid = newGrid.setIn([index, 'attack'], false);\n      updateGrid(newGrid, gameId);\n    }, 500);\n  }\n\n  return (\n    <StyledCellContentWrapper selected={selected} animation={cell.animation}>\n      <StyledCellContent\n        selected={selected}\n        image={cell.image}\n        attack={cell.attack}\n        player={player}\n      >\n        {hp && <HpOverlay hp={hp} maxHp={maxHp} />}\n      </StyledCellContent>\n      <StyledIndicator player={player} />\n    </StyledCellContentWrapper>\n  );\n};\n\nCellContent.propTypes = {\n  cell: PropTypes.object.isRequired,\n  selected: PropTypes.oneOfType([PropTypes.bool, PropTypes.number]),\n  grid: PropTypes.object.isRequired,\n  updateGrid: PropTypes.func.isRequired,\n  gameId: PropTypes.number,\n};\n\nCellContent.defaultProps = {\n  selected: false,\n  gameId: null,\n};\n\nconst mapStateToProps = state => ({\n  grid: state.GridReducer.grid,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  updateGrid: grid => dispatch(GridActions.updateGrid(grid)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CellContent);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { StyledCell, StyledCellContent } from './styledCell';\nimport CellContent from '../CellContent';\n\nconst Cell = props => {\n  const { columns, cell, selected, onClick, onMouseEnter } = props;\n\n  const basis = 100 / columns + '%';\n  let fill = '';\n  if (cell.fill === 'S') {\n    fill = 'lightgreen';\n  } else if (cell.fill === 'X') {\n    fill = 'brown';\n  }\n\n  return (\n    <StyledCell basis={basis} fill={fill} image={cell.terrain}>\n      <StyledCellContent\n        onClick={() => {\n          onClick();\n        }}\n        selected={selected}\n        onMouseEnter={onMouseEnter}\n        path={cell.path}\n      >\n        <CellContent cell={cell} selected={selected} />\n      </StyledCellContent>\n    </StyledCell>\n  );\n};\n\nCell.propTypes = {\n  cell: PropTypes.object,\n  columns: PropTypes.number.isRequired,\n  selected: PropTypes.oneOfType([PropTypes.bool, PropTypes.number]),\n  onClick: PropTypes.func.isRequired,\n  onMouseEnter: PropTypes.func.isRequired,\n};\n\nCell.defaultProps = {\n  cell: {},\n  selected: false,\n};\n\nconst mapStateToProps = state => ({\n  columns: state.ConfigReducer.settings.columns,\n});\n\nconst mapDispatchToProps = dispatch => ({});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Cell);\n","import styled from 'styled-components';\nimport { colors, boxShadow, borderRadius, media } from '../../../theme';\n\nconst StyledConsole = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-wrap: nowrap;\n  width: 100%;\n  margin-left: auto;\n  height: 300px;\n  max-height: 315px;\n  padding: 4px 8px;\n  margin-top: auto;\n  text-align: left;\n  font-size: 14px;\n  overflow-y: scroll;\n  box-shadow: ${boxShadow.standard};\n  border-radius: ${borderRadius.standard};\n  background-color: ${colors.glassTransparent};\n\n  &::-webkit-scrollbar {\n    -webkit-appearance: none;\n    width: 7px !important;\n  }\n\n  &::-webkit-scrollbar-thumb {\n    border-radius: 4px;\n    background-color: ${colors.gray};\n    box-shadow: ${boxShadow.standard};\n  }\n\n  @media ${media.small} {\n    width: calc(50% - 5px);\n  }\n\n  @media ${media.medium} {\n    height: calc(50% - 10px);\n    width: 100%;\n  }\n`;\n\nexport default StyledConsole;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport StyledConsole from './styledConsole';\n\nconst playerColors = {\n  human: 'green',\n  ai: 'red',\n};\n\nconst Console = props => {\n  const { action, gameInProgress } = props;\n\n  const [actions, setActions] = useState([]);\n\n  useEffect(() => {\n    if (action && gameInProgress) {\n      let story = '';\n      const playerColor = playerColors[action.selected.stats.player];\n      const skipped = action.skipped;\n      const character = action.selected.stats;\n      const path = action.path;\n      const defender = action.defender ? action.defender.stats : null;\n      const attackResult = action.attackResult\n        ? action.attackResult.attackResult\n        : null;\n      const damageResult = action.attackResult\n        ? action.attackResult.damageResult\n        : null;\n\n      if (skipped) {\n        story += `<span style='color: ${playerColor};'>${character.name}</span> SKIPPED turn `;\n      } else {\n        if (path.length - 1 > 0) {\n          story += `<span style='color: ${playerColor};'>${\n            character.name\n          }</span> moved ${path.length - 1} tile${\n            path.length - 1 > 1 ? 's' : ''\n          }${action.defender ? '<br>' : ''}`;\n        }\n\n        if (action.defender) {\n          story += `<span style='color: ${playerColor};'>${character.name}</span> attacked <span style='color: ${playerColors[defender.player]};'>${defender.name}</span><br>`;\n          story += `${character.name} rolled ${attackResult.attack} 1d20(${\n            attackResult.attackRoll\n          }) + ${attackResult.attackBonus} vs. AC:${\n            attackResult.defenderAC\n          } and ${\n            attackResult.isHit\n              ? `<span style='color: purple;'>${\n                  damageResult.isDead ? 'KILLED!' : 'HIT!'\n                } for ${damageResult.damage} damage.</span>`\n              : `<span style='color: purple;'>MISSED!</span>`\n          }`;\n        }\n      }\n\n      story += '<br><br>';\n\n      setActions([story, ...actions]);\n    } else {\n      setActions([]);\n    }\n    // eslint-disable-next-line\n  }, [action]);\n\n  return (\n    <StyledConsole>\n      {actions.map((action, index) => (\n        <p key={index} dangerouslySetInnerHTML={{ __html: action }} />\n      ))}\n    </StyledConsole>\n  );\n};\n\nConsole.propTypes = {\n  action: PropTypes.object,\n  selected: PropTypes.oneOfType([PropTypes.bool, PropTypes.number]),\n  gameInProgress: PropTypes.bool.isRequired,\n};\n\nConsole.defaultProps = {\n  selected: false,\n  action: {},\n};\n\nexport default Console;\n","import styled from 'styled-components';\nimport { colors, boxShadow, borderRadius, media } from '../../../theme';\n\nconst StyledSidebarInfo = styled.div`\n  display: flex;\n  width: 100%;\n  height: 300px;\n  box-shadow: ${boxShadow.standard};\n  border-radius: ${borderRadius.standard};\n  background-color: ${colors.glass};\n  padding: 4px 8px;\n\n  @media ${media.small} {\n    width: calc(50% - 5px);\n  }\n\n  @media ${media.medium} {\n    height: 50%;\n    width: 100%;\n  }\n`;\n\nexport default StyledSidebarInfo;\n","import styled from 'styled-components';\nimport { characterImg } from '../../assets/images';\nimport { colors, boxShadow, borderRadius, fonts } from '../../theme';\n\nexport const StyledCharacterInfo = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  font-family: ${fonts.regular};\n  padding: 0 10px;\n\n  h2 {\n    font-size: 24px;\n    font-weight: bolder;\n    text-shadow: 2px 2px 2px\n      ${props =>\n        props.player === 'ai' ? colors.redMain : colors.greenTransparent};\n    margin: 10px auto;\n  }\n`;\n\nexport const StyledCharacterInfoStat = styled.div`\n  width: auto;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  font-weight: bold;\n  margin-top: 5px;\n  padding: 0;\n  font-weight: bolder;\n  font-size: 16px;\n\n  span {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border-radius: 50%;\n    width: 26px;\n    height: 26px;\n    box-shadow: ${props =>\n      props.player === 'ai'\n        ? boxShadow.standarInsetWithColor(colors.redMain)\n        : boxShadow.standarInsetWithColor(colors.greenTransparent)};\n    margin-left: 10px;\n    font-size: 16px;\n  }\n`;\n\nexport const StyledCharacterInfoTitle = styled.div``;\n\nexport const StyledCharacterInfoImage = styled.div`\n  position: relative;\n  width: 70px;\n  padding-top: 70px;\n  border-radius: 50%;\n  background: url(${props => characterImg[props.image]}) center center/cover\n    no-repeat;\n  margin: 5px auto;\n  box-shadow: ${boxShadow.standardInset};\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  StyledCharacterInfo,\n  StyledCharacterInfoTitle,\n  StyledCharacterInfoImage,\n  StyledCharacterInfoStat,\n} from './styledCharacterInfo';\nimport HpOverlay from '../HpOverlay';\n\nconst CharacterInfo = props => {\n  const { damage, name, speed, image, hp, maxHp, attack, ac, player } = props;\n\n  return (\n    <StyledCharacterInfo player={player}>\n      <StyledCharacterInfoTitle>\n        <StyledCharacterInfoImage image={image}>\n          <HpOverlay hp={hp} maxHp={maxHp} />\n        </StyledCharacterInfoImage>\n        <h2>{name}</h2>\n      </StyledCharacterInfoTitle>\n      <StyledCharacterInfoStat player={player}>\n        HP:\n        <span>\n          {hp}/{maxHp}\n        </span>\n      </StyledCharacterInfoStat>\n      <StyledCharacterInfoStat player={player}>\n        Attack:<span>{attack}</span>\n      </StyledCharacterInfoStat>\n      <StyledCharacterInfoStat player={player}>\n        AC:<span>{ac}</span>\n      </StyledCharacterInfoStat>\n      <StyledCharacterInfoStat player={player}>\n        Speed:<span>{speed}</span>\n      </StyledCharacterInfoStat>\n      <StyledCharacterInfoStat player={player}>\n        Damage:<span>{damage[0] + '-' + damage[1]}</span>\n      </StyledCharacterInfoStat>\n    </StyledCharacterInfo>\n  );\n};\n\nCharacterInfo.propTypes = {\n  name: PropTypes.string.isRequired,\n  speed: PropTypes.number.isRequired,\n  image: PropTypes.string.isRequired,\n  hp: PropTypes.number.isRequired,\n  attack: PropTypes.number.isRequired,\n  ac: PropTypes.number.isRequired,\n  player: PropTypes.string.isRequired,\n  maxHp: PropTypes.number.isRequired,\n  damage: PropTypes.array.isRequired,\n};\n\nCharacterInfo.defaultProps = {};\n\nexport default CharacterInfo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport StyledSidebarInfo from './styledSidebarInfo';\nimport CharacterInfo from '../../CharacterInfo';\n\nconst SidebarInfo = props => {\n  const { activeCharacter, hoverCharacter } = props;\n\n  return (\n    <>\n      <StyledSidebarInfo>\n        {activeCharacter.name && (\n          <CharacterInfo\n            name={activeCharacter.name}\n            attack={activeCharacter.attack}\n            hp={activeCharacter.hp}\n            maxHp={activeCharacter.maxHp}\n            ac={activeCharacter.ac}\n            speed={activeCharacter.speed}\n            image={activeCharacter.image}\n            player={activeCharacter.player}\n            damage={activeCharacter.damage}\n          />\n        )}\n        {hoverCharacter.name && (\n          <CharacterInfo\n            name={hoverCharacter.name}\n            attack={hoverCharacter.attack}\n            hp={hoverCharacter.hp}\n            maxHp={hoverCharacter.maxHp}\n            ac={hoverCharacter.ac}\n            speed={hoverCharacter.speed}\n            image={hoverCharacter.image}\n            player={hoverCharacter.player}\n            damage={hoverCharacter.damage}\n          />\n        )}\n      </StyledSidebarInfo>\n      ;\n    </>\n  );\n};\n\nSidebarInfo.propTypes = {\n  gameInProgress: PropTypes.bool,\n  activeCharacter: PropTypes.object.isRequired,\n  hoverCharacter: PropTypes.object.isRequired,\n};\n\nSidebarInfo.defaultProps = {\n};\n\nexport default SidebarInfo;\n","import styled from 'styled-components';\nimport { media } from '../../theme';\n\nconst StyledSidebar = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-wrap: nowrap;\n  width: 100%;\n  padding-left: 0;\n  margin-top: 20px;\n\n  @media ${media.small} {\n    flex-direction: row;\n  }\n\n  @media ${media.medium} {\n    flex-direction: column;\n    width: 33.3%;\n    margin-top: 0px;\n    padding-left: 10px;\n  }\n`;\n\nexport default StyledSidebar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Console from './Console';\nimport SidebarInfo from './SidebarInfo';\nimport StyledSidebar from './styledSidebar';\n\nconst Sidebar = props => {\n  const { action, gameInProgress, activeCharacter, hoverCharacter } = props;\n\n  return (\n    <StyledSidebar>\n      <SidebarInfo gameInProgress={gameInProgress} activeCharacter={activeCharacter} hoverCharacter={hoverCharacter} />\n      <Console action={action} gameInProgress={gameInProgress} />\n    </StyledSidebar>\n  );\n};\n\nSidebar.propTypes = {\n  action: PropTypes.object,\n  gameInProgress: PropTypes.bool.isRequired,\n  activeCharacter: PropTypes.object.isRequired,\n  hoverCharacter: PropTypes.object.isRequired,\n};\n\nSidebar.defaultProps = {\n  action: null,\n};\n\nexport default Sidebar;\n","import styled from 'styled-components';\nimport { media } from '../../theme';\n\nexport const StyledGridHeader = styled.div`\n  display: flex;\n  width: 100%;\n  align-items: center;\n  margin-bottom: 10px;\n  flex-direction: column-reverse;\n\n  @media ${media.medium} {\n    border: none;\n    flex-direction: row;\n  }\n`;\n","import styled from 'styled-components';\nimport { colors, boxShadow, borderRadius, fonts, media } from '../../theme';\nimport {\n  StyledCellContent,\n  StyledIndicator,\n  StyledCellContentWrapper,\n} from '../CellContent/styledCellContent';\nimport { Animations } from '../../logic-functions';\n\nconst getAnimation = moved => {\n  if (moved === 'first') {\n    return [Animations.first, '800ms ease-in forwards'];\n  } else if (moved === 'last') {\n    return [Animations.last, '300ms ease-in forwards'];\n  } else {\n    return '';\n  }\n};\n\nexport const StyledTitle = styled.div`\n  padding: 0 5px 0 10px;\n  line-height: 1.3;\n  font-weight: bold;\n  font-size: 14px;\n  width: 60px;\n  min-width: 60px;\n  font-family: ${fonts.bold};\n`;\n\nexport const StyledTurnBar = styled.div`\n  display: flex;\n  border: 1px solid darkgray;\n  width: 100%;\n  align-items: center;\n  height: 50px;\n  overflow-x: auto;\n  overflow-y: hidden;\n  box-shadow: ${boxShadow.standard};\n  border-radius: ${borderRadius.standard};\n  background-color: ${colors.glassTransparent};\n  margin-bottom: 10px;\n\n  &::-webkit-scrollbar {\n    -webkit-appearance: none;\n    width: 7px !important;\n  }\n\n  &::-webkit-scrollbar-thumb {\n    border-radius: 4px;\n    background-color: ${colors.gray};\n    box-shadow: ${boxShadow.standard};\n  }\n\n  @media ${media.medium} {\n    height: 60px;\n    width: 66.6%;\n    margin-bottom: 0;\n  }\n`;\n\nexport const StyledTBCellContent = styled(StyledCellContent)``;\n\nexport const StyledTBIndicator = styled(StyledIndicator)``;\n\nexport const StyledTBContentWrapper = styled(StyledCellContentWrapper)`\n  position: relative;\n  width: 50px;\n  min-width: 50px;\n  height: 50px;\n  animation: '';\n  animation: ${props => getAnimation(props.moved)[0]} ${props =>\n  getAnimation(props.moved)[1]};\n`;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport HpOverlay from '../HpOverlay';\nimport {\n  StyledTurnBar,\n  StyledTBCellContent,\n  StyledTBIndicator,\n  StyledTBContentWrapper,\n  StyledTitle,\n} from './styledTurnBar';\nimport { waitFor, copy } from '../../logic-functions/helper-functions';\n\nconst TurnBar = props => {\n  const { allCharacters, selected, gameInProgress } = props;\n  const [characters, setCharacters] = useState(null);\n\n  /* **  Handle character order change  ** */\n  useEffect(() => {\n    if (allCharacters.length > 0) {\n      if (!characters) {\n        setCharacters(allCharacters);\n      } else {\n        changeTurnOrder();\n      }\n    } else {\n      setCharacters(null);\n    }\n    // eslint-disable-next-line\n  }, [allCharacters]);\n\n  async function changeTurnOrder() {\n    let animatedCharacters = copy(characters);\n    animatedCharacters[0].moved = 'first';\n    setCharacters(animatedCharacters);\n\n    await waitFor(1000);\n\n    animatedCharacters = copy(allCharacters);\n    animatedCharacters[animatedCharacters.length - 1].moved = 'last';\n    setCharacters(animatedCharacters);\n\n    await waitFor(500);\n\n    setCharacters(allCharacters);\n  }\n\n  const mapCharactersToView = characters => {\n    if (!characters) {\n      return;\n    }\n    return characters.map((character, index) => {\n      const cellSelected = character.index === selected;\n      const hp = character.hp;\n      const maxHp = character.maxHp;\n\n      return (\n        <StyledTBContentWrapper\n          selected={cellSelected}\n          animation={character.animation}\n          key={index}\n          moved={character.moved}\n        >\n          <StyledTBCellContent\n            selected={cellSelected}\n            image={character.image}\n            player={character.player}\n          />\n          <HpOverlay hp={hp} maxHp={maxHp} />\n          <StyledTBIndicator player={character.player} />\n        </StyledTBContentWrapper>\n      );\n    });\n  };\n\n  return (\n    <>\n      <StyledTurnBar>\n        <StyledTitle>\n          Turn\n          <br />\n          Order:\n        </StyledTitle>\n        {gameInProgress && mapCharactersToView(characters)}\n      </StyledTurnBar>\n    </>\n  );\n};\n\nTurnBar.propTypes = {\n  selected: PropTypes.oneOfType([PropTypes.bool, PropTypes.number]),\n  allCharacters: PropTypes.array,\n  gameInProgress: PropTypes.bool.isRequired,\n};\n\nTurnBar.defaultProps = {\n  allCharacters: [],\n  selected: false,\n};\n\nconst mapStateToProps = state => ({\n  allCharacters: state.TurnReducer.turnInfo.get('allCharacters'),\n});\n\nconst mapDispatchToProps = dispatch => ({});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TurnBar);\n","import styled from 'styled-components';\nimport { colors, boxShadow, borderRadius, media } from '../../theme';\n\nexport const StyledControlBarWrapper = styled.div`\n  width: 100%;\n  padding-bottom: 10px;\n\n  @media ${media.medium} {\n    width: 33.3%;\n    padding-bottom: 0;\n    padding-left: 10px;\n  }\n`;\n\nexport const StyledControlBar = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-around;\n  height: 50px;\n  box-shadow: ${boxShadow.standard};\n  border-radius: ${borderRadius.standard};\n  background-color: ${colors.glass};\n\n  @media ${media.medium} {\n    height: 60px;\n  }\n`;\n","import styled from 'styled-components';\nimport { colors, boxShadow } from '../../theme';\n\nexport const StyledSpinner = styled.div`\n  transform: scale(0.4);\n  position: absolute;\n  \n  .lds-roller {\n    display: inline-block;\n    position: relative;\n    width: 80px;\n    height: 80px;\n  }\n  .lds-roller div {\n    animation: lds-roller 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite;\n    transform-origin: 40px 40px;\n  }\n  .lds-roller div:after {\n    content: ' ';\n    display: block;\n    position: absolute;\n    width: 9px;\n    height: 9px;\n    border-radius: 50%;\n    background: ${colors.white};\n    box-shadow: ${boxShadow.standard};\n    margin: -4px 0 0 -4px;\n  }\n  .lds-roller div:nth-child(1) {\n    animation-delay: -0.036s;\n  }\n  .lds-roller div:nth-child(1):after {\n    top: 63px;\n    left: 63px;\n  }\n  .lds-roller div:nth-child(2) {\n    animation-delay: -0.072s;\n  }\n  .lds-roller div:nth-child(2):after {\n    top: 68px;\n    left: 56px;\n  }\n  .lds-roller div:nth-child(3) {\n    animation-delay: -0.108s;\n  }\n  .lds-roller div:nth-child(3):after {\n    top: 71px;\n    left: 48px;\n  }\n  .lds-roller div:nth-child(4) {\n    animation-delay: -0.144s;\n  }\n  .lds-roller div:nth-child(4):after {\n    top: 72px;\n    left: 40px;\n  }\n  .lds-roller div:nth-child(5) {\n    animation-delay: -0.18s;\n  }\n  .lds-roller div:nth-child(5):after {\n    top: 71px;\n    left: 32px;\n  }\n  .lds-roller div:nth-child(6) {\n    animation-delay: -0.216s;\n  }\n  .lds-roller div:nth-child(6):after {\n    top: 68px;\n    left: 24px;\n  }\n  .lds-roller div:nth-child(7) {\n    animation-delay: -0.252s;\n  }\n  .lds-roller div:nth-child(7):after {\n    top: 63px;\n    left: 17px;\n  }\n  .lds-roller div:nth-child(8) {\n    animation-delay: -0.288s;\n  }\n  .lds-roller div:nth-child(8):after {\n    top: 56px;\n    left: 12px;\n  }\n  @keyframes lds-roller {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`;\n","import React from 'react';\n// import PropTypes from 'prop-types';\nimport { StyledSpinner } from './styledSpinner';\n\nconst Spinner = props => {\n  return (\n    <StyledSpinner>\n      <div className=\"lds-roller\">\n        <div />\n        <div />\n        <div />\n        <div />\n        <div />\n        <div />\n        <div />\n        <div />\n      </div>\n    </StyledSpinner>\n  );\n};\n\nSpinner.propTypes = {};\n\nSpinner.defaultProps = {};\n\nexport default Spinner;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { StyledControlBarWrapper, StyledControlBar } from './styledControlBar';\nimport Button from '../Button';\nimport Spinner from '../Spinner';\n\nconst ControlBar = props => {\n  const { endGame, startGame, skipTurn, gameInProgress, isAiTurn } = props;\n\n  const [waitForCleanUp, setWaitForCleanUp] = useState(false);\n\n  const onSurrenderClick = () => {\n    endGame();\n    if (isAiTurn) {\n      setWaitForCleanUp(true);\n      setTimeout(() => {\n        setWaitForCleanUp(false);\n      }, 3500);\n    }\n  };\n\n  return (\n    <StyledControlBarWrapper>\n      <StyledControlBar>\n        {gameInProgress && (\n          <Button\n            type={'secondary'}\n            func={onSurrenderClick}\n            text={'Surrender'}\n          />\n        )}\n        {!gameInProgress && (\n          <Button\n            disabled={waitForCleanUp}\n            type={'secondary'}\n            func={startGame}\n            text={'Start'}\n          />\n        )}\n        {(waitForCleanUp || (isAiTurn && gameInProgress)) && <Spinner />}\n        <Button\n          type={'secondary'}\n          disabled={!gameInProgress || isAiTurn}\n          func={skipTurn}\n          text={'Skip Turn'}\n        />\n      </StyledControlBar>\n    </StyledControlBarWrapper>\n  );\n};\n\nControlBar.propTypes = {\n  endGame: PropTypes.func.isRequired,\n  startGame: PropTypes.func.isRequired,\n  skipTurn: PropTypes.func.isRequired,\n  gameInProgress: PropTypes.bool.isRequired,\n  isAiTurn: PropTypes.bool,\n};\n\nControlBar.defaultProps = {\n  isAiTurn: false,\n};\n\nexport default ControlBar;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { StyledGridHeader } from './styledGridHeader';\nimport TurnBar from '../TurnBar';\nimport ControlBar from '../ControlBar';\n\nconst GridHeader = props => {\n  const {\n    grid,\n    selected,\n    startGame,\n    endGame,\n    skipTurn,\n    gameInProgress,\n  } = props;\n\n  const [isAiTurn, setIsAiTurn] = useState(false);\n\n  useEffect(() => {\n    const selectedCharacter = grid.getIn([selected]);\n\n    if (selected && selectedCharacter) {\n      setIsAiTurn(grid.getIn([selected]).stats.player === 'ai');\n    } else {\n      setIsAiTurn(true);\n    }\n    // eslint-disable-next-line\n  }, [selected]);\n\n  return (\n    <StyledGridHeader>\n      <TurnBar\n        grid={grid}\n        selected={selected}\n        gameInProgress={gameInProgress}\n      />\n      <ControlBar\n        isAiTurn={isAiTurn}\n        startGame={startGame}\n        endGame={endGame}\n        skipTurn={skipTurn}\n        gameInProgress={gameInProgress}\n      />\n    </StyledGridHeader>\n  );\n};\n\nGridHeader.propTypes = {\n  grid: PropTypes.object.isRequired,\n  selected: PropTypes.oneOfType([PropTypes.bool, PropTypes.number]),\n  endGame: PropTypes.func.isRequired,\n  startGame: PropTypes.func.isRequired,\n  skipTurn: PropTypes.func.isRequired,\n  gameInProgress: PropTypes.bool.isRequired,\n};\n\nGridHeader.defaultProps = {\n  selected: false,\n};\n\nexport default GridHeader;\n","import React, { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { StyledGrid, StyledGridWrapper } from './styledGrid';\nimport { GridActions, TurnActions } from '../../actions';\nimport { GridHelper, Animations, AiFunctions } from '../../logic-functions';\nimport Cell from '../Cell';\nimport Sidebar from '../Sidebar';\nimport { waitFor } from '../../logic-functions/helper-functions';\nimport GridHeader from '../GridHeader';\n\nconst Grid = props => {\n  const {\n    grid,\n    updateGrid,\n    settings,\n    createGrid,\n    destroyGrid,\n    activeCharacter,\n    allCharacters,\n    startTurn,\n    nextMove,\n    resetTurn,\n    humanCharacters,\n    aiCharacters,\n  } = props;\n\n  const [selected, setSelected] = useState();\n  const [isSelected, setIsSelected] = useState(false);\n  const [selectedCharacter, setSelectedCharacter] = useState({});\n  const [animationProgress, setAnimationProgress] = useState(false);\n  const [action, setAction] = useState();\n  const [hoverCharacter, setHoverCharacter] = useState({});\n  const [gameId, setGameId] = useState(null);\n\n  const gameInProgress = useRef(false);\n\n  // end game calculator\n  useEffect(() => {\n    if (allCharacters.length > 0) {\n      if (aiCharacters.length < 1) {\n        alert('You win!');\n        endGame();\n      }\n\n      if (humanCharacters.length < 1) {\n        alert('You lose!');\n        endGame();\n      }\n    }\n    // eslint-disable-next-line\n  }, [allCharacters]);\n\n  // update selected character\n  useEffect(() => {\n    if (activeCharacter && activeCharacter.name) {\n      updateSelectedCharacter(grid.get(activeCharacter.index));\n    }\n    // eslint-disable-next-line\n  }, [activeCharacter]);\n\n  // start turn\n  useEffect(() => {\n    if (allCharacters.length === 0 && grid.size > 0) {\n      startTurn(grid, gameId);\n    }\n    // eslint-disable-next-line\n  }, [grid]);\n\n  // ai turn calculator\n  useEffect(() => {\n    if (activeCharacter.player === 'ai' && selectedCharacter && selected) {\n      const tileToMove = AiFunctions.calculateAiMove(\n        grid,\n        activeCharacter,\n        humanCharacters\n      );\n\n      if (tileToMove || tileToMove === 0) {\n        const searchResult = startSearch(grid.get(tileToMove));\n\n        if (searchResult.path.length > 0) {\n          setTimeout(() => {\n            animateAndMove(\n              searchResult.path,\n              searchResult.attackResult,\n              searchResult.defenderIndex\n            );\n          }, 1300);\n        }\n      } else {\n        setTimeout(() => {\n          setAction({\n            selected: grid.getIn([selected]),\n            skipped: true,\n          });\n          nextMoveCheck(grid, gameId);\n        }, 500);\n      }\n    }\n\n    // eslint-disable-next-line\n  }, [selectedCharacter]);\n\n  const updateGridCheck = (grid, gameIdd) => {\n    if (gameInProgress.current) {\n      updateGrid(grid, gameIdd);\n    }\n  };\n\n  const nextMoveCheck = (grid, gameIdd) => {\n    if (gameInProgress.current) {\n      nextMove(grid, gameIdd);\n    }\n  };\n\n  const startGame = () => {\n    const gameId = Date.now();\n    setGameId(gameId);\n    gameInProgress.current = true;\n    createGrid(settings, gameId);\n    resetTurn(gameId);\n  };\n\n  const endGame = () => {\n    gameInProgress.current = false;\n    setAction();\n    destroyGrid();\n    resetTurn();\n  };\n\n  const skipTurn = () => {\n    if (activeCharacter.player !== 'ai') {\n      setAction({\n        selected: grid.getIn([selected]),\n        skipped: true,\n      });\n      nextMoveCheck(grid, gameId);\n    }\n  };\n\n  const clearSelectedCharacter = () => {\n    setIsSelected(false);\n    setSelected(null);\n    setSelectedCharacter({});\n    updateGridCheck(GridHelper.clearPath(grid, gameId));\n  };\n\n  const updateSelectedCharacter = cell => {\n    setIsSelected(true);\n    setSelected(cell.index);\n    setSelectedCharacter(cell.stats);\n    updateGridCheck(GridHelper.clearPath(grid, gameId));\n  };\n\n  async function animateAndMove(path, attackResult, defenderIndex) {\n    const isHit = attackResult && attackResult.attackResult.isHit;\n    setAnimationProgress(true);\n\n    updateGridCheck(\n      grid.setIn(\n        [selected, 'animation'],\n        Animations.moveAnimationBuilder(path, 300, {\n          attackResult,\n          defender: grid.getIn([defenderIndex]),\n        })\n      ),\n      gameId\n    );\n\n    const attackTime = attackResult ? 900 : 0;\n\n    await waitFor(path.length * 300 + attackTime);\n    clearSelectedCharacter();\n\n    let newGrid = grid;\n\n    newGrid = GridHelper.moveCharacter(\n      newGrid,\n      selectedCharacter,\n      newGrid.get(path[path.length - 1].index)\n    );\n\n    let defender = attackResult ? newGrid.getIn([defenderIndex]) : null;\n\n    if (defender) {\n      newGrid = newGrid.setIn([defender.index, 'attack'], true);\n    }\n\n    if (isHit) {\n      defender.stats.hp = attackResult.damageResult.hp;\n      if (defender.stats.hp > 0) {\n        newGrid = GridHelper.updateCharacter(newGrid, defender);\n      } else {\n        newGrid = GridHelper.clearTile(newGrid, defenderIndex);\n      }\n    }\n\n    setAction({\n      selected: grid.getIn([selected]),\n      path,\n      attackResult,\n      defender,\n    });\n\n    updateGridCheck(newGrid, gameId);\n    await waitFor(attackResult ? 500 : 0);\n    setAnimationProgress(false);\n    nextMoveCheck(newGrid, gameId);\n  }\n\n  const onClick = cell => {\n    console.log('cell', cell);\n\n    if (!isSelected || animationProgress || activeCharacter.player === 'ai') {\n      if (cell.fill !== 'C') {\n        return;\n      }\n    } else {\n      const searchResult = startSearch(cell);\n      if (\n        cell.fill !== 'X' &&\n        searchResult.path.length > 0 &&\n        searchResult.moveAllowed\n      ) {\n        animateAndMove(\n          searchResult.path,\n          searchResult.attackResult,\n          searchResult.defenderIndex\n        );\n      }\n    }\n  };\n\n  const startSearch = cell => {\n    const result = GridHelper.startSearch(\n      grid,\n      selected,\n      cell.index,\n      selectedCharacter\n    );\n\n    let moveAllowed = false;\n    let path = [];\n    let attackResult = false;\n\n    if (result && result.grid) {\n      updateGridCheck(result.grid, gameId);\n      path = result.result;\n      attackResult = result.attackResult;\n      moveAllowed = true;\n    }\n\n    return { moveAllowed, path, attackResult, defenderIndex: cell.index };\n  };\n\n  return (\n    <StyledGridWrapper>\n      <GridHeader\n        grid={grid}\n        selected={selected}\n        startGame={startGame}\n        endGame={endGame}\n        skipTurn={skipTurn}\n        gameInProgress={gameInProgress.current}\n      />\n      <StyledGrid empty={allCharacters.length === 0}>\n        {allCharacters.length > 0\n          ? grid.map(cell => {\n              const cellSelected = cell.index === selected;\n              return (\n                <Cell\n                  key={cell.index}\n                  cell={cell}\n                  selected={cellSelected}\n                  onClick={() => {\n                    onClick(cell);\n                  }}\n                  onMouseEnter={() => {\n                    if (\n                      cell &&\n                      cell.stats &&\n                      cell.stats.name &&\n                      cell.stats.player\n                    ) {\n                      setHoverCharacter(cell.stats);\n                    } else {\n                      setHoverCharacter({});\n                    }\n                    isSelected &&\n                      !animationProgress &&\n                      activeCharacter.player !== 'ai' &&\n                      startSearch(cell);\n                  }}\n                />\n              );\n            })\n          : null}\n      </StyledGrid>\n\n      <Sidebar\n        action={action}\n        gameInProgress={gameInProgress.current}\n        activeCharacter={activeCharacter}\n        hoverCharacter={hoverCharacter}\n      />\n    </StyledGridWrapper>\n  );\n};\n\nGrid.propTypes = {\n  updateGrid: PropTypes.func.isRequired,\n  grid: PropTypes.object.isRequired,\n  settings: PropTypes.object.isRequired,\n  createGrid: PropTypes.func.isRequired,\n  destroyGrid: PropTypes.func.isRequired,\n  activeCharacter: PropTypes.object,\n  allCharacters: PropTypes.array.isRequired,\n  startTurn: PropTypes.func.isRequired,\n  nextMove: PropTypes.func.isRequired,\n  resetTurn: PropTypes.func.isRequired,\n  humanCharacters: PropTypes.array,\n  aiCharacters: PropTypes.array,\n};\n\nGrid.defaultProps = {\n  activeCharacter: null,\n  humanCharacters: [],\n  aiCharacters: [],\n};\n\nconst mapStateToProps = state => ({\n  grid: state.GridReducer.grid,\n  settings: state.ConfigReducer.settings,\n  turnInfo: state.TurnReducer.turnInfo,\n  activeCharacter: state.TurnReducer.turnInfo.get('activeCharacter'),\n  allCharacters: state.TurnReducer.turnInfo.get('allCharacters'),\n  humanCharacters: state.TurnReducer.turnInfo.get('humanCharacters'),\n  aiCharacters: state.TurnReducer.turnInfo.get('aiCharacters'),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  updateGrid: (grid, gameId) => dispatch(GridActions.updateGrid(grid, gameId)),\n  createGrid: (settings, gameId) =>\n    dispatch(GridActions.createGrid(settings, gameId)),\n  destroyGrid: () => dispatch(GridActions.destroyGrid()),\n  startTurn: (grid, gameId) => dispatch(TurnActions.startTurn(grid, gameId)),\n  nextMove: (grid, gameId) => dispatch(TurnActions.nextMove(grid, gameId)),\n  resetTurn: () => dispatch(TurnActions.resetTurn()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Grid);\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Grid from '../../components/Grid';\nimport { GridActions, TurnActions } from '../../actions';\nimport { StyledContainer } from '../../components/StyledContainer';\n\nconst Battle = props => {\n  const { destroyGrid, resetTurn } = props;\n\n  useEffect(() => {\n    destroyGrid();\n    resetTurn();\n\n    return function cleanUp() {\n      destroyGrid();\n      resetTurn();\n    };\n  });\n\n  return (\n    <StyledContainer>\n      <Grid />\n    </StyledContainer>\n  );\n};\n\nBattle.propTypes = {\n  destroyGrid: PropTypes.func.isRequired,\n  resetTurn: PropTypes.func.isRequired,\n};\n\nBattle.defaultProps = {};\n\nconst mapStateToProps = state => ({});\n\nconst mapDispatchToProps = dispatch => ({\n  destroyGrid: () => dispatch(GridActions.destroyGrid()),\n  resetTurn: () => dispatch(TurnActions.resetTurn()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Battle);\n","import { createGlobalStyle } from \"styled-components\";\nimport { colors, fonts } from \"../theme\";\n\nexport const GlobalStyle = createGlobalStyle`\n    body {\n        text-align: center;\n        color: ${colors.black};\n        font-family: ${fonts.regular};\n    }\n\n    * {\n        box-sizing: border-box;\n        margin: 0;\n        padding: 0;\n    }\n\n    ul {\n        list-style: none;\n    }\n\n    html, body, div, span, applet, object, iframe,\n    h1, h2, h3, h4, h5, h6, p, blockquote, pre,\n    a, abbr, acronym, address, big, cite, code,\n    del, dfn, em, img, ins, kbd, q, s, samp,\n    small, strike, strong, sub, sup, tt, var,\n    b, u, i, center,\n    dl, dt, dd, ol, ul, li,\n    fieldset, form, label, legend,\n    table, caption, tbody, tfoot, thead, tr, th, td,\n    article, aside, canvas, details, embed, \n    figure, figcaption, footer, header, hgroup, \n    menu, nav, output, ruby, section, summary,\n    time, mark, audio, video {\n        margin: 0;\n        padding: 0;\n        border: 0;\n        font-size: 100%;\n        font: inherit;\n        vertical-align: baseline;\n    }\n\n    /* HTML5 display-role reset for older browsers */\n    article, aside, details, figcaption, figure, \n    footer, header, hgroup, menu, nav, section {\n        display: block;\n    }\n\n    body {\n        line-height: 1;\n    }\n\n    ol, ul {\n        list-style: none;\n    }\n\n    blockquote, q {\n        quotes: none;\n    }\n\n    blockquote:before, blockquote:after,\n    q:before, q:after {\n        content: '';\n        content: none;\n    }\n\n    table {\n        border-collapse: collapse;\n        border-spacing: 0;\n    }\n\n    a,\n    a:visited,\n    a:focus,\n    a:hover {\n        text-decoration: none;\n        color: inherit;\n    }\n`;\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route, BrowserRouter } from 'react-router-dom';\nimport PageWrapper from './PageWrapper';\nimport Home from '../pages/home';\nimport Help from '../pages/help';\nimport Battle from '../pages/battle';\nimport { GlobalStyle } from './GlobalStyle';\nimport { ThemeProvider } from 'styled-components';\nimport theme from '../theme';\nimport routes from './routes';\n\nfunction App() {\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Router>\n        <ThemeProvider theme={theme}>\n          <GlobalStyle />\n          <PageWrapper>\n            <Switch>\n              <Route path={routes.about} component={Help} />\n              <Route path={routes.battle} component={Battle} />\n              <Route exact path={routes.home} component={Home} />\n              <Route>\n                <h1>Page not found</h1>\n              </Route>\n            </Switch>\n          </PageWrapper>\n        </ThemeProvider>\n      </Router>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import * as ActionTypes from '../action-types';\nimport { GridHelper } from '../logic-functions';\nimport { List } from 'immutable';\n\n//////////////////\n\nconst DEFAULT_STATE = {\n  gameId: null,\n  grid: new List([]),\n};\n\nconst GridReducer = (state = DEFAULT_STATE, action) => {\n  switch (action.type) {\n    case ActionTypes.UPDATE_GRID: {\n      if (state.grid.size === 0) {\n        return { ...state };\n      }\n\n      if (state.gameId !== action.gameId) {\n        return { ...state };\n      }\n\n      return {\n        ...state,\n        grid: action.grid,\n      };\n    }\n    case ActionTypes.CREATE_GRID: {\n      return {\n        ...state,\n        grid: GridHelper.makeGrid(action.settings),\n        gameId: action.gameId,\n      };\n    }\n    case ActionTypes.DESTROY_GRID: {\n      return {\n        ...state,\n        grid: new List([]),\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default GridReducer;\n","import * as ActionTypes from '../action-types';\nimport { random, copy } from '../logic-functions/helper-functions';\n\nconst DEFAULT_STATE = {\n  muted: true,\n  settings: {\n    rows: 10,\n    columns: 10,\n    fill: {\n      humanCharacters: [\n        {\n          id: 1,\n          name: 'Victor',\n          type: 'hero',\n          speed: 6,\n          image: 'warrior',\n          fill: 'C',\n          maxHp: 8,\n          hp: 8,\n          attack: +4,\n          ac: 0,\n          damage: [2, 6],\n          player: 'human',\n          initiative: 16,\n        },\n        {\n          id: 4,\n          name: 'Fortuna',\n          type: 'hero',\n          speed: 6,\n          image: 'fortuna',\n          fill: 'C',\n          maxHp: 5,\n          hp: 5,\n          attack: +8,\n          ac: 10,\n          damage: [1, 4],\n          player: 'human',\n          initiative: 24,\n        },\n      ],\n      aiCharacters: [\n        {\n          id: 2,\n          name: 'Goblin',\n          type: 'enemy',\n          speed: 5,\n          image: 'goblin',\n          fill: 'C',\n          maxHp: 6,\n          hp: 6,\n          attack: 0,\n          ac: 8,\n          damage: [1, 4],\n          player: 'ai',\n          initiative: 18,\n        },\n        {\n          id: 3,\n          name: 'Golem',\n          type: 'enemy',\n          speed: 5,\n          image: 'golem',\n          fill: 'C',\n          maxHp: 8,\n          hp: 8,\n          attack: -2,\n          ac: 8,\n          damage: [2, 6],\n          player: 'ai',\n          initiative: 12,\n        },\n      ],\n      id: 0,\n      assignIndexes(indexArray, characters) {\n        let tiles = indexArray;\n        return characters.map(character => {\n          const index = tiles.splice(random(0, tiles.length - 1), 1)[0];\n          character.index = index;\n          character.id = ++this.id;\n          return character;\n        });\n      },\n      rows: 10,\n      obstacles() {\n        return Math.round(this.rows * (this.rows / 2.5) - this.rows * 1.5);\n      },\n      characters() {\n        const humanCharactersTiles = [3, 4, 5, 6, 7];\n        const aiCharactersTiles = [93, 94, 95, 96, 97, 84, 85, 86];\n\n        const humanCharacters = this.assignIndexes(humanCharactersTiles, this.humanCharacters);\n\n        let aiCharacters = copy(this.aiCharacters);\n        for (let i = 0; i < random(2, 3); ++i) {\n          aiCharacters.unshift(copy(this.aiCharacters[random(0, 1)]));\n        }\n\n        aiCharacters = this.assignIndexes(aiCharactersTiles, aiCharacters);\n\n        return [\n          ...humanCharacters,\n          ...aiCharacters,\n        ];\n      },\n    },\n  },\n};\n\nconst ConfigReducer = (state = DEFAULT_STATE, action) => {\n  switch (action.type) {\n    case ActionTypes.TOGGLE_SOUND: {\n      return {\n        ...state,\n        muted: action.muted,\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default ConfigReducer;\n","export const TOGGLE_SOUND = 'TOGGLE_SOUND';\n\n","import * as ActionTypes from '../action-types';\nimport { Map } from 'immutable';\nimport { TurnFunctions } from '../logic-functions';\n\n//////////////////\n\nconst DEFAULT_STATE = {\n  gameId: null,\n  turnInfo: new Map({\n    currentPlayer: null,\n    activeCharacter: {},\n    turnOrder: [],\n    allCharacters: [],\n    humanCharacters: [],\n    aiCharacters: [],\n  }),\n};\n\nconst TurnReducer = (state = DEFAULT_STATE, action) => {\n  switch (action.type) {\n    case ActionTypes.START_TURN: {\n      let {\n        allCharacters,\n        humanCharacters,\n        aiCharacters,\n      } = TurnFunctions.findCharacters(action.grid);\n\n      allCharacters = TurnFunctions.sortCharacters(allCharacters);\n\n      let turnInfo = state.turnInfo;\n      turnInfo = turnInfo\n        .setIn(['allCharacters'], allCharacters)\n        .setIn(['humanCharacters'], humanCharacters)\n        .setIn(['aiCharacters'], aiCharacters)\n        .setIn(['activeCharacter'], allCharacters[0]);\n\n      return {\n        ...state,\n        turnInfo,\n        gameId: action.gameId,\n      };\n    }\n    case ActionTypes.NEXT_MOVE: {\n      if (state.turnInfo.get('allCharacters').length === 0) {\n        return { ...state };\n      }\n\n      if (state.gameId !== action.gameId) {\n        return { ...state };\n      }\n\n      let {\n        allCharacters,\n        humanCharacters,\n        aiCharacters,\n        activeCharacter,\n      } = TurnFunctions.updateCharacters(state, action.grid);\n\n      let turnInfo = state.turnInfo;\n      turnInfo = turnInfo\n        .setIn(['allCharacters'], allCharacters)\n        .setIn(['humanCharacters'], humanCharacters)\n        .setIn(['aiCharacters'], aiCharacters)\n        .setIn(['activeCharacter'], activeCharacter);\n\n      return {\n        ...state,\n        turnInfo,\n      };\n    }\n    case ActionTypes.RESET_TURN: {\n      const turnInfo = new Map({\n        currentPlayer: null,\n        activeCharacter: {},\n        turnOrder: [],\n        allCharacters: [],\n        humanCharacters: [],\n        aiCharacters: [],\n      });\n\n      return {\n        ...state,\n        turnInfo,\n        gameId: action.gameId,\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default TurnReducer;\n","import {combineReducers} from 'redux';\nimport GridReducer from './GridReducer';\nimport ConfigReducer from './ConfigReducer';\nimport TurnReducer from './TurnReducer';\n\nexport default combineReducers({\n    GridReducer,\n    ConfigReducer,\n    TurnReducer,\n});\n","import { applyMiddleware, createStore } from 'redux';\nimport logger from 'redux-logger';\nimport rootReducer from '../reducers';\n\nconst store = createStore(rootReducer, applyMiddleware(logger));\n\nexport { store as default };\n","import React from 'react';\nimport {Provider} from 'react-redux';\nimport ReactDOM from 'react-dom';\nimport '../fonts/fonts.scss';\nimport App from './App';\nimport store from '../store';\n\nReactDOM.render((\n    <Provider store={store}>\n        <App />\n    </Provider>\n), document.getElementById('root'));\n"],"sourceRoot":""}