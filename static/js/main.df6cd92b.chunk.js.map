{"version":3,"sources":["components/CellContent/assets/warrior.png","components/CellContent/assets/goblin_regular.png","fonts/Lora-Regular.eot","fonts/Lora-Bold.eot","fonts/Lora-Regular.svg","fonts/Lora-Regular.woff","fonts/Lora-Regular.woff2","fonts/Lora-Bold.svg","fonts/Lora-Bold.woff","fonts/Lora-Bold.woff2","assets/images/ground.jpeg","assets/sounds/click.mp3","assets/sounds/warrior.mp3","assets/sounds/theme_song1.mp3","assets/sounds/walking.mp3","components/CellContent/assets/tree.png","fonts/fonts.js","assets/images/index.js","theme.js","App/PageWrapper/PageWrapperStyle.js","assets/sounds/index.js","components/AudioComponent/index.js","components/Header/styledHeader.js","components/StyledContainer/index.js","components/Header/StyledLink.js","App/routes.js","components/Header/index.js","App/PageWrapper/PageWrapper.js","pages/home/StyledHome.js","pages/home/index.js","pages/help/index.js","components/Grid/styledGrid.js","actions/GridActions.js","action-types/GridActionTypes.js","actions/TurnActions.js","action-types/TurnActionsTypes.js","logic-functions/grid.js","logic-functions/animations.js","logic-functions/turn.js","logic-functions/ai.js","components/Cell/styledCell.js","components/CellContent/styledCellContent.js","components/CellContent/index.js","components/Cell/index.js","components/Sidebar/Console/styledConsole.js","components/Sidebar/Console/index.js","components/Sidebar/SidebarInfo/styledSidebarInfo.js","components/Sidebar/SidebarInfo/index.js","components/Sidebar/styledSidebar.js","components/Sidebar/index.js","components/InforBar/styledInfoBar.js","components/InforBar/index.js","components/Grid/index.js","pages/battle/index.js","App/GlobalStyle.js","App/App.js","reducers/GridReducer.js","reducers/ConfigReducer.js","action-types/ConfigActionTypes.js","reducers/TurnReducer.js","reducers/index.js","store/index.js","App/index.js"],"names":["module","exports","createGlobalStyle","LoraBoldEot","LoraBoldWoff2","LoraBoldWoff","LoraBoldSvg","LoraRegularEot","LoraRegularWoff2","LoraRegularWoff","LoraRegularSvg","backgroundImg","ground","colors","black","white","whiteTransparent","blue","navy","gray","greenTransparent","glassTransparent","glass","redTransparent","boxShadow","standard","large","standardInset","largeInset","borderRadius","breakpoints","sm","media","small","fonts","Wrapper","styled","div","FooterWrapper","click","warrior","theme_song1","walking","Element","propTypes","url","PropTypes","string","isRequired","loop","bool","defaultProps","connect","state","muted","ConfigReducer","dispatch","props","audio","Audio","useEffect","play","pause","HeaderWrapper","HeaderList","ul","StyledContainer","StyledLink","li","selected","home","battle","about","Header","location","useLocation","pathname","to","routes","interacted","setInteracted","useState","onClick","Sounds","children","StyledHome","Home","Help","StyledGrid","empty","StyledGridWrapper","updateGrid","grid","type","createGrid","settings","destroyGrid","startTurn","nextMove","resetTurn","random","min","max","Math","floor","fillGrid","fill","rows","newGrid","JSON","parse","stringify","forbiddenTiles","randomisedFill","i","obstacles","randomFill","includes","push","console","log","randomiseFill","forEach","obstacle","image","terrain","characters","character","index","stats","performAttack","attacker","defender","attackResult","attackRoll","attack","isHit","ac","attackBonus","defenderAC","calculateAttack","damageResult","damage","hp","isDead","calculateDamage","clearPath","map","cell","path","direction","GridHelper","makeGrid","columns","j","adjecent","visited","animation","sound","up","down","length","left","right","makeAdjacentMatrix","List","startSearch","start","target","newGridJS","toJS","actingCharacter","isAttack","player","get","result","finalPath","paths","searchStep","newPaths","adjecentCell","newPath","counter","searchForPath","tilesToMove","speed","withMutations","setIn","fillPath","splice","moveCharacter","clearTile","tile","updateCharacter","oppositeDirections","Animations","moveAnimationBuilder","timeUnit","isAttacked","animationString","timePercentage","percentage","top","attackDirection","find","oppositeDirecetion","topStarting","leftStarting","keyframes","time","setNextCharacter","allCharacters","newAllCharacters","lastCharacter","shift","TurnFunctions","sortCharacters","value","sort","a","b","findCharacters","filter","humanCharacters","aiCharacters","updateCharacters","updatedAllCharacters","turnInfo","activeCharacterIds","id","toUpdate","updateChar","activeCharacter","weightValues","AC","targetHP","damageMax","targetAttack","targetDamageMax","checkPossibleMoves","possibleMoves","canAttack","searchResult","move","moves","calculatedWeight","weightBreakdown","weight","toHitChance","remainingHP","canKill","threatLevel","assignWeight","choseMove","randomPick","AiFunctions","StyledCell","basis","StyledCellContent","background","tree","goblin","playerBorders","human","ai","getAnimation","StyledCellContentWrapper","StyledIndicator","object","GridReducer","GridActions","setTimeout","number","onMouseEnter","playClickSound","setPlayClickSound","StyledConsole","action","Console","actions","setActions","story","defenderIndex","name","key","dangerouslySetInnerHTML","__html","StyledSidebarInfo","SidebarInfo","StyledSidebar","Sidebar","StyledInfoBar","StyledPortrait","InfoBar","style","backgroundColor","initiative","mapCharactersToView","array","TurnReducer","Grid","setSelected","isSelected","setIsSelected","selectedCharacter","setSelectedCharacter","animationProgress","setAnimationProgress","playWalkingSound","setPlayWalkingSound","setAction","gameInProgress","useRef","alert","endGame","updateSelectedCharacter","size","tileToMove","animateAndMove","nextMoveCheck","updateGridCheck","current","clearSelectedCharacter","waitFor","Promise","resolve","async","getIn","attackTime","moveAllowed","cellSelected","func","TurnActions","Battle","GlobalStyle","App","theme","exact","component","DEFAULT_STATE","round","this","Map","currentPlayer","turnOrder","combineReducers","store","createStore","rootReducer","applyMiddleware","logger","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.df6cd92b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/warrior.d8b023eb.png\";","module.exports = __webpack_public_path__ + \"static/media/goblin_regular.a22efcb7.png\";","module.exports = __webpack_public_path__ + \"static/media/Lora-Regular.cdd6b0bc.eot\";","module.exports = __webpack_public_path__ + \"static/media/Lora-Bold.629f4d40.eot\";","module.exports = __webpack_public_path__ + \"static/media/Lora-Regular.e822d6a7.svg\";","module.exports = __webpack_public_path__ + \"static/media/Lora-Regular.1caccfd9.woff\";","module.exports = __webpack_public_path__ + \"static/media/Lora-Regular.62c96966.woff2\";","module.exports = __webpack_public_path__ + \"static/media/Lora-Bold.06107996.svg\";","module.exports = __webpack_public_path__ + \"static/media/Lora-Bold.5d77e2a2.woff\";","module.exports = __webpack_public_path__ + \"static/media/Lora-Bold.3b866411.woff2\";","module.exports = __webpack_public_path__ + \"static/media/ground.a82d3ec6.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/click.69dc2c64.mp3\";","module.exports = __webpack_public_path__ + \"static/media/warrior.c5a6cb27.mp3\";","module.exports = __webpack_public_path__ + \"static/media/theme_song1.87226504.mp3\";","module.exports = __webpack_public_path__ + \"static/media/walking.2e9c4de9.mp3\";","module.exports = __webpack_public_path__ + \"static/media/tree.f7e58740.png\";","import { createGlobalStyle } from \"styled-components\";\n\nimport LoraRegularEot from \"./Lora-Regular.eot\";\nimport LoraRegularSvg from \"./Lora-Regular.svg\";\nimport LoraRegularWoff from \"./Lora-Regular.woff\";\nimport LoraRegularWoff2 from \"./Lora-Regular.woff2\";\n\nimport LoraBoldEot from \"./Lora-Bold.eot\";\nimport LoraBoldSvg from \"./Lora-Bold.svg\";\nimport LoraBoldWoff from \"./Lora-Bold.woff\";\nimport LoraBoldWoff2 from \"./Lora-Bold.woff2\";\n\nexport default createGlobalStyle`\n  @font-face {\n      font-family: \"Lora-bold\";\n      src: url(${LoraBoldEot});\n      src: url(\"${LoraBoldEot}?#iefix\") format(\"embedded-opentype\"),\n          url(${LoraBoldWoff2}) format(\"woff2\"),\n          url(${LoraBoldWoff}) format(\"woff\"),\n          url(\"${LoraBoldSvg}#Lora-Bold\") format(\"svg\");\n      font-weight: bold;\n      font-style: normal;\n  }\n    \n  @font-face {\n      font-family: 'Lora';\n      src: url(${LoraRegularEot});\n      src: url('${LoraRegularEot}?#iefix') format('embedded-opentype'),\n          url(${LoraRegularWoff2}) format('woff2'),\n          url(${LoraRegularWoff}) format('woff'),\n          url('${LoraRegularSvg}#Lora-Regular') format('svg');\n      font-weight: normal;\n      font-style: normal;\n  }\n`;\n","import ground from './ground.jpeg';\n\nexport const backgroundImg = ground;\n","export const colors = {\n  black: '#252525',\n  white: '#fff',\n  whiteTransparent: 'rgba(255, 255, 255, 0.8)',\n  blue: '#007ce0',\n  navy: '#004175',\n  gray: '#5c5c5c50',\n  greenTransparent: 'rgba(0, 155, 26, 0.6)',\n  glassTransparent: 'rgba(190,255,247, 0.6)',\n  glass: 'rgba(190,255,247, 0.8)',\n  redTransparent: 'rgba(255, 0, 0, 0.6)',\n};\n\nexport const boxShadow = {\n  standard: '2px 1px 5px 2px rgba(0, 0, 0, 0.4)',\n  large: '5px 0px 10px 5px rgba(0, 0, 0, 0.8)',\n  standardInset: 'inset 1px 1px 5px -2px rgba(0, 0, 0, 0.8)',\n  largeInset: 'inset 1px 1px 20px -4px rgba(0, 0, 0, 0.8)',\n};\n\nexport const borderRadius = {\n  standard: '6px',\n  large: '20px',\n};\n\nconst breakpoints = ['425px'];\n\nbreakpoints.sm = breakpoints[0];\n\nexport const media = {\n  small: `(min-width: ${breakpoints[0]})`,\n};\n\nexport const fonts = {\n  regular: 'Lora',\n  bold: 'Lora-Bold',\n};\n\nexport default {\n  colors,\n  breakpoints,\n  boxShadow,\n};\n","import styled from \"styled-components\";\nimport { backgroundImg } from \"../../assets/images\";\nimport { colors, boxShadow, borderRadius } from '../../theme';\n\nexport const Wrapper = styled.div`\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  background: url(${backgroundImg}) center center/cover no-repeat;\n  overflow: hidden;\n`;\n\nexport const FooterWrapper = styled.div`\n  margin-top: auto;\n  background-color: ${colors.whiteTransparent};\n  box-shadow: ${boxShadow.standard};\n  border-radius: ${borderRadius.large};\n  height: 50px;\n  padding: 5px 20px;\n  display: flex;\n  position: relative;\n  top: 27px;\n  font-size: 14px;\n  justify-content: center;\n`;\n","import click from './click.mp3';\nimport warrior from './warrior.mp3';\nimport theme_song1 from './theme_song1.mp3';\nimport walking from './walking.mp3';\n\nexport default {\n  click,\n  warrior,\n  theme_song1,\n  walking,\n};\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nconst AudioComponent = props => {\n  const { url, loop, muted } = props;\n\n  const audio = new Audio(url);\n  audio.loop = loop;\n  audio.muted = muted;\n\n  useEffect(() => {\n    audio.play();\n\n    return () => {\n      audio.pause();\n    };\n  }, [audio]);\n\n  return null;\n};\n\nElement.propTypes = { url: PropTypes.string.isRequired, loop: PropTypes.bool };\n\nElement.defaultProps = { loop: true };\n\nconst mapStateToProps = state => ({ muted: state.ConfigReducer.muted });\n\nconst mapDispatchToProps = dispatch => ({});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AudioComponent);\n","import styled from 'styled-components';\nimport { colors, boxShadow, media, borderRadius } from '../../theme';\n\nexport const HeaderWrapper = styled.div`\n  box-shadow: ${boxShadow.large};\n  border-radius: ${borderRadius.large};\n  position: relative;\n  top: -20px;\n  padding: 30px 10px 10px 10px;\n  background-color: ${colors.whiteTransparent};\n  max-height: 142px;\n  padding-bottom: 0;\n\n  @media ${media.small} {\n    max-height: 96px;\n    padding-bottom: 10px;\n  }\n`;\n\nexport const HeaderList = styled.ul`\n  display: flex;\n  justify-content: space-around;\n  flex-wrap: wrap;\n\n  @media ${media.small} {\n    flex-wrap: nowrap;\n  }\n`;\n","import styled from \"styled-components\";\n\nexport const StyledContainer = styled.div`\n  max-width: 1000px;\n  margin: auto;\n  padding: 10px;\n  width: 100%;\n`;\n","import styled from 'styled-components';\nimport { colors, boxShadow, borderRadius, media } from '../../theme';\n\nexport const StyledLink = styled.li`\n  padding: 10px 40px;\n  background-color: ${colors.white};\n  min-width: 100px;\n  border-radius: ${borderRadius.standard};\n  box-shadow: ${boxShadow.standardInset}, 0 0 0 rgba(255, 255, 255, 0);\n  transition: all 300ms ease-in-out;\n  cursor: ${props => props.selected ? 'default' : 'pointer'};\n  margin-bottom: 10px;\n  background-color: ${props => (props.selected ? colors.gray : '')};\n\n  ${props =>\n    props.selected\n      ? ''\n      : `  &:hover {\n    box-shadow: inset 0 0 0 rgba(255, 255, 255, 0), ${boxShadow.standard};\n  }`}\n\n  @media ${media.small} {\n    margin-bottom: 0;\n  }\n`;\n","export default {\n    home: '/',\n    battle: '/battle',\n    about: '/about',\n}","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { HeaderWrapper, HeaderList } from './styledHeader';\nimport { StyledContainer } from '../StyledContainer';\nimport { StyledLink } from './StyledLink';\nimport routes from '../../App/routes';\n\nconst Header = props => {\n  let location = useLocation().pathname;\n\n  return (\n    <HeaderWrapper>\n      <StyledContainer>\n        <nav>\n          <HeaderList>\n            <Link to=\"/\">\n              <StyledLink selected={location === routes.home}>Home</StyledLink>\n            </Link>\n            <Link to=\"/battle\">\n              <StyledLink selected={location === routes.battle}>Battle</StyledLink>\n            </Link>\n            <Link to=\"/about\">\n              <StyledLink selected={location === routes.about}>About</StyledLink>\n            </Link>\n          </HeaderList>\n        </nav>\n      </StyledContainer>\n    </HeaderWrapper>\n  );\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Wrapper, FooterWrapper } from './PageWrapperStyle';\nimport Sounds from '../../assets/sounds';\nimport AudioComponent from '../../components/AudioComponent';\nimport Header from '../../components/Header';\n\nconst PageWrapper = props => {\n  const [interacted, setInteracted] = useState(false);\n\n  return (\n    <Wrapper\n      onClick={() => {\n        !interacted && setInteracted(true);\n      }}\n    >\n      {interacted && <AudioComponent url={Sounds.theme_song1} loop />}\n\n      <Header />\n\n      {props.children}\n\n      <FooterWrapper>Created by - Stefan Deak</FooterWrapper>\n    </Wrapper>\n  );\n};\n\nconst mapStateToProps = state => ({});\n\nconst mapDispatchToProps = dispatch => ({});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PageWrapper);\n","import styled from 'styled-components';\nimport { colors, boxShadow, borderRadius, fonts } from '../../theme';\n\nexport const StyledHome = styled.div`\n  min-height: calc(100vh - 200px);\n  background-color: ${colors.whiteTransparent};\n  border-radius: ${borderRadius.large};\n  box-shadow: ${boxShadow.standard};\n  display: flex;\n  flex-direction: column;\n  padding-bottom: 40px;\n  margin-bottom: -12px;\n\n  h1 {\n      margin-top: 80px;\n      font-size: 42px;\n      text-align: center;\n      width: 100%;\n      font-family: ${fonts.bold};\n      margin-bottom: 40px;\n  }\n\n  p {\n      margin-top: 20px;\n      font-size: 22px;\n      font-family: ${fonts.bold};\n  }\n`;\n","import React from 'react';\nimport { StyledHome } from './StyledHome';\nimport { StyledContainer } from '../../components/StyledContainer';\n\nconst Home = props => {\n  return (\n    <StyledContainer>\n      <StyledHome>\n        <h1>React.js Grid Battle</h1>\n        <p>Welcome!</p>\n        <p>Battle AI in procedurally generated maps.</p>\n      </StyledHome>\n    </StyledContainer>\n  );\n};\n\nexport default Home;\n","import React from 'react';\n\nconst Help = props => {\n    return (\n        <div>\n            <h1>Help page</h1>\n        </div>\n    );\n};\n\nexport default Help;\n","import styled from 'styled-components';\nimport { colors, boxShadow, borderRadius } from '../../theme';\n\nexport const StyledGrid = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  width: 66.66%;\n  box-shadow: ${boxShadow.standard};\n  border-radius: ${borderRadius.standard};\n  background-color: ${props => props.empty ? colors.glassTransparent : 'transparent'};\n  padding-top: ${props => props.empty ? '66.66%' : '0'};\n  overflow: hidden;\n`;\n\nexport const StyledGridWrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n`;\n","import * as ACTION_TYPES from '../action-types';\n\nexport const updateGrid = grid => ({\n  type: ACTION_TYPES.UPDATE_GRID,\n  grid,\n});\n\nexport const createGrid = settings => ({\n  type: ACTION_TYPES.CREATE_GRID,\n  settings,\n});\n\nexport const destroyGrid = () => ({\n  type: ACTION_TYPES.DESTROY_GRID,\n});\n","export const UPDATE_GRID = 'UPDATE_GRID';\nexport const CREATE_GRID = 'CREATE_GRID';\nexport const DESTROY_GRID = 'DESTROY_GRID';\n\n","import * as ACTION_TYPES from '../action-types';\n\nexport const startTurn = grid => ({\n  type: ACTION_TYPES.START_TURN,\n  grid,\n});\n\nexport const nextMove = grid => ({\n  type: ACTION_TYPES.NEXT_MOVE,\n  grid,\n});\n\nexport const resetTurn = () => ({\n  type: ACTION_TYPES.RESET_TURN,\n});\n\n","export const START_TURN = 'START_TURN';\nexport const NEXT_MOVE = 'NEXT_MOVE';\nexport const RESET_TURN = 'RESET_TURN';\n","import { List } from \"immutable\";\n\n// **** Helper Functions ***** //\n// **                       ** //\nfunction random(min, max) {\n  return Math.floor(Math.random() * (max - min) + min);\n};\n\n// **** Map Generation Functions ***** //\n// **                               ** //\n\nconst randomiseFill = (grid, fill, rows) => {\n  const forbiddenTiles = [2, 3, 4, 5, 6, 7, 92, 93, 94, 95, 95, 96, 97, 15, 25, 35, 45, 55, 65, 75, 85];\n  let randomisedFill = [];\n\n  for (let i = 0; i < fill.obstacles(); ++i) {\n    let randomFill = random(0, rows * rows - 1);\n\n    if (forbiddenTiles.includes(randomFill)) {\n      --i;\n    } else {\n      randomisedFill.push(randomFill);\n    }\n  };\n\n  console.log(randomisedFill);\n  \n  return randomisedFill;\n};\n\n// **** Grid Creator functions ***** //\n// **                             ** //\n\nconst makeAdjacentMatrix = (grid, rows, columns) => {\n  let newGrid = JSON.parse(JSON.stringify(grid));\n\n  newGrid.forEach((cell, index) => {\n    let adjecent = [];\n\n    let up = index - columns;\n    up > -1 && adjecent.push({ index: up, direction: \"up\" });\n\n    let down = index + columns;\n    down < newGrid.length && adjecent.push({ index: down, direction: \"down\" });\n\n    let left = index - 1;\n    left >= 0 &&\n      index % columns !== 0 &&\n      adjecent.push({ index: left, direction: \"left\" });\n\n    let right = index + 1;\n    right < newGrid.length &&\n      right % columns !== 0 &&\n      adjecent.push({ index: right, direction: \"right\" });\n\n    cell.adjecent = adjecent;\n  });\n\n  return newGrid;\n};\n\nconst fillGrid = (grid, fill, rows) => {\n  let newGrid = JSON.parse(JSON.stringify(grid));\n\n  const randomisedFill = randomiseFill(grid, fill, rows);\n\n  randomisedFill.forEach(obstacle => {\n    newGrid[obstacle].fill = \"X\";\n    newGrid[obstacle].image = \"tree\";\n    newGrid[obstacle].terrain = \"grass\";\n  });\n\n  fill.characters.forEach(character => {\n    newGrid[character.index].fill = character.fill;\n    newGrid[character.index].image = character.image;\n    newGrid[character.index].stats = character;\n  });\n\n  return newGrid;\n};\n\nconst makeGrid = ({ rows, columns, fill }) => {\n  let grid = [];\n  for (let i = 0; i < rows; ++i) {\n    for (let j = 0; j < columns; ++j) {\n      grid.push({\n        index: i * columns + j,\n        fill: \"\",\n        adjecent: [],\n        visited: 0,\n        path: 0,\n        image: \"\",\n        terrain: \"grass\",\n        animation: null,\n        direction: null,\n        sound: \"click\",\n      });\n    }\n  }\n\n  grid = makeAdjacentMatrix(grid, rows, columns);\n\n  grid = fillGrid(grid, fill, rows);\n\n  return List(grid);\n};\n\n// **** Attack Function ***** //\n// **                      ** //\n\nconst calculateAttack = (attacker, defender) => {\n  const attackRoll = random(1, 20);\n  const attack = attacker.attack + attackRoll;\n  const isHit = attack >= defender.ac;\n\n  return {\n    isHit,\n    attack,\n    attackRoll,\n    attackBonus: attacker.attack,\n    defenderAC: defender.ac,\n  };\n};\n\nconst calculateDamage = (attacker, defender) => {\n  const damage = random(attacker.damage[0], attacker.damage[1]);\n  const hp = defender.hp - damage;\n  const isDead = hp <= 0;\n\n  return { isDead, damage, hp };\n};\n\nconst performAttack = (attacker, defender) => {\n  const attackResult = calculateAttack(attacker, defender);\n  const damageResult = attackResult.isHit\n    ? calculateDamage(attacker, defender)\n    : false;\n\n  return { attackResult, damageResult };\n};\n\n// **** Grid Cleanup and Paint functions ***** //\n// **                                       ** //\n\nconst clearPath = grid => {\n  return grid.map(cell => {\n    cell.path = 0;\n    cell.direction = null;\n    return cell;\n  });\n};\n\nconst fillPath = (grid, path) => {\n  let newGrid = clearPath(grid);\n\n  return newGrid.withMutations(newGrid => {\n    path.forEach(cell => {\n      newGrid.setIn([cell.index, \"path\"], 1);\n    });\n  });\n};\n\n// **** Grid Search functions ***** //\n// **\n\n/* asd sasd asd asd */\n\nconst searchForPath = (grid, start, target) => {\n  let newGrid = grid.toJS();\n\n  let paths = [[newGrid[start]]];\n  let finalPath;\n\n  const searchStep = () => {\n    const newPaths = [];\n    paths.forEach(path => {\n      path[path.length - 1].adjecent.forEach(adjecentCell => {\n        if (newGrid[adjecentCell.index].index === target) {\n          finalPath = path;\n          newGrid[adjecentCell.index].direction = adjecentCell.direction;\n          finalPath.push(newGrid[adjecentCell.index]);\n        } else if (\n          newGrid[adjecentCell.index].visited === 0 &&\n          !newGrid[adjecentCell.index].fill\n        ) {\n          newGrid[adjecentCell.index].visited = 1;\n          const newPath = JSON.parse(JSON.stringify(path));\n          newPath.push(newGrid[adjecentCell.index]);\n          newPath[newPath.length - 1].direction = adjecentCell.direction;\n          newPaths.push(newPath);\n        }\n      });\n    });\n    return newPaths;\n  };\n\n  let counter = 0;\n  do {\n    ++counter;\n    if (counter > 299) {\n      console.log(\"time out!\");\n    }\n    paths = searchStep();\n    if (finalPath) {\n      return finalPath;\n    } else if (paths.length === 0) {\n      console.log(\"path impossible!\");\n      return false;\n    }\n  } while (!finalPath && counter < 300);\n};\n\nconst startSearch = (grid, start, target, character) => {\n  let newGrid = grid;\n  let newGridJS = newGrid.toJS();\n\n  const actingCharacter = newGridJS[start].stats;\n  const isAttack =\n    newGridJS[target].stats &&\n    newGridJS[target].stats.player !== actingCharacter.player;\n\n  if ((newGrid.get(target).fill && !isAttack) || (!start && start !== 0)) {\n    return null;\n  }\n\n  let result = searchForPath(grid, start, target);\n\n  let tilesToMove = character.speed;\n  let attackResult;\n  const isAttackPossible =\n    isAttack && result && result.length <= character.speed + 1;\n\n  if (isAttackPossible) {\n    if (result.length > character.speed) {\n      tilesToMove = character.speed;\n    } else {\n      tilesToMove = result.length - 1;\n    }\n    attackResult = performAttack(actingCharacter, newGridJS[target].stats);\n  }\n\n  if (result) {\n    result = result.splice(0, tilesToMove);\n    newGrid = fillPath(grid, result);\n    return { grid: List(newGrid), result, attackResult };\n  } else {\n    return null;\n  }\n};\n\n// **** Grid Move functions ***** //\n// **                          ** //\n\nconst moveCharacter = (grid, character, target) =>\n  grid\n    .setIn([character.index, \"fill\"], \"\")\n    .setIn([character.index, \"image\"], \"\")\n    .setIn([character.index, \"stats\"], \"\")\n    .setIn([target.index, \"image\"], character.image)\n    .setIn([target.index, \"fill\"], character.fill)\n    .setIn([target.index, \"stats\"], character)\n    .setIn([target.index, \"stats\", \"index\"], target.index);\n\nconst clearTile = (grid, tile) =>\n  grid\n    .setIn([tile, \"image\"], \"\")\n    .setIn([tile, \"stats\"], \"\")\n    .setIn([tile, \"fill\"], \"\")\n    .setIn([tile, \"sound\"], \"click\");\n\nconst updateCharacter = (grid, character) =>\n  grid.setIn([character.index, \"stats\"], character.stats);\n\nexport const GridHelper = {\n  makeGrid,\n  startSearch,\n  clearPath,\n  moveCharacter,\n  clearTile,\n  updateCharacter,\n};\n","import { keyframes } from 'styled-components';\n\nconst oppositeDirections = {\n  up: 'down',\n  down: 'up',\n  left: 'right',\n  right: 'left',\n};\n\nconst moveAnimationBuilder = (path, timeUnit, target) => {\n  const isAttacked = target.attackResult;\n  const attackTime = 3;\n\n  let animationString = ` 0% {\n      top: 0%;\n      left: 0%;\n    }\n  `;\n\n  const timePercentage = isAttacked\n    ? 100 / (path.length + attackTime)\n    : 100 / path.length;\n\n  let top = 0,\n    left = 0;\n  let percentage;\n\n  path.forEach((cell, index) => {\n    percentage =\n      path.length - 1 === index && !isAttacked ? 100 : timePercentage * index;\n\n    if (cell.direction === 'up') {\n      top -= 100;\n    } else if (cell.direction === 'down') {\n      top += 100;\n    } else if (cell.direction === 'left') {\n      left -= 100;\n    } else if (cell.direction === 'right') {\n      left += 100;\n    }\n\n    if (index !== 0) {\n      animationString += `\n        ${percentage}% {\n          top: ${top}%;\n          left: ${left}%;\n      }`;\n    }\n  });\n\n  if (isAttacked) {\n    const attackDirection = path[path.length - 1].adjecent.find(\n      cell => cell.index === target.defender.index\n    ).direction;\n    const oppositeDirecetion = oppositeDirections[attackDirection];\n    const topStarting = top;\n    const leftStarting = left;\n\n    percentage = percentage + timePercentage * 2;\n\n    if (oppositeDirecetion === 'up') {\n      top -= 50;\n    } else if (oppositeDirecetion === 'down') {\n      top += 50;\n    } else if (oppositeDirecetion === 'left') {\n      left -= 50;\n    } else if (oppositeDirecetion === 'right') {\n      left += 50;\n    }\n\n    animationString += `\n      ${percentage}% {\n        top: ${top}%;\n        left: ${left}%;\n      }`;\n\n    percentage = percentage + timePercentage / 4;\n\n    animationString += `\n      ${percentage}% {\n        top: ${top}%;\n        left: ${left}%;\n      }`;\n\n    percentage = percentage + timePercentage / 3;\n\n    if (attackDirection === 'up') {\n      top -= 90;\n    } else if (attackDirection === 'down') {\n      top += 90;\n    } else if (attackDirection === 'left') {\n      left -= 90;\n    } else if (attackDirection === 'right') {\n      left += 90;\n    }\n\n    animationString += `\n    ${percentage}% {\n      top: ${top}%;\n      left: ${left}%;\n    }`;\n\n    animationString += `\n      100% {\n        top: ${topStarting}%;\n        left: ${leftStarting}%;\n      }\n    `;\n  }\n\n  const animation = keyframes`\n  ${animationString}\n`;\n  const time = isAttacked\n    ? timeUnit * (path.length + attackTime)\n    : timeUnit * (path.length - 1);\n\n  return { animation, time };\n};\n\nconst selected = keyframes`\n  0% {\n    transform: rotate(0deg);\n  }\n\n  33.2% {\n    transform: rotate(-16deg);\n  }\n\n  83.18% {\n    transform: rotate(8deg);\n  }\n\n  100% {\n    transform: rotate(0deg);\n  }\n  \n`;\n\nexport const Animations = {\n  moveAnimationBuilder,\n  selected,\n};\n","const sortCharacters = (characters, value = 'initiative') => {\n  const sortedCharacters = JSON.parse(JSON.stringify(characters));\n  return sortedCharacters.sort((a, b) => b[value] - a[value]);\n};\n\nconst findCharacters = grid => {\n  const allCharacters = grid\n    .filter((value, index) => value.fill === 'C')\n    .map(character => character.stats);\n  const humanCharacters = allCharacters.filter(\n    value => value.player === 'human',\n  );\n\n  const aiCharacters = allCharacters.filter(value => value.player === 'ai');\n\n  return {\n    allCharacters: allCharacters.toJS(),\n    humanCharacters: humanCharacters.toJS(),\n    aiCharacters: aiCharacters.toJS(),\n  };\n};\n\nconst setNextCharacter = allCharacters => {\n  let newAllCharacters = JSON.parse(JSON.stringify(allCharacters));\n  const lastCharacter = newAllCharacters.shift();\n  return [...newAllCharacters, lastCharacter];\n};\n\nconst updateCharacters = (state, grid) => {\n  let updatedAllCharacters = setNextCharacter(state.turnInfo.get('allCharacters'));\n  const {\n    allCharacters,\n    humanCharacters,\n    aiCharacters,\n  } = TurnFunctions.findCharacters(grid);\n\n  const activeCharacterIds = allCharacters.map(character => character.id);\n\n  updatedAllCharacters = updatedAllCharacters.filter(character => activeCharacterIds.includes(character.id));\n\n  updatedAllCharacters = updatedAllCharacters.map(character => {\n    const toUpdate = allCharacters.find(updateChar => updateChar.id === character.id);\n    character = toUpdate;\n    return character;\n  });\n\n  const activeCharacter = updatedAllCharacters[0];\n\n  return { allCharacters: updatedAllCharacters, aiCharacters, humanCharacters, activeCharacter };\n};\n\nexport const TurnFunctions = {\n  sortCharacters,\n  setNextCharacter,\n  findCharacters,\n  updateCharacters,\n};\n","import { GridHelper } from './grid';\n\nfunction random(min, max) {\n  return Math.floor(Math.random() * (max - min) + min);\n}\n\nconst weightValues = {\n  toHitChance: (attack, AC) => {\n    return attack - AC > 0 ? 100 : -50;\n  },\n  canKill: (targetHP, damageMax) => {\n    return targetHP - damageMax <= 0 ? 200 : 0;\n  },\n  remainingHP: targetHP => (10 - targetHP > 0 ? (10 - targetHP) * 20 : 0),\n  threatLevel: (targetAttack, targetDamageMax) => {\n    return (targetAttack + targetDamageMax) * 10;\n  },\n};\n\nconst assignWeight = moves => {\n  const weightedMoves = moves.map(move => {\n    const activeCharacter = move.stats;\n    const target = move.target;\n    let calculatedWeight = 0;\n    let weightBreakdown = {};\n\n    let weight = 0;\n\n    const toHitChance = weightValues.toHitChance(\n      activeCharacter.attack,\n      target.ac\n    );\n    weight += toHitChance;\n    weightBreakdown.toHitChance = toHitChance;\n\n    const remainingHP = weightValues.remainingHP(target.hp);\n    weight += remainingHP;\n    weightBreakdown.remainingHP = remainingHP;\n\n    const canKill = weightValues.canKill(target.hp, activeCharacter.damage[1]);\n    weight += canKill;\n    weightBreakdown.canKill = canKill;\n\n    const threatLevel = weightValues.threatLevel(\n      target.attack,\n      target.damage[1]\n    );\n    weight += threatLevel;\n    weightBreakdown.threatLevel = threatLevel;\n\n    calculatedWeight = calculatedWeight + weight;\n\n    return { ...move, weight, calculatedWeight, weightBreakdown };\n  });\n\n  return weightedMoves;\n};\n\nconst checkPossibleMoves = (grid, activeCharacter, humanCharacters) => {\n  let possibleMoves = [];\n  let canAttack = false;\n\n  humanCharacters.forEach(character => {\n    const searchResult = GridHelper.startSearch(\n      grid,\n      activeCharacter.index,\n      character.index,\n      activeCharacter\n    );\n\n    if (searchResult) {\n      possibleMoves.push({\n        result: searchResult,\n        index: character.index,\n        target: character,\n        stats: activeCharacter,\n      });\n\n      if (!canAttack && searchResult.attackResult) {\n        console.log('inininin');\n        canAttack = true;\n      }\n    }\n  });\n\n  if (canAttack) {\n    possibleMoves = possibleMoves.filter(move => move.result.attackResult);\n  }\n\n  return assignWeight(possibleMoves);\n};\n\nconst choseMove = moves => {\n  const maxWeight = moves[moves.length - 1].calculatedWeight;\n  const randomPick = random(0, maxWeight);\n\n  for (let i = 0; i < moves.length; i++) {\n    if (randomPick - moves[i].calculatedWeight <= 0) {\n      return moves[i].index;\n    }\n  }\n};\n\nconst calculateAiMove = (grid, activeCharacter, humanCharacters) => {\n  const possibleMoves = checkPossibleMoves(\n    grid,\n    activeCharacter,\n    humanCharacters\n  );\n\n  if (possibleMoves.length > 0) {\n    return choseMove(possibleMoves);\n  } else {\n    return null;\n  }\n};\n\nexport const AiFunctions = {\n  calculateAiMove,\n};\n","import styled from 'styled-components';\nimport { colors, boxShadow } from '../../theme';\n\nexport const StyledCell = styled.div`\n  display: flex;\n  position: relative;\n  background: ${colors.glassTransparent};\n  flex-basis: ${props => props.basis};\n  padding-top: ${props => props.basis};\n  cursor: ${props => props.fill === 'brown' ? 'not-allowed' : 'pointer'};\n  box-shadow: ${boxShadow.standardInset};\n`;\nexport const StyledCellContent = styled.div`\n  justify-content: center;\n  align-items: center;\n  display: flex;\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  top: 0;\n  left: 0;\n  transition: all 400ms ease; \n  background: ${props => props.path ? 'rgba(255, 192, 203, 0.3)' : 'transparent'};\n  &:hover {\n    box-shadow: ${boxShadow.largeInset};\n  }\n`;\n","import styled from 'styled-components';\nimport warrior from './assets/warrior.png';\nimport tree from './assets/tree.png';\nimport goblin from './assets/goblin_regular.png';\nimport { colors, boxShadow } from '../../theme';\nimport { Animations } from '../../logic-functions';\n\nconst background = { warrior, tree, goblin };\nconst playerBorders = {\n  human: colors.greenTransparent,\n  ai: colors.redTransparent,\n};\n\nconst getAnimation = (selected, animation) => {\n  if (animation && animation.animation) {\n    return [animation.animation, `${animation.time}ms linear forwards`];\n  } else if (selected) {\n    return [Animations.selected, '2s linear infinite'];\n  } else {\n    return '';\n  }\n};\n\nexport const StyledCellContentWrapper = styled.div`\n  position: relative;\n  z-index: ${props => props.animation ? '200' : '100'};\n  width: 100%;\n  height: 100%;\n  animation: ${props =>\n    getAnimation(props.selected, props.animation)[0]} ${props =>\n  getAnimation(props.selected, props.animation)[1]};\n`;\n\nexport const StyledCellContent = styled.div`\n  position: relative;\n  z-index: 100;\n  width: 100%;\n  height: 100%;\n  border-radius: 50%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: url(${props => background[props.image]}) center center/cover\n    no-repeat;\n  box-shadow: ${props => (props.player ? boxShadow.standard : '')};\n  transform: ${props => (props.player ? 'scale(0.9)' : '')};\n`;\n\nexport const StyledIndicator = styled.div`\n  width: 90%;\n  height: 90%;\n  left: 5%;\n  top: 5%;\n  position: absolute;\n  border-radius: 50%;\n  background-color: ${props =>\n    props.player ? playerBorders[props.player] : ''};\n`;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { GridActions } from '../../actions';\nimport {\n  StyledCellContent,\n  StyledIndicator,\n  StyledCellContentWrapper,\n} from './styledCellContent';\n\nconst CellContent = props => {\n  const { cell, selected, grid, updateGrid } = props;\n  const { index, stats } = cell;\n  const hp = stats && stats.hp ? stats.hp : null;\n  const player = stats && stats.player;\n\n  if (cell.attack) {\n    let newGrid = grid;\n    setTimeout(() => {\n      newGrid = newGrid.setIn([index, 'attack'], false);\n      updateGrid(newGrid);\n    }, 500);\n  }\n\n  return (\n    <StyledCellContentWrapper selected={selected} animation={cell.animation}>\n      <StyledCellContent\n        selected={selected}\n        image={cell.image}\n        attack={cell.attack}\n        player={player}\n      >\n        {/* <p\n        style={{\n          backgroundColor: hp ? 'rgba(94, 94, 94, 0.6)' : '',\n        }}\n      >{`${hp ? 'hp:' + hp : ''}`}</p> */}\n      </StyledCellContent>\n      <StyledIndicator player={player} />\n    </StyledCellContentWrapper>\n  );\n};\n\nElement.propTypes = {\n  cell: PropTypes.object.isRequired,\n};\n\nElement.defaultProps = {};\n\nconst mapStateToProps = state => ({\n  grid: state.GridReducer.grid,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  updateGrid: grid => dispatch(GridActions.updateGrid(grid)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CellContent);\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { StyledCell, StyledCellContent } from './styledCell';\nimport CellContent from '../CellContent';\nimport AudioComponent from '../AudioComponent';\nimport Sounds from '../../assets/sounds';\n\nconst Cell = props => {\n  const { columns, cell, selected, onClick, onMouseEnter } = props;\n  const [playClickSound, setPlayClickSound] = useState(false);\n  const sound = cell.stats ? cell.stats.sound : '';\n\n  const basis = 100 / columns + '%';\n  let fill = '';\n  if (cell.fill === 'S') {\n    fill = 'lightgreen';\n  } else if (cell.fill === 'X') {\n    fill = 'brown';\n  }\n\n  return (\n    <StyledCell basis={basis} fill={fill} image={cell.terrain}>\n      {playClickSound && sound && selected && (\n        <AudioComponent url={Sounds[sound]} />\n      )}\n      <StyledCellContent\n        onClick={() => {\n          onClick();\n          setPlayClickSound(true);\n        }}\n        selected={selected}\n        onMouseEnter={onMouseEnter}\n        path={cell.path}\n      >\n        <CellContent cell={cell} selected={selected} />\n      </StyledCellContent>\n    </StyledCell>\n  );\n};\n\nElement.propTypes = {\n  cell: PropTypes.object,\n  columns: PropTypes.number.isRequired,\n};\n\nElement.defaultProps = {\n  cell: {},\n};\n\nconst mapStateToProps = state => ({\n  columns: state.ConfigReducer.settings.columns,\n});\n\nconst mapDispatchToProps = dispatch => ({});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Cell);\n","import styled from 'styled-components';\nimport { colors, boxShadow, borderRadius } from '../../../theme';\n\nconst StyledConsole = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-wrap: nowrap;\n  width: 100%;\n  height: calc(50% - 10px);\n  max-height: 50vh;\n  padding: 4px 8px;\n  margin-top: 10px;\n  text-align: left;\n  font-size: 14px;\n  overflow-y: scroll;\n  box-shadow: ${boxShadow.standard};\n  border-radius: ${borderRadius.standard};\n  background-color: ${colors.glassTransparent};\n\n  &::-webkit-scrollbar {\n    -webkit-appearance: none;\n    width: 7px !important;\n  }\n\n  &::-webkit-scrollbar-thumb {\n    border-radius: 4px;\n    background-color: ${colors.gray};\n    box-shadow: ${boxShadow.standard};\n  }\n`;\n\nexport default StyledConsole;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport StyledConsole from './styledConsole';\n\nconst Console = props => {\n  const { action } = props;\n\n  const [actions, setActions] = useState([]);\n\n  useEffect(() => {\n    if (action) {\n      let story = '';\n      const character = action.selected.stats;\n      const index = action.selected.index;\n      const path = action.path;\n      const defender = action.defender ? action.defender.stats : null;\n      const defenderIndex = action.defender ? action.defender.index : null;\n      const attackResult = action.attackResult\n        ? action.attackResult.attackResult\n        : null;\n      const damageResult = action.attackResult\n        ? action.attackResult.damageResult\n        : null;\n\n      story += `<span style='color: purple;'>${character.name}</span>(speed:${character.speed -\n        1}) moved for ${path.length - 1} tiles from tile-${index} to tile-${\n        path[path.length - 1].index\n      }`;\n\n      if (action.defender) {\n        story += `<span style='color: purple;'>${character.name}</span> attacked <span style='color: teal;'>${defender.name}</span> at tile-${defenderIndex}<br>`;\n        story += `${character.name} rolled ${attackResult.attack} 1d20(${\n          attackResult.attackRoll\n        }) + ${attackResult.attackBonus} vs. AC:${\n          attackResult.defenderAC\n        } and ${\n          attackResult.isHit\n            ? `<span style='color: red;'>${damageResult.isDead ? 'KILLED!' : 'HIT!'} for ${damageResult.damage} damage.</span>`\n            : `<span style='color: red;'>MISSED!</span>`\n        }`;\n      }\n\n      story += '<br><br>';\n\n      setActions([story, ...actions]);\n    }\n    // eslint-disable-next-line\n  }, [action]);\n\n  return (\n    <StyledConsole>\n      {actions.map((action, index) => (\n        <p key={index} dangerouslySetInnerHTML={{__html: action}} />\n      ))}\n    </StyledConsole>\n  );\n};\n\nElement.propTypes = {\n  action: PropTypes.object.isRequired,\n};\n\nElement.defaultProps = {};\n\nexport default Console;\n","import styled from 'styled-components';\nimport { colors, boxShadow, borderRadius } from '../../../theme';\n\nconst StyledSidebarInfo = styled.div`\n  display: flex;\n  width: 100%;\n  height: 50%;\n  box-shadow: ${boxShadow.standard};\n  border-radius: ${borderRadius.standard};\n  background-color: ${colors.glass};\n  padding: 4px 8px;\n`;\n\nexport default StyledSidebarInfo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport StyledSidebarInfo from './styledSidebarInfo';\n\nconst SidebarInfo = props => {\n  return (\n    <StyledSidebarInfo>\n      Selected/Hover Info\n    </StyledSidebarInfo>\n  );\n};\n\nElement.propTypes = {};\n\nElement.defaultProps = {};\n\nexport default SidebarInfo;\n","import styled from 'styled-components';\n\nconst StyledSidebar = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-wrap: nowrap;\n  width: 33.3%;\n  padding-left: 10px;\n`;\n\nexport default StyledSidebar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Console from './Console';\nimport SidebarInfo from './SidebarInfo';\nimport StyledSidebar from './styledSidebar';\n\nconst Sidebar = props => {\n  const { action } = props;\n\n  return (\n      <StyledSidebar>\n          <SidebarInfo />\n          <Console action={action}/>\n      </StyledSidebar>\n  );\n};\n\nElement.propTypes = {\n  action: PropTypes.object.isRequired,\n};\n\nElement.defaultProps = {};\n\nexport default Sidebar;\n","import styled from 'styled-components';\nimport warrior from '../CellContent/assets/warrior.png';\nimport goblin from '../CellContent/assets/goblin_regular.png';\n\nconst background = { warrior, goblin };\nconst playerBorders = { human: '2px solid gold', ai: '2px solid red' };\n\nexport const StyledInfoBar = styled.div`\n  display: flex;\n  border: 1px solid darkgray;\n  width: 100%;\n  align-items: center;\n  min-height: 50px;\n`;\n\nexport const StyledPortrait = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100px;\n  width: 100px;\n  margin-left: 5px;\n  border-radius: 50%;\n  background: url(${props => background[props.image]}) center center/cover\n    no-repeat;\n  border: ${props => (props.player ? playerBorders[props.player] : '')};\n\n  p {\n    margin-top: auto;\n    color: rgba(230, 230, 230);\n    font-size: 14px;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { StyledInfoBar, StyledPortrait } from './styledInfoBar';\n\nconst InfoBar = props => {\n  const { allCharacters } = props;\n\n  const mapCharactersToView = characters => {\n    if (!characters) {\n      return;\n    }\n    return characters.map((character, index) => (\n      <StyledPortrait\n        key={index}\n        image={character.image}\n        player={character.player}\n      >\n        <p\n          style={{\n            backgroundColor: 'rgba(94, 94, 94, 0.6)',\n          }}\n        >\n          name: {character.name}\n          <br />\n          init: {character.initiative}\n          <br />\n          hp: {character.hp}\n          <br />\n          att: {character.attack}\n          <br />\n          dmg: {character.damage[0]}-{character.damage[1]}\n        </p>\n      </StyledPortrait>\n    ));\n  };\n\n  return (\n    <>\n      <h3>Turn order:</h3>\n      <StyledInfoBar>{mapCharactersToView(allCharacters)}</StyledInfoBar>\n    </>\n  );\n};\n\nInfoBar.propTypes = {\n  grid: PropTypes.object.isRequired,\n  allCharacters: PropTypes.array,\n};\n\nInfoBar.defaultProps = {\n  allCharacters: [],\n};\n\nconst mapStateToProps = state => ({\n  allCharacters: state.TurnReducer.turnInfo.get('allCharacters'),\n});\n\nconst mapDispatchToProps = dispatch => ({\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InfoBar);\n","import React, { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { StyledGrid, StyledGridWrapper } from './styledGrid';\nimport { GridActions, TurnActions } from '../../actions';\nimport { GridHelper, Animations, AiFunctions } from '../../logic-functions';\nimport Cell from '../Cell';\nimport Sidebar from '../Sidebar';\nimport AudioComponent from '../AudioComponent';\nimport Sounds from '../../assets/sounds';\nimport InforBar from '../InforBar';\n\nconst Grid = props => {\n  let {\n    grid,\n    updateGrid,\n    settings,\n    createGrid,\n    destroyGrid,\n    activeCharacter,\n    allCharacters,\n    startTurn,\n    nextMove,\n    resetTurn,\n    humanCharacters,\n    aiCharacters,\n  } = props;\n\n  const [selected, setSelected] = useState();\n  const [isSelected, setIsSelected] = useState(false);\n  const [selectedCharacter, setSelectedCharacter] = useState({});\n  const [animationProgress, setAnimationProgress] = useState(false);\n  const [playWalkingSound, setPlayWalkingSound] = useState(false);\n  const [action, setAction] = useState();\n\n  const gameInProgress = useRef(false);\n\n  useEffect(() => {\n    if (allCharacters.length > 0) {\n      if (aiCharacters.length < 1) {\n        alert('You win!');\n        endGame();\n      }\n\n      if (humanCharacters.length < 1) {\n        alert('You lose!');\n        endGame();\n      }\n    }\n    // eslint-disable-next-line\n  }, [allCharacters]);\n\n  useEffect(() => {\n    if (activeCharacter && activeCharacter.name) {\n      updateSelectedCharacter(grid.get(activeCharacter.index));\n    }\n    // eslint-disable-next-line\n  }, [activeCharacter]);\n\n  useEffect(() => {\n    if (allCharacters.length === 0 && grid.size > 0) {\n      startTurn(grid);\n    }\n    // eslint-disable-next-line\n  }, [grid]);\n\n  // ai turn calculator\n  useEffect(() => {\n    if (activeCharacter.player === 'ai' && selectedCharacter && selected) {\n      const tileToMove = AiFunctions.calculateAiMove(\n        grid,\n        activeCharacter,\n        humanCharacters\n      );\n\n      if (tileToMove) {\n        const searchResult = startSearch(grid.get(tileToMove));\n\n        if (searchResult.path.length > 0) {\n          setTimeout(() => {\n            animateAndMove(\n              searchResult.path,\n              searchResult.attackResult,\n              searchResult.defenderIndex\n            );\n          }, 300);\n        }\n      } else {\n        // setAnimationProgress(true);\n        setTimeout(() => {\n          nextMoveCheck(grid);\n        }, 500);\n      }\n    }\n\n    // eslint-disable-next-line\n  }, [selectedCharacter]);\n\n  const updateGridCheck = grid => {\n    if (gameInProgress.current) {\n      updateGrid(grid);\n    }\n  };\n\n  const nextMoveCheck = grid => {\n    if (gameInProgress.current) {\n      nextMove(grid);\n    }\n  };\n\n  const startGame = () => {\n    gameInProgress.current = true;\n    createGrid(settings);\n  };\n\n  const endGame = () => {\n    gameInProgress.current = false;\n    destroyGrid();\n    resetTurn();\n  };\n\n  const clearSelectedCharacter = () => {\n    setIsSelected(false);\n    setSelected(null);\n    setSelectedCharacter({});\n    updateGridCheck(GridHelper.clearPath(grid));\n  };\n\n  const updateSelectedCharacter = cell => {\n    setIsSelected(true);\n    setSelected(cell.index);\n    setSelectedCharacter(cell.stats);\n    updateGridCheck(GridHelper.clearPath(grid));\n  };\n\n  const waitFor = time => {\n    return new Promise(resolve => {\n      setTimeout(() => {\n        resolve();\n      }, time);\n    });\n  };\n\n  async function animateAndMove(path, attackResult, defenderIndex) {\n    const isHit = attackResult && attackResult.attackResult.isHit;\n    setPlayWalkingSound(true);\n    setAnimationProgress(true);\n\n    updateGridCheck(\n      grid.setIn(\n        [selected, 'animation'],\n        Animations.moveAnimationBuilder(path, 300, {attackResult, defender: grid.getIn([defenderIndex])})\n      )\n    );\n\n    const attackTime = attackResult ? 900 : 0;\n\n    await waitFor(path.length * 300 + attackTime);\n    clearSelectedCharacter();\n    setPlayWalkingSound(false);\n\n    let newGrid = grid;\n\n    newGrid = GridHelper.moveCharacter(\n      newGrid,\n      selectedCharacter,\n      newGrid.get(path[path.length - 1].index)\n    );\n\n    let defender = attackResult ? newGrid.getIn([defenderIndex]) : null;\n\n    if (defender) {\n      newGrid = newGrid.setIn([defender.index, 'attack'], true);\n    }\n\n    if (isHit) {\n      defender.stats.hp = attackResult.damageResult.hp;\n      if (defender.stats.hp > 0) {\n        newGrid = GridHelper.updateCharacter(newGrid, defender);\n      } else {\n        newGrid = GridHelper.clearTile(newGrid, defenderIndex);\n      }\n    }\n\n    setAction({\n      selected: grid.getIn([selected]),\n      path,\n      attackResult,\n      defender,\n    });\n\n    updateGridCheck(newGrid);\n    await waitFor(attackResult ? 500 : 0);\n    setAnimationProgress(false);\n    nextMoveCheck(newGrid);\n  }\n\n  const onClick = cell => {\n    console.log('cell', cell);\n\n    if (!isSelected || animationProgress || activeCharacter.player === 'ai') {\n      if (cell.fill !== 'C') {\n        return;\n      }\n    } else {\n      const searchResult = startSearch(cell);\n      if (\n        cell.fill !== 'X' &&\n        searchResult.path.length > 0 &&\n        searchResult.moveAllowed\n      ) {\n        animateAndMove(\n          searchResult.path,\n          searchResult.attackResult,\n          searchResult.defenderIndex\n        );\n      }\n    }\n  };\n\n  const startSearch = cell => {\n    const result = GridHelper.startSearch(\n      grid,\n      selected,\n      cell.index,\n      selectedCharacter\n    );\n\n    let moveAllowed = false;\n    let path = [];\n    let attackResult = false;\n\n    if (result && result.grid) {\n      updateGridCheck(result.grid);\n      path = result.result;\n      attackResult = result.attackResult;\n      moveAllowed = true;\n    }\n\n    return { moveAllowed, path, attackResult, defenderIndex: cell.index };\n  };\n\n  return (\n    <StyledGridWrapper>\n      {/* <InforBar grid={grid} /> */}\n      <StyledGrid empty={allCharacters.length === 0}>\n        {playWalkingSound && <AudioComponent url={Sounds.walking} />}\n\n        {allCharacters.length > 0\n          ? grid.map(cell => {\n              const cellSelected = cell.index === selected;\n              return (\n                <Cell\n                  key={cell.index}\n                  cell={cell}\n                  selected={cellSelected}\n                  onClick={() => {\n                    onClick(cell);\n                  }}\n                  onMouseEnter={() => {\n                    isSelected &&\n                      !animationProgress &&\n                      activeCharacter.player !== 'ai' &&\n                      startSearch(cell);\n                  }}\n                />\n              );\n            })\n          : null}\n      </StyledGrid>\n\n      <Sidebar action={action} />\n      <div>\n        <button\n          onClick={() => {\n            endGame();\n          }}\n        >\n          END GAME\n        </button>\n        <button\n          onClick={() => {\n            if (activeCharacter.player !== 'ai') nextMoveCheck(grid);\n          }}\n        >\n          SKIP TURN\n        </button>\n        <button\n          onClick={() => {\n            startGame();\n          }}\n        >\n          START\n        </button>\n      </div>\n    </StyledGridWrapper>\n  );\n};\n\nGrid.propTypes = {\n  updateGrid: PropTypes.func.isRequired,\n  grid: PropTypes.object.isRequired,\n  settings: PropTypes.object.isRequired,\n  createGrid: PropTypes.func.isRequired,\n  destroyGrid: PropTypes.func.isRequired,\n  activeCharacter: PropTypes.object,\n  allCharacters: PropTypes.array.isRequired,\n  startTurn: PropTypes.func.isRequired,\n  nextMove: PropTypes.func.isRequired,\n  resetTurn: PropTypes.func.isRequired,\n};\n\nGrid.defaultProps = {\n  activeCharacter: null,\n};\n\nconst mapStateToProps = state => ({\n  grid: state.GridReducer.grid,\n  settings: state.ConfigReducer.settings,\n  turnInfo: state.TurnReducer.turnInfo,\n  activeCharacter: state.TurnReducer.turnInfo.get('activeCharacter'),\n  allCharacters: state.TurnReducer.turnInfo.get('allCharacters'),\n  humanCharacters: state.TurnReducer.turnInfo.get('humanCharacters'),\n  aiCharacters: state.TurnReducer.turnInfo.get('aiCharacters'),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  updateGrid: grid => dispatch(GridActions.updateGrid(grid)),\n  createGrid: settings => dispatch(GridActions.createGrid(settings)),\n  destroyGrid: () => dispatch(GridActions.destroyGrid()),\n  startTurn: grid => dispatch(TurnActions.startTurn(grid)),\n  nextMove: grid => dispatch(TurnActions.nextMove(grid)),\n  resetTurn: () => dispatch(TurnActions.resetTurn()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Grid);\n","import React from 'react';\nimport Grid from '../../components/Grid';\nimport { StyledContainer } from '../../components/StyledContainer';\n\nconst Battle = props => {\n  return (\n    <StyledContainer>\n      <Grid />\n    </StyledContainer>\n  );\n};\n\nexport default Battle;\n","import { createGlobalStyle } from \"styled-components\";\nimport { colors, fonts } from \"../theme\";\n\nexport const GlobalStyle = createGlobalStyle`\n    body {\n        text-align: center;\n        color: ${colors.black};\n        font-family: ${fonts.regular};\n    }\n\n    * {\n        box-sizing: border-box;\n        margin: 0;\n        padding: 0;\n    }\n\n    ul {\n        list-style: none;\n    }\n\n    html, body, div, span, applet, object, iframe,\n    h1, h2, h3, h4, h5, h6, p, blockquote, pre,\n    a, abbr, acronym, address, big, cite, code,\n    del, dfn, em, img, ins, kbd, q, s, samp,\n    small, strike, strong, sub, sup, tt, var,\n    b, u, i, center,\n    dl, dt, dd, ol, ul, li,\n    fieldset, form, label, legend,\n    table, caption, tbody, tfoot, thead, tr, th, td,\n    article, aside, canvas, details, embed, \n    figure, figcaption, footer, header, hgroup, \n    menu, nav, output, ruby, section, summary,\n    time, mark, audio, video {\n        margin: 0;\n        padding: 0;\n        border: 0;\n        font-size: 100%;\n        font: inherit;\n        vertical-align: baseline;\n    }\n\n    /* HTML5 display-role reset for older browsers */\n    article, aside, details, figcaption, figure, \n    footer, header, hgroup, menu, nav, section {\n        display: block;\n    }\n\n    body {\n        line-height: 1;\n    }\n\n    ol, ul {\n        list-style: none;\n    }\n\n    blockquote, q {\n        quotes: none;\n    }\n\n    blockquote:before, blockquote:after,\n    q:before, q:after {\n        content: '';\n        content: none;\n    }\n\n    table {\n        border-collapse: collapse;\n        border-spacing: 0;\n    }\n\n    a,\n    a:visited,\n    a:focus,\n    a:hover {\n        text-decoration: none;\n        color: inherit;\n    }\n`;\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport GlobalFonts from '../fonts/fonts';\nimport PageWrapper from './PageWrapper';\nimport Home from '../pages/home';\nimport Help from '../pages/help';\nimport Battle from '../pages/battle';\nimport { GlobalStyle } from './GlobalStyle';\nimport { ThemeProvider } from 'styled-components';\nimport theme from '../theme';\nimport routes from './routes';\n\nfunction App() {\n  return (\n    <Router>\n      <ThemeProvider theme={theme}>\n        <GlobalFonts />\n        <GlobalStyle />\n        <PageWrapper>\n          <Switch>\n            <Route exact path={routes.about} component={Help} />\n            <Route exact path={routes.battle} component={Battle} />\n            <Route exact path={routes.home} component={Home} />\n            <Route>\n              <h1>Page not found</h1>\n            </Route>\n          </Switch>\n        </PageWrapper>\n      </ThemeProvider>\n    </Router>\n  );\n}\n\nexport default App;\n","import * as ActionTypes from '../action-types';\nimport { GridHelper } from '../logic-functions';\nimport { List } from 'immutable';\n\n//////////////////\n\nconst DEFAULT_STATE = {\n  grid: new List([]),\n};\n\nconst GridReducer = (state = DEFAULT_STATE, action) => {\n  switch (action.type) {\n    case ActionTypes.UPDATE_GRID: {\n      return {\n        ...state,\n        grid: action.grid,\n      };\n    }\n    case ActionTypes.CREATE_GRID: {\n      return {\n        ...state,\n        grid: GridHelper.makeGrid(action.settings),\n      };\n    }\n    case ActionTypes.DESTROY_GRID: {\n      return {\n        ...state,\n        grid: new List([]),\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default GridReducer;\n","import * as ActionTypes from '../action-types';\n\nconst DEFAULT_STATE = {\n  muted: true,\n  settings: {\n    rows: 10,\n    columns: 10,\n    fill: {\n      rows: 10,\n      obstacles() {\n        return Math.round((this.rows * (this.rows / 2.5)) - (this.rows * 1.5))\n      },\n      characters: [\n        {\n          id: 1,\n          name: 'Victor',\n          type: 'hero',\n          speed: 6,\n          image: 'warrior',\n          index: 4,\n          fill: 'C',\n          sound: 'warrior',\n          hp: 4,\n          attack: +2,\n          ac: 0,\n          damage: [2, 6],\n          player: 'human',\n          initiative: 24,\n        },\n        {\n          id: 2,\n          name: 'Victor S',\n          type: 'hero',\n          speed: 6,\n          image: 'warrior',\n          index: 5,\n          fill: 'C',\n          sound: 'warrior',\n          hp: 4,\n          attack: +2,\n          ac: 15,\n          damage: [2, 6],\n          player: 'human',\n          initiative: 10,\n        },\n        {\n          id: 3,\n          name: 'Goblin',\n          type: 'enemy',\n          speed: 5,\n          image: 'goblin',\n          index: 96,\n          fill: 'C',\n          sound: 'goblin',\n          hp: 6,\n          attack: 0,\n          ac: 8,\n          damage: [1, 4],\n          player: 'ai',\n          initiative: 18,\n        },\n        {\n          id: 4,\n          name: 'Goblin F',\n          type: 'enemy',\n          speed: 6,\n          image: 'goblin',\n          index: 93,\n          fill: 'C',\n          sound: 'goblin',\n          hp: 6,\n          attack: 0,\n          ac: 8,\n          damage: [1, 4],\n          player: 'ai',\n          initiative: 13,\n        },\n        {\n          id: 5,\n          name: 'Goblin',\n          type: 'enemy',\n          speed: 7,\n          image: 'goblin',\n          index: 94,\n          fill: 'C',\n          sound: 'goblin',\n          hp: 6,\n          attack: 0,\n          ac: 8,\n          damage: [1, 4],\n          player: 'ai',\n          initiative: 18,\n        },\n        {\n          id: 6,\n          name: 'Goblin',\n          type: 'enemy',\n          speed: 5,\n          image: 'goblin',\n          index: 95,\n          fill: 'C',\n          sound: 'goblin',\n          hp: 6,\n          attack: 0,\n          ac: 8,\n          damage: [1, 4],\n          player: 'ai',\n          initiative: 18,\n        },\n      ],\n    },\n  },\n};\n\nconst ConfigReducer = (state = DEFAULT_STATE, action) => {\n  switch (action.type) {\n    case ActionTypes.TOGGLE_SOUND: {\n      return {\n        ...state,\n        muted: action.muted,\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default ConfigReducer;\n","export const TOGGLE_SOUND = 'TOGGLE_SOUND';\n\n","import * as ActionTypes from '../action-types';\nimport { Map } from 'immutable';\nimport { TurnFunctions } from '../logic-functions';\n\n//////////////////\n\nconst DEFAULT_STATE = {\n  turnInfo: new Map({\n    currentPlayer: null,\n    activeCharacter: {},\n    turnOrder: [],\n    allCharacters: [],\n    humanCharacters: [],\n    aiCharacters: [],\n  }),\n};\n\nconst TurnReducer = (state = DEFAULT_STATE, action) => {\n  switch (action.type) {\n    case ActionTypes.START_TURN: {\n      let {\n        allCharacters,\n        humanCharacters,\n        aiCharacters,\n      } = TurnFunctions.findCharacters(action.grid);\n\n      allCharacters = TurnFunctions.sortCharacters(allCharacters);\n\n      let turnInfo = state.turnInfo;\n      turnInfo = turnInfo\n        .setIn(['allCharacters'], allCharacters)\n        .setIn(['humanCharacters'], humanCharacters)\n        .setIn(['aiCharacters'], aiCharacters)\n        .setIn(['activeCharacter'], allCharacters[0]);\n\n      return {\n        ...state,\n        turnInfo,\n      };\n    }\n    case ActionTypes.NEXT_MOVE: {\n      let {\n        allCharacters,\n        humanCharacters,\n        aiCharacters,\n        activeCharacter,\n      } = TurnFunctions.updateCharacters(state, action.grid);\n\n      let turnInfo = state.turnInfo;\n      turnInfo = turnInfo\n        .setIn(['allCharacters'], allCharacters)\n        .setIn(['humanCharacters'], humanCharacters)\n        .setIn(['aiCharacters'], aiCharacters)\n        .setIn(['activeCharacter'], activeCharacter);\n\n      return {\n        ...state,\n        turnInfo,\n      };\n    }\n    case ActionTypes.RESET_TURN: {\n      const turnInfo = new Map({\n        currentPlayer: null,\n        activeCharacter: {},\n        turnOrder: [],\n        allCharacters: [],\n        humanCharacters: [],\n        aiCharacters: [],\n      });\n\n      return {\n        ...state,\n        turnInfo,\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default TurnReducer;\n","import {combineReducers} from 'redux';\nimport GridReducer from './GridReducer';\nimport ConfigReducer from './ConfigReducer';\nimport TurnReducer from './TurnReducer';\n\nexport default combineReducers({\n    GridReducer,\n    ConfigReducer,\n    TurnReducer,\n});\n","import {applyMiddleware, createStore} from 'redux';\nimport logger from 'redux-logger';\nimport rootReducer from '../reducers';\n\nconst store = createStore(\n    rootReducer,\n    applyMiddleware(logger)\n);\n\nexport {store as default};\n","import React from 'react';\nimport {Provider} from 'react-redux';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport store from '../store';\n\nReactDOM.render((\n    <Provider store={store}>\n        <App />\n    </Provider>\n), document.getElementById('root'));\n"],"sourceRoot":""}